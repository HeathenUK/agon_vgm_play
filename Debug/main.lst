Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED04-Oct-23     22:03:12     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",8
                           A   144    .DEFINE "baudRate"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "dataBits"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "stopBits"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "parity"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "flowcontrol"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "eir"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 12
                           A   173    .ENDEF
                           A   174    .ENDREC "NONAME3"
                           A   175    .BEGREC "NONAME4",15
                           A   176    .DEFINE "fs"
                           A   177    .VALUE 0
                           A   178    .CLASS 8
                           A   179    .TYPE 46
                           A   180    .ENDEF
                           A   181    .DEFINE "id"
                           A   182    .VALUE 3
                           A   183    .CLASS 8
                           A   184    .TYPE 13
                           A   185    .ENDEF
                           A   186    .DEFINE "attr"
                           A   187    .VALUE 5
                           A   188    .CLASS 8
                           A   189    .TYPE 12
                           A   190    .ENDEF
                           A   191    .DEFINE "stat"
                           A   192    .VALUE 6
                           A   193    .CLASS 8
                           A   194    .TYPE 12
                           A   195    .ENDEF
                           A   196    .DEFINE "sclust"
                           A   197    .VALUE 7
                           A   198    .CLASS 8
                           A   199    .TYPE 15
                           A   200    .ENDEF
                           A   201    .DEFINE "objsize"
                           A   202    .VALUE 11
                           A   203    .CLASS 8
                           A   204    .TYPE 15
                           A   205    .ENDEF
                           A   206    .ENDREC "NONAME4"
                           A   207    .BEGREC "NONAME5",36
                           A   208    .DEFINE "obj"
                           A   209    .VALUE 0
                           A   210    .CLASS 8
                           A   211    .TAG "NONAME4"
                           A   212    .TYPE 8
                           A   213    .ENDEF
                           A   214    .DEFINE "flag"
                           A   215    .VALUE 15
                           A   216    .CLASS 8
                           A   217    .TYPE 12
                           A   218    .ENDEF
                           A   219    .DEFINE "err"
                           A   220    .VALUE 16
                           A   221    .CLASS 8
                           A   222    .TYPE 12
                           A   223    .ENDEF
                           A   224    .DEFINE "fptr"
                           A   225    .VALUE 17
                           A   226    .CLASS 8
                           A   227    .TYPE 15
                           A   228    .ENDEF
                           A   229    .DEFINE "clust"
                           A   230    .VALUE 21
                           A   231    .CLASS 8
                           A   232    .TYPE 15
                           A   233    .ENDEF
                           A   234    .DEFINE "sect"
                           A   235    .VALUE 25
                           A   236    .CLASS 8
                           A   237    .TYPE 15
                           A   238    .ENDEF
                           A   239    .DEFINE "dir_sect"
                           A   240    .VALUE 29
                           A   241    .CLASS 8
                           A   242    .TYPE 15
                           A   243    .ENDEF
                           A   244    .DEFINE "dir_ptr"
                           A   245    .VALUE 33
                           A   246    .CLASS 8
                           A   247    .TYPE 46
                           A   248    .ENDEF
                           A   249    .ENDREC "NONAME5"
                           A   250    ;    1	#include <stdio.h>
                           A   251    ;    2	#include <stdlib.h>
                           A   252    ;    3	#include <ctype.h>
                           A   253    ;    4	#include <stdint.h>
                           A   254    ;    5	#include <string.h>
                           A   255    ;    6	
                           A   256    ;    7	#include <eZ80.h>
                           A   257    ;    8	#include <eZ80F92.h>
                           A   258    ;    9	#include <defines.h>
                           A   259    ;   10	
                           A   260    ;   11	#include "mos-interface.h"
                           A   261    ;   12	#include "vdp.h"
                           A   262    ;   13	#include "agontimer.h"
                           A   263    ;   14	
                           A   264    ;   15	extern void write16bit(UINT16 w);
                           A   265    ;   16	extern void write32bit(UINT32 w);
                           A   266    ;   17	
                           A   267    ;   18	typedef struct {
                           A   268    ;   19	    uint8_t chip_type;
                           A   269    ;   20	    uint8_t chip_variant;
                           A   270    ;   21	    uint32_t clock;
                           A   271    ;   22	    uint8_t n_channels;
                           A   272    ;   23	    uint24_t f_scale;
                           A   273    ;   24	    uint24_t loop_start;
                           A   274    ;   25	
                           A   275    ;   26	    uint8_t header_size;
                           A   276    ;   27	    uint24_t data_start;
                           A   277    ;   28	    uint24_t data_length;
                           A   278    ;   29	
                           A   279    ;   30	    bool loop_enabled;
                           A   280    ;   31	
                           A   281    ;   32	    uint32_t gd3_location;
                           A   282    ;   33	
                           A   283    ;   34	    float volume_multiplier;
                           A   284    ;   35		float stored_multiplier;
                           A   285    ;   36		
                           A   286    ;   37	    bool pause;
                           A   287    ;   38	
                           A   288    ;   39	    char header_data[64];
                           A   289    ;   40		char *song_data;
                           A   290    ;   41	    uint16_t data_pointer;
                           A   291    ;   42	}
                           A   292    ;   43	vgm_info;
                           A   293    .BEGREC "NONAME6",103
                           A   294    .DEFINE "chip_type"
                           A   295    .VALUE 0
                           A   296    .CLASS 8
                           A   297    .TYPE 12
                           A   298    .ENDEF
                           A   299    .DEFINE "chip_variant"
                           A   300    .VALUE 1
                           A   301    .CLASS 8
                           A   302    .TYPE 12
                           A   303    .ENDEF
                           A   304    .DEFINE "clock"
                           A   305    .VALUE 2
                           A   306    .CLASS 8
                           A   307    .TYPE 15
                           A   308    .ENDEF
                           A   309    .DEFINE "n_channels"
                           A   310    .VALUE 6
                           A   311    .CLASS 8
                           A   312    .TYPE 12
                           A   313    .ENDEF
                           A   314    .DEFINE "f_scale"
                           A   315    .VALUE 7
                           A   316    .CLASS 8
                           A   317    .TYPE 14
                           A   318    .ENDEF
                           A   319    .DEFINE "loop_start"
                           A   320    .VALUE 10
                           A   321    .CLASS 8
                           A   322    .TYPE 14
                           A   323    .ENDEF
                           A   324    .DEFINE "header_size"
                           A   325    .VALUE 13
                           A   326    .CLASS 8
                           A   327    .TYPE 12
                           A   328    .ENDEF
                           A   329    .DEFINE "data_start"
                           A   330    .VALUE 14
                           A   331    .CLASS 8
                           A   332    .TYPE 14
                           A   333    .ENDEF
                           A   334    .DEFINE "data_length"
                           A   335    .VALUE 17
                           A   336    .CLASS 8
                           A   337    .TYPE 14
                           A   338    .ENDEF
                           A   339    .DEFINE "loop_enabled"
                           A   340    .VALUE 20
                           A   341    .CLASS 8
                           A   342    .TYPE 12
                           A   343    .ENDEF
                           A   344    .DEFINE "gd3_location"
                           A   345    .VALUE 21
                           A   346    .CLASS 8
                           A   347    .TYPE 15
                           A   348    .ENDEF
                           A   349    .DEFINE "volume_multiplier"
                           A   350    .VALUE 25
                           A   351    .CLASS 8
                           A   352    .TYPE 6
                           A   353    .ENDEF
                           A   354    .DEFINE "stored_multiplier"
                           A   355    .VALUE 29
                           A   356    .CLASS 8
                           A   357    .TYPE 6
                           A   358    .ENDEF
                           A   359    .DEFINE "pause"
                           A   360    .VALUE 33
                           A   361    .CLASS 8
                           A   362    .TYPE 12
                           A   363    .ENDEF
                           A   364    .DEFINE "header_data"
                           A   365    .VALUE 34
                           A   366    .CLASS 8
                           A   367    .DIM 64
                           A   368    .TYPE 98
                           A   369    .ENDEF
                           A   370    .DEFINE "song_data"
                           A   371    .VALUE 98
                           A   372    .CLASS 8
                           A   373    .TYPE 34
                           A   374    .ENDEF
                           A   375    .DEFINE "data_pointer"
                           A   376    .VALUE 101
                           A   377    .CLASS 8
                           A   378    .TYPE 13
                           A   379    .ENDEF
                           A   380    .ENDREC "NONAME6"
                           A   381    ;   44	
                           A   382    ;   45	typedef struct {
                           A   383    ;   46	
                           A   384    ;   47	    uint8_t vgm_file;
                           A   385    ;   48		vgm_info vgm_info;
                           A   386    ;   49		uint8_t state;
                           A   387    ;   50	
                           A   388    ;   51	}
                           A   389    ;   52	game_state;
                           A   390    .BEGREC "NONAME7",105
                           A   391    .DEFINE "vgm_file"
                           A   392    .VALUE 0
                           A   393    .CLASS 8
                           A   394    .TYPE 12
                           A   395    .ENDEF
                           A   396    .DEFINE "vgm_info"
                           A   397    .VALUE 1
                           A   398    .CLASS 8
                           A   399    .TAG "NONAME6"
                           A   400    .TYPE 8
                           A   401    .ENDEF
                           A   402    .DEFINE "state"
                           A   403    .VALUE 104
                           A   404    .CLASS 8
                           A   405    .TYPE 12
                           A   406    .ENDEF
                           A   407    .ENDREC "NONAME7"
                           A   408    	SEGMENT BSS
0443CE                     A   409    _game:
0443CE                     A   410    	DS	105
                           A   411    .DEFINE "game"
                           A   412    .ALIAS "_game"
                           A   413    .CLASS 83
                           A   414    .VALUE _game
                           A   415    .TAG "NONAME7"
                           A   416    .TYPE 8
                           A   417    .ENDEF
                           A   418    ;   53	
                           A   419    ;   54	game_state game;
                           A   420    	SEGMENT CODE
                           A   421    ;   55	
                           A   422    ;   56	void delay_ticks(UINT16 ticks_end) { //
0400E5                     A   423    _delay_ticks:
                           A   424    .DEFINE "_delay_ticks"
                           A   425    
                           A   426    .VALUE _delay_ticks
                           A   427    
                           A   428    .CLASS 2
                           A   429    
                           A   430    .TYPE 65
                           A   431    
                           A   432    .ENDEF
                           A   433    
                           A   434    .BEGFUNC "delay_ticks",56,"_delay_ticks"
                           A   435    
                           A   436    .LINE 56
                           A   437    
                           A   438    .DEFINE "ticks_end"
                           A   439    
                           A   440    .CLASS 65
                           A   441    
                           A   442    .VALUE 6
                           A   443    
                           A   444    .TYPE 13
                           A   445    
                           A   446    .ENDEF
                           A   447    
                           A   448    .DEFINE "ticks"
                           A   449    
                           A   450    .CLASS 65
                           A   451    
                           A   452    .VALUE -4
                           A   453    
                           A   454    .TYPE 15
                           A   455    
                           A   456    .ENDEF
                           A   457    
0400E5 DDE5                A   458    	PUSH	IX
0400E7 DD210000 00         A   459    	LD	IX,0
0400EC DD39                A   460    	ADD	IX,SP
0400EE C5                  A   461    	PUSH	BC
0400EF 3B                  A   462    	DEC	SP
                           A   463    ;   57		
                           A   464    ;   58		UINT32 ticks = 0;
                           A   465    .LINE 58
                           A   466    
0400F0 01000000            A   467    	LD	BC,0
0400F4 AF                  A   468    	XOR	A,A
0400F5 DD0FFC              A   469    	LD	(IX+%FFFFFFFC),BC
0400F8 DD77FF              A   470    	LD	(IX+%FFFFFFFF),A
                           A   471    ;   59		ticks_end *= 6;
                           A   472    .LINE 59
                           A   473    
0400FB 49210600            A   474    	LD.LIS	HL,6
0400FF DD0706              A   475    	LD	BC,(IX+%6)
040102 CD 62 42 04         A   476    	CALL	__smulu
040106 DD7506              A   477    	LD	(IX+%6),L
040109 DD7407              A   478    	LD	(IX+%7),H
                           A   479    ;   60		while(true) {
04010C                     A   480    L_3:
                           A   481    .LINE 60
                           A   482    
                           A   483    ;   61			
                           A   484    ;   62			waitvblank();
                           A   485    .LINE 62
                           A   486    
04010C CD C6 30 04         A   487    	CALL	_waitvblank
                           A   488    ;   63			ticks++;
                           A   489    .LINE 63
                           A   490    
040110 DD27FC              A   491    	LD	HL,(IX+%FFFFFFFC)
040113 DD5EFF              A   492    	LD	E,(IX+%FFFFFFFF)
040116 3E01                A   493    	LD	A,%1
040118 CD F0 35 04         A   494    	CALL	__ladd_b
04011C DD2FFC              A   495    	LD	(IX+%FFFFFFFC),HL
04011F DD73FF              A   496    	LD	(IX+%FFFFFFFF),E
                           A   497    ;   64			if(ticks >= ticks_end) break;
                           A   498    .LINE 64
                           A   499    
040122 DD0706              A   500    	LD	BC,(IX+%6)
040125 CD 60 3A 04         A   501    	CALL	__stoiu
040129 E5C1                A   502    	LD	BC,HL
04012B AF                  A   503    	XOR	A,A
04012C DD27FC              A   504    	LD	HL,(IX+%FFFFFFFC)
04012F DD5EFF              A   505    	LD	E,(IX+%FFFFFFFF)
040132 CD D7 3C 04         A   506    	CALL	__lcmpu
040136 38 D4               A   507    	JR	C,L_3
                           A   508    ;   65			
                           A   509    ;   66		}
                           A   510    ;   67		
                           A   511    ;   68	}
                           A   512    .LINE 68
                           A   513    
040138 DDF9                A   514    	LD	SP,IX
04013A DDE1                A   515    	POP	IX
04013C C9                  A   516    	RET	
                           A   517    
                           A   518    
                           A   519    ;**************************** _delay_ticks ****
                           A   520    ;Name                         Addr/Register   S
                           A   521    ;_waitvblank                         IMPORT  --
                           A   522    ;ticks                                 IX-4    
                           A   523    ;ticks_end                             IX+6    
                           A   524    
                           A   525    
                           A   526    ; Stack Frame Size: 13 (bytes)
                           A   527    ;       Spill Code: 0 (instruction)
                           A   528    
                           A   529    
                           A   530    .ENDFUNC "delay_ticks",68,"_delay_ticks"
                           A   531    ;   69	
                           A   532    ;   70	void delay_cents(UINT16 ticks_end) { //
04013D                     A   533    _delay_cents:
                           A   534    .DEFINE "_delay_cents"
                           A   535    
                           A   536    .VALUE _delay_cents
                           A   537    
                           A   538    .CLASS 2
                           A   539    
                           A   540    .TYPE 65
                           A   541    
                           A   542    .ENDEF
                           A   543    
                           A   544    .BEGFUNC "delay_cents",70,"_delay_cents"
                           A   545    
                           A   546    .LINE 70
                           A   547    
                           A   548    .DEFINE "ticks_end"
                           A   549    
                           A   550    .CLASS 65
                           A   551    
                           A   552    .VALUE 6
                           A   553    
                           A   554    .TYPE 13
                           A   555    
                           A   556    .ENDEF
                           A   557    
                           A   558    .DEFINE "ticks"
                           A   559    
                           A   560    .CLASS 65
                           A   561    
                           A   562    .VALUE -4
                           A   563    
                           A   564    .TYPE 15
                           A   565    
                           A   566    .ENDEF
                           A   567    
04013D DDE5                A   568    	PUSH	IX
04013F DD210000 00         A   569    	LD	IX,0
040144 DD39                A   570    	ADD	IX,SP
040146 C5                  A   571    	PUSH	BC
040147 3B                  A   572    	DEC	SP
                           A   573    ;   71		
                           A   574    ;   72		UINT32 ticks = 0;
                           A   575    .LINE 72
                           A   576    
040148 01000000            A   577    	LD	BC,0
04014C AF                  A   578    	XOR	A,A
04014D DD0FFC              A   579    	LD	(IX+%FFFFFFFC),BC
040150 DD77FF              A   580    	LD	(IX+%FFFFFFFF),A
                           A   581    ;   73		ticks_end *= 6;
                           A   582    .LINE 73
                           A   583    
040153 49210600            A   584    	LD.LIS	HL,6
040157 DD0706              A   585    	LD	BC,(IX+%6)
04015A CD 62 42 04         A   586    	CALL	__smulu
04015E DD7506              A   587    	LD	(IX+%6),L
040161 DD7407              A   588    	LD	(IX+%7),H
                           A   589    ;   74		while(true) {
040164                     A   590    L_8:
                           A   591    .LINE 74
                           A   592    
                           A   593    ;   75			
                           A   594    ;   76			waitvblank();
                           A   595    .LINE 76
                           A   596    
040164 CD C6 30 04         A   597    	CALL	_waitvblank
                           A   598    ;   77			ticks++;
                           A   599    .LINE 77
                           A   600    
040168 DD27FC              A   601    	LD	HL,(IX+%FFFFFFFC)
04016B DD5EFF              A   602    	LD	E,(IX+%FFFFFFFF)
04016E 3E01                A   603    	LD	A,%1
040170 CD F0 35 04         A   604    	CALL	__ladd_b
040174 DD2FFC              A   605    	LD	(IX+%FFFFFFFC),HL
040177 DD73FF              A   606    	LD	(IX+%FFFFFFFF),E
                           A   607    ;   78			if(ticks >= ticks_end) break;
                           A   608    .LINE 78
                           A   609    
04017A DD0706              A   610    	LD	BC,(IX+%6)
04017D CD 60 3A 04         A   611    	CALL	__stoiu
040181 E5C1                A   612    	LD	BC,HL
040183 AF                  A   613    	XOR	A,A
040184 DD27FC              A   614    	LD	HL,(IX+%FFFFFFFC)
040187 DD5EFF              A   615    	LD	E,(IX+%FFFFFFFF)
04018A CD D7 3C 04         A   616    	CALL	__lcmpu
04018E 38 D4               A   617    	JR	C,L_8
                           A   618    ;   79			
                           A   619    ;   80		}
                           A   620    ;   81		
                           A   621    ;   82	}
                           A   622    .LINE 82
                           A   623    
040190 DDF9                A   624    	LD	SP,IX
040192 DDE1                A   625    	POP	IX
040194 C9                  A   626    	RET	
                           A   627    
                           A   628    
                           A   629    ;**************************** _delay_cents ****
                           A   630    ;Name                         Addr/Register   S
                           A   631    ;_waitvblank                         IMPORT  --
                           A   632    ;ticks                                 IX-4    
                           A   633    ;ticks_end                             IX+6    
                           A   634    
                           A   635    
                           A   636    ; Stack Frame Size: 13 (bytes)
                           A   637    ;       Spill Code: 0 (instruction)
                           A   638    
                           A   639    
                           A   640    .ENDFUNC "delay_cents",82,"_delay_cents"
                           A   641    ;   83	
                           A   642    ;   84	void delay_secs(UINT16 ticks_end) { //1
040195                     A   643    _delay_secs:
                           A   644    .DEFINE "_delay_secs"
                           A   645    
                           A   646    .VALUE _delay_secs
                           A   647    
                           A   648    .CLASS 2
                           A   649    
                           A   650    .TYPE 65
                           A   651    
                           A   652    .ENDEF
                           A   653    
                           A   654    .BEGFUNC "delay_secs",84,"_delay_secs"
                           A   655    
                           A   656    .LINE 84
                           A   657    
                           A   658    .DEFINE "ticks_end"
                           A   659    
                           A   660    .CLASS 65
                           A   661    
                           A   662    .VALUE 6
                           A   663    
                           A   664    .TYPE 13
                           A   665    
                           A   666    .ENDEF
                           A   667    
                           A   668    .DEFINE "ticks"
                           A   669    
                           A   670    .CLASS 65
                           A   671    
                           A   672    .VALUE -4
                           A   673    
                           A   674    .TYPE 15
                           A   675    
                           A   676    .ENDEF
                           A   677    
040195 DDE5                A   678    	PUSH	IX
040197 DD210000 00         A   679    	LD	IX,0
04019C DD39                A   680    	ADD	IX,SP
04019E C5                  A   681    	PUSH	BC
04019F 3B                  A   682    	DEC	SP
                           A   683    ;   85		
                           A   684    ;   86		UINT32 ticks = 0;
                           A   685    .LINE 86
                           A   686    
0401A0 01000000            A   687    	LD	BC,0
0401A4 AF                  A   688    	XOR	A,A
0401A5 DD0FFC              A   689    	LD	(IX+%FFFFFFFC),BC
0401A8 DD77FF              A   690    	LD	(IX+%FFFFFFFF),A
                           A   691    ;   87		ticks_end *= 60;
                           A   692    .LINE 87
                           A   693    
0401AB 49213C00            A   694    	LD.LIS	HL,60
0401AF DD0706              A   695    	LD	BC,(IX+%6)
0401B2 CD 62 42 04         A   696    	CALL	__smulu
0401B6 DD7506              A   697    	LD	(IX+%6),L
0401B9 DD7407              A   698    	LD	(IX+%7),H
                           A   699    ;   88		while(true) {
0401BC                     A   700    L_13:
                           A   701    .LINE 88
                           A   702    
                           A   703    ;   89			
                           A   704    ;   90			waitvblank();
                           A   705    .LINE 90
                           A   706    
0401BC CD C6 30 04         A   707    	CALL	_waitvblank
                           A   708    ;   91			ticks++;
                           A   709    .LINE 91
                           A   710    
0401C0 DD27FC              A   711    	LD	HL,(IX+%FFFFFFFC)
0401C3 DD5EFF              A   712    	LD	E,(IX+%FFFFFFFF)
0401C6 3E01                A   713    	LD	A,%1
0401C8 CD F0 35 04         A   714    	CALL	__ladd_b
0401CC DD2FFC              A   715    	LD	(IX+%FFFFFFFC),HL
0401CF DD73FF              A   716    	LD	(IX+%FFFFFFFF),E
                           A   717    ;   92			if(ticks >= ticks_end) break;
                           A   718    .LINE 92
                           A   719    
0401D2 DD0706              A   720    	LD	BC,(IX+%6)
0401D5 CD 60 3A 04         A   721    	CALL	__stoiu
0401D9 E5C1                A   722    	LD	BC,HL
0401DB AF                  A   723    	XOR	A,A
0401DC DD27FC              A   724    	LD	HL,(IX+%FFFFFFFC)
0401DF DD5EFF              A   725    	LD	E,(IX+%FFFFFFFF)
0401E2 CD D7 3C 04         A   726    	CALL	__lcmpu
0401E6 38 D4               A   727    	JR	C,L_13
                           A   728    ;   93			
                           A   729    ;   94		}
                           A   730    ;   95		
                           A   731    ;   96	}
                           A   732    .LINE 96
                           A   733    
0401E8 DDF9                A   734    	LD	SP,IX
0401EA DDE1                A   735    	POP	IX
0401EC C9                  A   736    	RET	
                           A   737    
                           A   738    
                           A   739    ;**************************** _delay_secs *****
                           A   740    ;Name                         Addr/Register   S
                           A   741    ;_waitvblank                         IMPORT  --
                           A   742    ;ticks                                 IX-4    
                           A   743    ;ticks_end                             IX+6    
                           A   744    
                           A   745    
                           A   746    ; Stack Frame Size: 13 (bytes)
                           A   747    ;       Spill Code: 0 (instruction)
                           A   748    
                           A   749    
                           A   750    .ENDFUNC "delay_secs",96,"_delay_secs"
                           A   751    ;   97	
                           A   752    ;   98	bool isKthBitSet(uint8_t data, uint8_t 
0401ED                     A   753    _isKthBitSet:
                           A   754    .DEFINE "_isKthBitSet"
                           A   755    
                           A   756    .VALUE _isKthBitSet
                           A   757    
                           A   758    .CLASS 2
                           A   759    
                           A   760    .TYPE 76
                           A   761    
                           A   762    .ENDEF
                           A   763    
                           A   764    .BEGFUNC "isKthBitSet",98,"_isKthBitSet"
                           A   765    
                           A   766    .LINE 98
                           A   767    
                           A   768    .DEFINE "data"
                           A   769    
                           A   770    .CLASS 65
                           A   771    
                           A   772    .VALUE 6
                           A   773    
                           A   774    .TYPE 12
                           A   775    
                           A   776    .ENDEF
                           A   777    
                           A   778    .DEFINE "k"
                           A   779    
                           A   780    .CLASS 65
                           A   781    
                           A   782    .VALUE 9
                           A   783    
                           A   784    .TYPE 12
                           A   785    
                           A   786    .ENDEF
                           A   787    
0401ED DDE5                A   788    	PUSH	IX
0401EF DD210000 00         A   789    	LD	IX,0
0401F4 DD39                A   790    	ADD	IX,SP
                           A   791    ;   99	    return (data & (1 << k)) != 0;
                           A   792    .LINE 99
                           A   793    
0401F6 DD7E09              A   794    	LD	A,(IX+%9)
0401F9 B7ED62              A   795    	UEXT	HL
0401FC 6F                  A   796    	LD	L,A
0401FD E5C1                A   797    	LD	BC,HL
0401FF 21010000            A   798    	LD	HL,1
040203 CD B8 3D 04         A   799    	CALL	__ishl
040207 7D                  A   800    	LD	A,L
040208 DDA606              A   801    	AND	A,(IX+%6)
04020B 28 04               A   802    	JR	Z,L__7
04020D 3E01                A   803    	LD	A,%1
04020F 18 01               A   804    	JR	L__8
040211                     A   805    L__7:
040211 AF                  A   806    	XOR	A,A
040212                     A   807    L__8:
                           A   808    ;  100	}
                           A   809    .LINE 100
                           A   810    
040212 DDF9                A   811    	LD	SP,IX
040214 DDE1                A   812    	POP	IX
040216 C9                  A   813    	RET	
                           A   814    
                           A   815    
                           A   816    ;**************************** _isKthBitSet ****
                           A   817    ;Name                         Addr/Register   S
                           A   818    ;k                                     IX+9    
                           A   819    ;data                                  IX+6    
                           A   820    
                           A   821    
                           A   822    ; Stack Frame Size: 12 (bytes)
                           A   823    ;       Spill Code: 0 (instruction)
                           A   824    
                           A   825    
                           A   826    .ENDFUNC "isKthBitSet",100,"_isKthBitSet"
                           A   827    ;  101	
                           A   828    ;  102	void channel_ready(int channel) {
040217                     A   829    _channel_ready:
                           A   830    .DEFINE "_channel_ready"
                           A   831    
                           A   832    .VALUE _channel_ready
                           A   833    
                           A   834    .CLASS 2
                           A   835    
                           A   836    .TYPE 65
                           A   837    
                           A   838    .ENDEF
                           A   839    
                           A   840    .BEGFUNC "channel_ready",102,"_channel_ready"
                           A   841    
                           A   842    .LINE 102
                           A   843    
                           A   844    .DEFINE "channel"
                           A   845    
                           A   846    .CLASS 65
                           A   847    
                           A   848    .VALUE 6
                           A   849    
                           A   850    .TYPE 4
                           A   851    
                           A   852    .ENDEF
                           A   853    
040217 DDE5                A   854    	PUSH	IX
040219 DD210000 00         A   855    	LD	IX,0
04021E DD39                A   856    	ADD	IX,SP
                           A   857    ;  103	
                           A   858    ;  104		waitvblank();
                           A   859    .LINE 104
                           A   860    
040220 CD C6 30 04         A   861    	CALL	_waitvblank
                           A   862    ;  105		while (isKthBitSet(getsysvar_audioS
040224                     A   863    L_17:
                           A   864    .LINE 105
                           A   865    
040224 DD4E06              A   866    	LD	C,(IX+%6)
040227 0600                A   867    	LD	B,%0
040229 C5                  A   868    	PUSH	BC
04022A CD 39 31 04         A   869    	CALL	_getsysvar_audioSuccess
04022E 4F                  A   870    	LD	C,A
04022F 0600                A   871    	LD	B,%0
040231 C5                  A   872    	PUSH	BC
040232 CD ED 01 04         A   873    	CALL	_isKthBitSet
040236 C1                  A   874    	POP	BC
040237 C1                  A   875    	POP	BC
040238 B7                  A   876    	OR	A,A
040239 20 E9               A   877    	JR	NZ,L_17
                           A   878    ;  106			//if () break;
                           A   879    ;  107		
                           A   880    ;  108		
                           A   881    ;  109	}
                           A   882    .LINE 109
                           A   883    
04023B DDF9                A   884    	LD	SP,IX
04023D DDE1                A   885    	POP	IX
04023F C9                  A   886    	RET	
                           A   887    
                           A   888    
                           A   889    ;**************************** _channel_ready **
                           A   890    ;Name                         Addr/Register   S
                           A   891    ;_getsysvar_audioSuccess             IMPORT  --
                           A   892    ;_waitvblank                         IMPORT  --
                           A   893    ;channel                               IX+6    
                           A   894    
                           A   895    
                           A   896    ; Stack Frame Size: 9 (bytes)
                           A   897    ;       Spill Code: 0 (instruction)
                           A   898    
                           A   899    
                           A   900    .ENDFUNC "channel_ready",109,"_channel_ready"
                           A   901    ;  110	
                           A   902    ;  111	#define change_volume(channel, volume) 
                           A   903    ;  112	    do { \
                           A   904    ;  113	        putch(23); \
                           A   905    ;  114	        putch(0); \
                           A   906    ;  115	        putch(133); \
                           A   907    ;  116	        putch((channel)); \
                           A   908    ;  117	        putch(2); \
                           A   909    ;  118	        putch((volume)); \
                           A   910    ;  119	    } while (0)
                           A   911    ;  120		
                           A   912    ;  121	
                           A   913    ;  122	/* void change_frequency(UINT8 channel,
                           A   914    ;  123		
                           A   915    ;  124		putch(23);
                           A   916    ;  125		putch(0);
                           A   917    ;  126		putch(133);
                           A   918    ;  127		
                           A   919    ;  128		putch(channel);
                           A   920    ;  129		putch(101); //Non envelope but cust
                           A   921    ;  130		write16bit(frequency);
                           A   922    ;  131		
                           A   923    ;  132	} */
                           A   924    ;  133	
                           A   925    ;  134	#define change_frequency(channel, frequ
                           A   926    ;  135	    do { \
                           A   927    ;  136	        putch(23); \
                           A   928    ;  137	        putch(0); \
                           A   929    ;  138	        putch(133); \
                           A   930    ;  139	        putch((channel)); \
                           A   931    ;  140	        putch(3); \
                           A   932    ;  141	        write16bit((frequency)); \
                           A   933    ;  142	    } while (0)
                           A   934    ;  143	
                           A   935    ;  144	
                           A   936    ;  145	void play_simple(int channel, int vol, 
040240                     A   937    _play_simple:
                           A   938    .DEFINE "_play_simple"
                           A   939    
                           A   940    .VALUE _play_simple
                           A   941    
                           A   942    .CLASS 2
                           A   943    
                           A   944    .TYPE 65
                           A   945    
                           A   946    .ENDEF
                           A   947    
                           A   948    .BEGFUNC "play_simple",145,"_play_simple"
                           A   949    
                           A   950    .LINE 145
                           A   951    
                           A   952    .DEFINE "channel"
                           A   953    
                           A   954    .CLASS 65
                           A   955    
                           A   956    .VALUE 6
                           A   957    
                           A   958    .TYPE 4
                           A   959    
                           A   960    .ENDEF
                           A   961    
                           A   962    .DEFINE "vol"
                           A   963    
                           A   964    .CLASS 65
                           A   965    
                           A   966    .VALUE 9
                           A   967    
                           A   968    .TYPE 4
                           A   969    
                           A   970    .ENDEF
                           A   971    
                           A   972    .DEFINE "duration"
                           A   973    
                           A   974    .CLASS 65
                           A   975    
                           A   976    .VALUE 12
                           A   977    
                           A   978    .TYPE 4
                           A   979    
                           A   980    .ENDEF
                           A   981    
                           A   982    .DEFINE "frequency"
                           A   983    
                           A   984    .CLASS 65
                           A   985    
                           A   986    .VALUE 15
                           A   987    
                           A   988    .TYPE 4
                           A   989    
                           A   990    .ENDEF
                           A   991    
040240 DDE5                A   992    	PUSH	IX
040242 DD210000 00         A   993    	LD	IX,0
040247 DD39                A   994    	ADD	IX,SP
                           A   995    ;  146		
                           A   996    ;  147		
                           A   997    ;  148		putch(23);
                           A   998    .LINE 148
                           A   999    
040249 01170000            A  1000    	LD	BC,23
04024D C5                  A  1001    	PUSH	BC
04024E CD 8C 30 04         A  1002    	CALL	_putch
040252 C1                  A  1003    	POP	BC
                           A  1004    ;  149		putch(0);
                           A  1005    .LINE 149
                           A  1006    
040253 01000000            A  1007    	LD	BC,0
040257 C5                  A  1008    	PUSH	BC
040258 CD 8C 30 04         A  1009    	CALL	_putch
04025C C1                  A  1010    	POP	BC
                           A  1011    ;  150		putch(133);
                           A  1012    .LINE 150
                           A  1013    
04025D 01850000            A  1014    	LD	BC,133
040261 C5                  A  1015    	PUSH	BC
040262 CD 8C 30 04         A  1016    	CALL	_putch
040266 C1                  A  1017    	POP	BC
                           A  1018    ;  151		
                           A  1019    ;  152		putch(channel);
                           A  1020    .LINE 152
                           A  1021    
040267 DD0706              A  1022    	LD	BC,(IX+%6)
04026A C5                  A  1023    	PUSH	BC
04026B CD 8C 30 04         A  1024    	CALL	_putch
04026F C1                  A  1025    	POP	BC
                           A  1026    ;  153		putch(0);
                           A  1027    .LINE 153
                           A  1028    
040270 01000000            A  1029    	LD	BC,0
040274 C5                  A  1030    	PUSH	BC
040275 CD 8C 30 04         A  1031    	CALL	_putch
040279 C1                  A  1032    	POP	BC
                           A  1033    ;  154		putch(vol);
                           A  1034    .LINE 154
                           A  1035    
04027A DD0709              A  1036    	LD	BC,(IX+%9)
04027D C5                  A  1037    	PUSH	BC
04027E CD 8C 30 04         A  1038    	CALL	_putch
040282 C1                  A  1039    	POP	BC
                           A  1040    ;  155		
                           A  1041    ;  156		write16bit(frequency);
                           A  1042    .LINE 156
                           A  1043    
040283 DD070F              A  1044    	LD	BC,(IX+%F)
040286 C5                  A  1045    	PUSH	BC
040287 CD BC 24 04         A  1046    	CALL	_write16bit
04028B C1                  A  1047    	POP	BC
                           A  1048    ;  157		write16bit(duration);
                           A  1049    .LINE 157
                           A  1050    
04028C DD070C              A  1051    	LD	BC,(IX+%C)
04028F C5                  A  1052    	PUSH	BC
040290 CD BC 24 04         A  1053    	CALL	_write16bit
040294 C1                  A  1054    	POP	BC
                           A  1055    ;  158		
                           A  1056    ;  159	}
                           A  1057    .LINE 159
                           A  1058    
040295 DDF9                A  1059    	LD	SP,IX
040297 DDE1                A  1060    	POP	IX
040299 C9                  A  1061    	RET	
                           A  1062    
                           A  1063    
                           A  1064    ;**************************** _play_simple ****
                           A  1065    ;Name                         Addr/Register   S
                           A  1066    ;_write16bit                         IMPORT  --
                           A  1067    ;_putch                              IMPORT  --
                           A  1068    ;frequency                            IX+15    
                           A  1069    ;duration                             IX+12    
                           A  1070    ;vol                                   IX+9    
                           A  1071    ;channel                               IX+6    
                           A  1072    
                           A  1073    
                           A  1074    ; Stack Frame Size: 18 (bytes)
                           A  1075    ;       Spill Code: 0 (instruction)
                           A  1076    
                           A  1077    
                           A  1078    .ENDFUNC "play_simple",159,"_play_simple"
                           A  1079    ;  160	
                           A  1080    ;  161	void reset_channel(uint8_t channel) {
04029A                     A  1081    _reset_channel:
                           A  1082    .DEFINE "_reset_channel"
                           A  1083    
                           A  1084    .VALUE _reset_channel
                           A  1085    
                           A  1086    .CLASS 2
                           A  1087    
                           A  1088    .TYPE 65
                           A  1089    
                           A  1090    .ENDEF
                           A  1091    
                           A  1092    .BEGFUNC "reset_channel",161,"_reset_channel"
                           A  1093    
                           A  1094    .LINE 161
                           A  1095    
                           A  1096    .DEFINE "channel"
                           A  1097    
                           A  1098    .CLASS 65
                           A  1099    
                           A  1100    .VALUE 6
                           A  1101    
                           A  1102    .TYPE 12
                           A  1103    
                           A  1104    .ENDEF
                           A  1105    
04029A DDE5                A  1106    	PUSH	IX
04029C DD210000 00         A  1107    	LD	IX,0
0402A1 DD39                A  1108    	ADD	IX,SP
                           A  1109    ;  162		
                           A  1110    ;  163		
                           A  1111    ;  164		putch(23);
                           A  1112    .LINE 164
                           A  1113    
0402A3 01170000            A  1114    	LD	BC,23
0402A7 C5                  A  1115    	PUSH	BC
0402A8 CD 8C 30 04         A  1116    	CALL	_putch
0402AC C1                  A  1117    	POP	BC
                           A  1118    ;  165		putch(0);
                           A  1119    .LINE 165
                           A  1120    
0402AD 01000000            A  1121    	LD	BC,0
0402B1 C5                  A  1122    	PUSH	BC
0402B2 CD 8C 30 04         A  1123    	CALL	_putch
0402B6 C1                  A  1124    	POP	BC
                           A  1125    ;  166		putch(133);
                           A  1126    .LINE 166
                           A  1127    
0402B7 01850000            A  1128    	LD	BC,133
0402BB C5                  A  1129    	PUSH	BC
0402BC CD 8C 30 04         A  1130    	CALL	_putch
0402C0 C1                  A  1131    	POP	BC
                           A  1132    ;  167		
                           A  1133    ;  168		putch(channel);
                           A  1134    .LINE 168
                           A  1135    
0402C1 DD7E06              A  1136    	LD	A,(IX+%6)
0402C4 B7ED62              A  1137    	UEXT	HL
0402C7 6F                  A  1138    	LD	L,A
0402C8 E5                  A  1139    	PUSH	HL
0402C9 CD 8C 30 04         A  1140    	CALL	_putch
0402CD C1                  A  1141    	POP	BC
                           A  1142    ;  169		putch(10); //Non envelope but custo
                           A  1143    .LINE 169
                           A  1144    
0402CE 010A0000            A  1145    	LD	BC,10
0402D2 C5                  A  1146    	PUSH	BC
0402D3 CD 8C 30 04         A  1147    	CALL	_putch
0402D7 C1                  A  1148    	POP	BC
                           A  1149    ;  170		
                           A  1150    ;  171	}
                           A  1151    .LINE 171
                           A  1152    
0402D8 DDF9                A  1153    	LD	SP,IX
0402DA DDE1                A  1154    	POP	IX
0402DC C9                  A  1155    	RET	
                           A  1156    
                           A  1157    
                           A  1158    ;**************************** _reset_channel **
                           A  1159    ;Name                         Addr/Register   S
                           A  1160    ;_putch                              IMPORT  --
                           A  1161    ;channel                               IX+6    
                           A  1162    
                           A  1163    
                           A  1164    ; Stack Frame Size: 9 (bytes)
                           A  1165    ;       Spill Code: 0 (instruction)
                           A  1166    
                           A  1167    
                           A  1168    .ENDFUNC "reset_channel",171,"_reset_channel"
                           A  1169    ;  172	
                           A  1170    ;  173	void play_simple_force(int channel, int
0402DD                     A  1171    _play_simple_force:
                           A  1172    .DEFINE "_play_simple_force"
                           A  1173    
                           A  1174    .VALUE _play_simple_force
                           A  1175    
                           A  1176    .CLASS 2
                           A  1177    
                           A  1178    .TYPE 65
                           A  1179    
                           A  1180    .ENDEF
                           A  1181    
                           A  1182    .BEGFUNC "play_simple_force",173,"_play_simple_
                           A  1183    
                           A  1184    .LINE 173
                           A  1185    
                           A  1186    .DEFINE "channel"
                           A  1187    
                           A  1188    .CLASS 65
                           A  1189    
                           A  1190    .VALUE 6
                           A  1191    
                           A  1192    .TYPE 4
                           A  1193    
                           A  1194    .ENDEF
                           A  1195    
                           A  1196    .DEFINE "wavetype"
                           A  1197    
                           A  1198    .CLASS 65
                           A  1199    
                           A  1200    .VALUE 9
                           A  1201    
                           A  1202    .TYPE 4
                           A  1203    
                           A  1204    .ENDEF
                           A  1205    
                           A  1206    .DEFINE "vol"
                           A  1207    
                           A  1208    .CLASS 65
                           A  1209    
                           A  1210    .VALUE 12
                           A  1211    
                           A  1212    .TYPE 4
                           A  1213    
                           A  1214    .ENDEF
                           A  1215    
                           A  1216    .DEFINE "frequency"
                           A  1217    
                           A  1218    .CLASS 65
                           A  1219    
                           A  1220    .VALUE 15
                           A  1221    
                           A  1222    .TYPE 4
                           A  1223    
                           A  1224    .ENDEF
                           A  1225    
0402DD DDE5                A  1226    	PUSH	IX
0402DF DD210000 00         A  1227    	LD	IX,0
0402E4 DD39                A  1228    	ADD	IX,SP
                           A  1229    ;  174		
                           A  1230    ;  175		putch(23);
                           A  1231    .LINE 175
                           A  1232    
0402E6 01170000            A  1233    	LD	BC,23
0402EA C5                  A  1234    	PUSH	BC
0402EB CD 8C 30 04         A  1235    	CALL	_putch
0402EF C1                  A  1236    	POP	BC
                           A  1237    ;  176		putch(0);
                           A  1238    .LINE 176
                           A  1239    
0402F0 01000000            A  1240    	LD	BC,0
0402F4 C5                  A  1241    	PUSH	BC
0402F5 CD 8C 30 04         A  1242    	CALL	_putch
0402F9 C1                  A  1243    	POP	BC
                           A  1244    ;  177		putch(133);
                           A  1245    .LINE 177
                           A  1246    
0402FA 01850000            A  1247    	LD	BC,133
0402FE C5                  A  1248    	PUSH	BC
0402FF CD 8C 30 04         A  1249    	CALL	_putch
040303 C1                  A  1250    	POP	BC
                           A  1251    ;  178		
                           A  1252    ;  179		putch(channel);
                           A  1253    .LINE 179
                           A  1254    
040304 DD0706              A  1255    	LD	BC,(IX+%6)
040307 C5                  A  1256    	PUSH	BC
040308 CD 8C 30 04         A  1257    	CALL	_putch
04030C C1                  A  1258    	POP	BC
                           A  1259    ;  180		putch(4); //Non envelope but custom
                           A  1260    .LINE 180
                           A  1261    
04030D 01040000            A  1262    	LD	BC,4
040311 C5                  A  1263    	PUSH	BC
040312 CD 8C 30 04         A  1264    	CALL	_putch
040316 C1                  A  1265    	POP	BC
                           A  1266    ;  181		putch(wavetype);
                           A  1267    .LINE 181
                           A  1268    
040317 DD0709              A  1269    	LD	BC,(IX+%9)
04031A C5                  A  1270    	PUSH	BC
04031B CD 8C 30 04         A  1271    	CALL	_putch
04031F C1                  A  1272    	POP	BC
                           A  1273    ;  182		putch(vol);
                           A  1274    .LINE 182
                           A  1275    
040320 DD070C              A  1276    	LD	BC,(IX+%C)
040323 C5                  A  1277    	PUSH	BC
040324 CD 8C 30 04         A  1278    	CALL	_putch
040328 C1                  A  1279    	POP	BC
                           A  1280    ;  183		
                           A  1281    ;  184		write16bit(frequency);
                           A  1282    .LINE 184
                           A  1283    
040329 DD070F              A  1284    	LD	BC,(IX+%F)
04032C C5                  A  1285    	PUSH	BC
04032D CD BC 24 04         A  1286    	CALL	_write16bit
040331 C1                  A  1287    	POP	BC
                           A  1288    ;  185		write16bit(0);
                           A  1289    .LINE 185
                           A  1290    
040332 01000000            A  1291    	LD	BC,0
040336 C5                  A  1292    	PUSH	BC
040337 CD BC 24 04         A  1293    	CALL	_write16bit
04033B C1                  A  1294    	POP	BC
                           A  1295    ;  186		
                           A  1296    ;  187	}
                           A  1297    .LINE 187
                           A  1298    
04033C DDF9                A  1299    	LD	SP,IX
04033E DDE1                A  1300    	POP	IX
040340 C9                  A  1301    	RET	
                           A  1302    
                           A  1303    
                           A  1304    ;**************************** _play_simple_forc
                           A  1305    ;Name                         Addr/Register   S
                           A  1306    ;_write16bit                         IMPORT  --
                           A  1307    ;_putch                              IMPORT  --
                           A  1308    ;frequency                            IX+15    
                           A  1309    ;vol                                  IX+12    
                           A  1310    ;wavetype                              IX+9    
                           A  1311    ;channel                               IX+6    
                           A  1312    
                           A  1313    
                           A  1314    ; Stack Frame Size: 18 (bytes)
                           A  1315    ;       Spill Code: 0 (instruction)
                           A  1316    
                           A  1317    
                           A  1318    .ENDFUNC "play_simple_force",187,"_play_simple_
                           A  1319    ;  188	
                           A  1320    ;  189	void play_saw_force(int channel, int vo
040341                     A  1321    _play_saw_force:
                           A  1322    .DEFINE "_play_saw_force"
                           A  1323    
                           A  1324    .VALUE _play_saw_force
                           A  1325    
                           A  1326    .CLASS 2
                           A  1327    
                           A  1328    .TYPE 65
                           A  1329    
                           A  1330    .ENDEF
                           A  1331    
                           A  1332    .BEGFUNC "play_saw_force",189,"_play_saw_force"
                           A  1333    
                           A  1334    .LINE 189
                           A  1335    
                           A  1336    .DEFINE "channel"
                           A  1337    
                           A  1338    .CLASS 65
                           A  1339    
                           A  1340    .VALUE 6
                           A  1341    
                           A  1342    .TYPE 4
                           A  1343    
                           A  1344    .ENDEF
                           A  1345    
                           A  1346    .DEFINE "vol"
                           A  1347    
                           A  1348    .CLASS 65
                           A  1349    
                           A  1350    .VALUE 9
                           A  1351    
                           A  1352    .TYPE 4
                           A  1353    
                           A  1354    .ENDEF
                           A  1355    
                           A  1356    .DEFINE "frequency"
                           A  1357    
                           A  1358    .CLASS 65
                           A  1359    
                           A  1360    .VALUE 12
                           A  1361    
                           A  1362    .TYPE 4
                           A  1363    
                           A  1364    .ENDEF
                           A  1365    
040341 DDE5                A  1366    	PUSH	IX
040343 DD210000 00         A  1367    	LD	IX,0
040348 DD39                A  1368    	ADD	IX,SP
                           A  1369    ;  190		
                           A  1370    ;  191		putch(23);
                           A  1371    .LINE 191
                           A  1372    
04034A 01170000            A  1373    	LD	BC,23
04034E C5                  A  1374    	PUSH	BC
04034F CD 8C 30 04         A  1375    	CALL	_putch
040353 C1                  A  1376    	POP	BC
                           A  1377    ;  192		putch(0);
                           A  1378    .LINE 192
                           A  1379    
040354 01000000            A  1380    	LD	BC,0
040358 C5                  A  1381    	PUSH	BC
040359 CD 8C 30 04         A  1382    	CALL	_putch
04035D C1                  A  1383    	POP	BC
                           A  1384    ;  193		putch(133);
                           A  1385    .LINE 193
                           A  1386    
04035E 01850000            A  1387    	LD	BC,133
040362 C5                  A  1388    	PUSH	BC
040363 CD 8C 30 04         A  1389    	CALL	_putch
040367 C1                  A  1390    	POP	BC
                           A  1391    ;  194		
                           A  1392    ;  195		putch(channel);
                           A  1393    .LINE 195
                           A  1394    
040368 DD0706              A  1395    	LD	BC,(IX+%6)
04036B C5                  A  1396    	PUSH	BC
04036C CD 8C 30 04         A  1397    	CALL	_putch
040370 C1                  A  1398    	POP	BC
                           A  1399    ;  196		putch(3); //Simple, play forever
                           A  1400    .LINE 196
                           A  1401    
040371 01030000            A  1402    	LD	BC,3
040375 C5                  A  1403    	PUSH	BC
040376 CD 8C 30 04         A  1404    	CALL	_putch
04037A C1                  A  1405    	POP	BC
                           A  1406    ;  197		putch(vol);
                           A  1407    .LINE 197
                           A  1408    
04037B DD0709              A  1409    	LD	BC,(IX+%9)
04037E C5                  A  1410    	PUSH	BC
04037F CD 8C 30 04         A  1411    	CALL	_putch
040383 C1                  A  1412    	POP	BC
                           A  1413    ;  198		
                           A  1414    ;  199		write16bit(frequency);
                           A  1415    .LINE 199
                           A  1416    
040384 DD070C              A  1417    	LD	BC,(IX+%C)
040387 C5                  A  1418    	PUSH	BC
040388 CD BC 24 04         A  1419    	CALL	_write16bit
04038C C1                  A  1420    	POP	BC
                           A  1421    ;  200		write16bit(2000);
                           A  1422    .LINE 200
                           A  1423    
04038D 01D00700            A  1424    	LD	BC,2000
040391 C5                  A  1425    	PUSH	BC
040392 CD BC 24 04         A  1426    	CALL	_write16bit
040396 C1                  A  1427    	POP	BC
                           A  1428    ;  201		
                           A  1429    ;  202	}
                           A  1430    .LINE 202
                           A  1431    
040397 DDF9                A  1432    	LD	SP,IX
040399 DDE1                A  1433    	POP	IX
04039B C9                  A  1434    	RET	
                           A  1435    
                           A  1436    
                           A  1437    ;**************************** _play_saw_force *
                           A  1438    ;Name                         Addr/Register   S
                           A  1439    ;_write16bit                         IMPORT  --
                           A  1440    ;_putch                              IMPORT  --
                           A  1441    ;frequency                            IX+12    
                           A  1442    ;vol                                   IX+9    
                           A  1443    ;channel                               IX+6    
                           A  1444    
                           A  1445    
                           A  1446    ; Stack Frame Size: 15 (bytes)
                           A  1447    ;       Spill Code: 0 (instruction)
                           A  1448    
                           A  1449    
                           A  1450    .ENDFUNC "play_saw_force",202,"_play_saw_force"
                           A  1451    ;  203	
                           A  1452    ;  204	void play_advanced(int channel, int  at
04039C                     A  1453    _play_advanced:
                           A  1454    .DEFINE "_play_advanced"
                           A  1455    
                           A  1456    .VALUE _play_advanced
                           A  1457    
                           A  1458    .CLASS 2
                           A  1459    
                           A  1460    .TYPE 65
                           A  1461    
                           A  1462    .ENDEF
                           A  1463    
                           A  1464    .BEGFUNC "play_advanced",204,"_play_advanced"
                           A  1465    
                           A  1466    .LINE 204
                           A  1467    
                           A  1468    .DEFINE "channel"
                           A  1469    
                           A  1470    .CLASS 65
                           A  1471    
                           A  1472    .VALUE 6
                           A  1473    
                           A  1474    .TYPE 4
                           A  1475    
                           A  1476    .ENDEF
                           A  1477    
                           A  1478    .DEFINE "attack"
                           A  1479    
                           A  1480    .CLASS 65
                           A  1481    
                           A  1482    .VALUE 9
                           A  1483    
                           A  1484    .TYPE 4
                           A  1485    
                           A  1486    .ENDEF
                           A  1487    
                           A  1488    .DEFINE "decay"
                           A  1489    
                           A  1490    .CLASS 65
                           A  1491    
                           A  1492    .VALUE 12
                           A  1493    
                           A  1494    .TYPE 4
                           A  1495    
                           A  1496    .ENDEF
                           A  1497    
                           A  1498    .DEFINE "sustain"
                           A  1499    
                           A  1500    .CLASS 65
                           A  1501    
                           A  1502    .VALUE 15
                           A  1503    
                           A  1504    .TYPE 4
                           A  1505    
                           A  1506    .ENDEF
                           A  1507    
                           A  1508    .DEFINE "release"
                           A  1509    
                           A  1510    .CLASS 65
                           A  1511    
                           A  1512    .VALUE 18
                           A  1513    
                           A  1514    .TYPE 4
                           A  1515    
                           A  1516    .ENDEF
                           A  1517    
                           A  1518    .DEFINE "wavetype"
                           A  1519    
                           A  1520    .CLASS 65
                           A  1521    
                           A  1522    .VALUE 21
                           A  1523    
                           A  1524    .TYPE 4
                           A  1525    
                           A  1526    .ENDEF
                           A  1527    
                           A  1528    .DEFINE "peakvol"
                           A  1529    
                           A  1530    .CLASS 65
                           A  1531    
                           A  1532    .VALUE 24
                           A  1533    
                           A  1534    .TYPE 4
                           A  1535    
                           A  1536    .ENDEF
                           A  1537    
                           A  1538    .DEFINE "duration"
                           A  1539    
                           A  1540    .CLASS 65
                           A  1541    
                           A  1542    .VALUE 27
                           A  1543    
                           A  1544    .TYPE 4
                           A  1545    
                           A  1546    .ENDEF
                           A  1547    
                           A  1548    .DEFINE "frequency"
                           A  1549    
                           A  1550    .CLASS 65
                           A  1551    
                           A  1552    .VALUE 30
                           A  1553    
                           A  1554    .TYPE 4
                           A  1555    
                           A  1556    .ENDEF
                           A  1557    
                           A  1558    .DEFINE "freq_end"
                           A  1559    
                           A  1560    .CLASS 65
                           A  1561    
                           A  1562    .VALUE 33
                           A  1563    
                           A  1564    .TYPE 4
                           A  1565    
                           A  1566    .ENDEF
                           A  1567    
                           A  1568    .DEFINE "end_style"
                           A  1569    
                           A  1570    .CLASS 65
                           A  1571    
                           A  1572    .VALUE 36
                           A  1573    
                           A  1574    .TYPE 4
                           A  1575    
                           A  1576    .ENDEF
                           A  1577    
04039C DDE5                A  1578    	PUSH	IX
04039E DD210000 00         A  1579    	LD	IX,0
0403A3 DD39                A  1580    	ADD	IX,SP
                           A  1581    ;  205		
                           A  1582    ;  206		channel_ready(channel);
                           A  1583    .LINE 206
                           A  1584    
0403A5 DD0706              A  1585    	LD	BC,(IX+%6)
0403A8 C5                  A  1586    	PUSH	BC
0403A9 CD 17 02 04         A  1587    	CALL	_channel_ready
0403AD C1                  A  1588    	POP	BC
                           A  1589    ;  207		
                           A  1590    ;  208		putch(23);
                           A  1591    .LINE 208
                           A  1592    
0403AE 01170000            A  1593    	LD	BC,23
0403B2 C5                  A  1594    	PUSH	BC
0403B3 CD 8C 30 04         A  1595    	CALL	_putch
0403B7 C1                  A  1596    	POP	BC
                           A  1597    ;  209		putch(0);
                           A  1598    .LINE 209
                           A  1599    
0403B8 01000000            A  1600    	LD	BC,0
0403BC C5                  A  1601    	PUSH	BC
0403BD CD 8C 30 04         A  1602    	CALL	_putch
0403C1 C1                  A  1603    	POP	BC
                           A  1604    ;  210		putch(133);
                           A  1605    .LINE 210
                           A  1606    
0403C2 01850000            A  1607    	LD	BC,133
0403C6 C5                  A  1608    	PUSH	BC
0403C7 CD 8C 30 04         A  1609    	CALL	_putch
0403CB C1                  A  1610    	POP	BC
                           A  1611    ;  211		
                           A  1612    ;  212		putch(channel);
                           A  1613    .LINE 212
                           A  1614    
0403CC DD0706              A  1615    	LD	BC,(IX+%6)
0403CF C5                  A  1616    	PUSH	BC
0403D0 CD 8C 30 04         A  1617    	CALL	_putch
0403D4 C1                  A  1618    	POP	BC
                           A  1619    ;  213		putch(2);
                           A  1620    .LINE 213
                           A  1621    
0403D5 01020000            A  1622    	LD	BC,2
0403D9 C5                  A  1623    	PUSH	BC
0403DA CD 8C 30 04         A  1624    	CALL	_putch
0403DE C1                  A  1625    	POP	BC
                           A  1626    ;  214		putch(wavetype);
                           A  1627    .LINE 214
                           A  1628    
0403DF DD0715              A  1629    	LD	BC,(IX+%15)
0403E2 C5                  A  1630    	PUSH	BC
0403E3 CD 8C 30 04         A  1631    	CALL	_putch
0403E7 C1                  A  1632    	POP	BC
                           A  1633    ;  215		putch(peakvol);
                           A  1634    .LINE 215
                           A  1635    
0403E8 DD0718              A  1636    	LD	BC,(IX+%18)
0403EB C5                  A  1637    	PUSH	BC
0403EC CD 8C 30 04         A  1638    	CALL	_putch
0403F0 C1                  A  1639    	POP	BC
                           A  1640    ;  216	
                           A  1641    ;  217		write16bit(frequency);
                           A  1642    .LINE 217
                           A  1643    
0403F1 DD071E              A  1644    	LD	BC,(IX+%1E)
0403F4 C5                  A  1645    	PUSH	BC
0403F5 CD BC 24 04         A  1646    	CALL	_write16bit
0403F9 C1                  A  1647    	POP	BC
                           A  1648    ;  218		write16bit(duration);
                           A  1649    .LINE 218
                           A  1650    
0403FA DD071B              A  1651    	LD	BC,(IX+%1B)
0403FD C5                  A  1652    	PUSH	BC
0403FE CD BC 24 04         A  1653    	CALL	_write16bit
040402 C1                  A  1654    	POP	BC
                           A  1655    ;  219		write16bit(attack);
                           A  1656    .LINE 219
                           A  1657    
040403 DD0709              A  1658    	LD	BC,(IX+%9)
040406 C5                  A  1659    	PUSH	BC
040407 CD BC 24 04         A  1660    	CALL	_write16bit
04040B C1                  A  1661    	POP	BC
                           A  1662    ;  220		putch(sustain);
                           A  1663    .LINE 220
                           A  1664    
04040C DD070F              A  1665    	LD	BC,(IX+%F)
04040F C5                  A  1666    	PUSH	BC
040410 CD 8C 30 04         A  1667    	CALL	_putch
040414 C1                  A  1668    	POP	BC
                           A  1669    ;  221		write16bit(decay);
                           A  1670    .LINE 221
                           A  1671    
040415 DD070C              A  1672    	LD	BC,(IX+%C)
040418 C5                  A  1673    	PUSH	BC
040419 CD BC 24 04         A  1674    	CALL	_write16bit
04041D C1                  A  1675    	POP	BC
                           A  1676    ;  222		write16bit(release);
                           A  1677    .LINE 222
                           A  1678    
04041E DD0712              A  1679    	LD	BC,(IX+%12)
040421 C5                  A  1680    	PUSH	BC
040422 CD BC 24 04         A  1681    	CALL	_write16bit
040426 C1                  A  1682    	POP	BC
                           A  1683    ;  223		write16bit(freq_end);
                           A  1684    .LINE 223
                           A  1685    
040427 DD0721              A  1686    	LD	BC,(IX+%21)
04042A C5                  A  1687    	PUSH	BC
04042B CD BC 24 04         A  1688    	CALL	_write16bit
04042F C1                  A  1689    	POP	BC
                           A  1690    ;  224		putch(end_style);
                           A  1691    .LINE 224
                           A  1692    
040430 DD0724              A  1693    	LD	BC,(IX+%24)
040433 C5                  A  1694    	PUSH	BC
040434 CD 8C 30 04         A  1695    	CALL	_putch
040438 C1                  A  1696    	POP	BC
                           A  1697    ;  225			
                           A  1698    ;  226	}
                           A  1699    .LINE 226
                           A  1700    
040439 DDF9                A  1701    	LD	SP,IX
04043B DDE1                A  1702    	POP	IX
04043D C9                  A  1703    	RET	
                           A  1704    
                           A  1705    
                           A  1706    ;**************************** _play_advanced **
                           A  1707    ;Name                         Addr/Register   S
                           A  1708    ;_write16bit                         IMPORT  --
                           A  1709    ;_putch                              IMPORT  --
                           A  1710    ;end_style                            IX+36    
                           A  1711    ;freq_end                             IX+33    
                           A  1712    ;frequency                            IX+30    
                           A  1713    ;duration                             IX+27    
                           A  1714    ;peakvol                              IX+24    
                           A  1715    ;wavetype                             IX+21    
                           A  1716    ;release                              IX+18    
                           A  1717    ;sustain                              IX+15    
                           A  1718    ;decay                                IX+12    
                           A  1719    ;attack                                IX+9    
                           A  1720    ;channel                               IX+6    
                           A  1721    
                           A  1722    
                           A  1723    ; Stack Frame Size: 39 (bytes)
                           A  1724    ;       Spill Code: 0 (instruction)
                           A  1725    
                           A  1726    
                           A  1727    .ENDFUNC "play_advanced",226,"_play_advanced"
                           A  1728    ;  227	
                           A  1729    ;  228	void play_advanced_keep(int channel, in
04043E                     A  1730    _play_advanced_keep:
                           A  1731    .DEFINE "_play_advanced_keep"
                           A  1732    
                           A  1733    .VALUE _play_advanced_keep
                           A  1734    
                           A  1735    .CLASS 2
                           A  1736    
                           A  1737    .TYPE 65
                           A  1738    
                           A  1739    .ENDEF
                           A  1740    
                           A  1741    .BEGFUNC "play_advanced_keep",228,"_play_advanc
                           A  1742    
                           A  1743    .LINE 228
                           A  1744    
                           A  1745    .DEFINE "channel"
                           A  1746    
                           A  1747    .CLASS 65
                           A  1748    
                           A  1749    .VALUE 6
                           A  1750    
                           A  1751    .TYPE 4
                           A  1752    
                           A  1753    .ENDEF
                           A  1754    
                           A  1755    .DEFINE "peakvol"
                           A  1756    
                           A  1757    .CLASS 65
                           A  1758    
                           A  1759    .VALUE 9
                           A  1760    
                           A  1761    .TYPE 4
                           A  1762    
                           A  1763    .ENDEF
                           A  1764    
                           A  1765    .DEFINE "duration"
                           A  1766    
                           A  1767    .CLASS 65
                           A  1768    
                           A  1769    .VALUE 12
                           A  1770    
                           A  1771    .TYPE 4
                           A  1772    
                           A  1773    .ENDEF
                           A  1774    
                           A  1775    .DEFINE "frequency"
                           A  1776    
                           A  1777    .CLASS 65
                           A  1778    
                           A  1779    .VALUE 15
                           A  1780    
                           A  1781    .TYPE 4
                           A  1782    
                           A  1783    .ENDEF
                           A  1784    
04043E DDE5                A  1785    	PUSH	IX
040440 DD210000 00         A  1786    	LD	IX,0
040445 DD39                A  1787    	ADD	IX,SP
                           A  1788    ;  229		
                           A  1789    ;  230		channel_ready(channel);
                           A  1790    .LINE 230
                           A  1791    
040447 DD0706              A  1792    	LD	BC,(IX+%6)
04044A C5                  A  1793    	PUSH	BC
04044B CD 17 02 04         A  1794    	CALL	_channel_ready
04044F C1                  A  1795    	POP	BC
                           A  1796    ;  231		
                           A  1797    ;  232		putch(23);
                           A  1798    .LINE 232
                           A  1799    
040450 01170000            A  1800    	LD	BC,23
040454 C5                  A  1801    	PUSH	BC
040455 CD 8C 30 04         A  1802    	CALL	_putch
040459 C1                  A  1803    	POP	BC
                           A  1804    ;  233		putch(0);
                           A  1805    .LINE 233
                           A  1806    
04045A 01000000            A  1807    	LD	BC,0
04045E C5                  A  1808    	PUSH	BC
04045F CD 8C 30 04         A  1809    	CALL	_putch
040463 C1                  A  1810    	POP	BC
                           A  1811    ;  234		putch(133);
                           A  1812    .LINE 234
                           A  1813    
040464 01850000            A  1814    	LD	BC,133
040468 C5                  A  1815    	PUSH	BC
040469 CD 8C 30 04         A  1816    	CALL	_putch
04046D C1                  A  1817    	POP	BC
                           A  1818    ;  235		
                           A  1819    ;  236		putch(channel);
                           A  1820    .LINE 236
                           A  1821    
04046E DD0706              A  1822    	LD	BC,(IX+%6)
040471 C5                  A  1823    	PUSH	BC
040472 CD 8C 30 04         A  1824    	CALL	_putch
040476 C1                  A  1825    	POP	BC
                           A  1826    ;  237		putch(6);
                           A  1827    .LINE 237
                           A  1828    
040477 01060000            A  1829    	LD	BC,6
04047B C5                  A  1830    	PUSH	BC
04047C CD 8C 30 04         A  1831    	CALL	_putch
040480 C1                  A  1832    	POP	BC
                           A  1833    ;  238		
                           A  1834    ;  239		putch(peakvol);
                           A  1835    .LINE 239
                           A  1836    
040481 DD0709              A  1837    	LD	BC,(IX+%9)
040484 C5                  A  1838    	PUSH	BC
040485 CD 8C 30 04         A  1839    	CALL	_putch
040489 C1                  A  1840    	POP	BC
                           A  1841    ;  240		write16bit(frequency);
                           A  1842    .LINE 240
                           A  1843    
04048A DD070F              A  1844    	LD	BC,(IX+%F)
04048D C5                  A  1845    	PUSH	BC
04048E CD BC 24 04         A  1846    	CALL	_write16bit
040492 C1                  A  1847    	POP	BC
                           A  1848    ;  241		write16bit(duration);
                           A  1849    .LINE 241
                           A  1850    
040493 DD070C              A  1851    	LD	BC,(IX+%C)
040496 C5                  A  1852    	PUSH	BC
040497 CD BC 24 04         A  1853    	CALL	_write16bit
04049B C1                  A  1854    	POP	BC
                           A  1855    ;  242			
                           A  1856    ;  243	}
                           A  1857    .LINE 243
                           A  1858    
04049C DDF9                A  1859    	LD	SP,IX
04049E DDE1                A  1860    	POP	IX
0404A0 C9                  A  1861    	RET	
                           A  1862    
                           A  1863    
                           A  1864    ;**************************** _play_advanced_ke
                           A  1865    ;Name                         Addr/Register   S
                           A  1866    ;_write16bit                         IMPORT  --
                           A  1867    ;_putch                              IMPORT  --
                           A  1868    ;frequency                            IX+15    
                           A  1869    ;duration                             IX+12    
                           A  1870    ;peakvol                               IX+9    
                           A  1871    ;channel                               IX+6    
                           A  1872    
                           A  1873    
                           A  1874    ; Stack Frame Size: 18 (bytes)
                           A  1875    ;       Spill Code: 0 (instruction)
                           A  1876    
                           A  1877    
                           A  1878    .ENDFUNC "play_advanced_keep",243,"_play_advanc
                           A  1879    ;  244	
                           A  1880    ;  245	void play_sample(UINT8 channel, UINT8 s
0404A1                     A  1881    _play_sample:
                           A  1882    .DEFINE "_play_sample"
                           A  1883    
                           A  1884    .VALUE _play_sample
                           A  1885    
                           A  1886    .CLASS 2
                           A  1887    
                           A  1888    .TYPE 65
                           A  1889    
                           A  1890    .ENDEF
                           A  1891    
                           A  1892    .BEGFUNC "play_sample",245,"_play_sample"
                           A  1893    
                           A  1894    .LINE 245
                           A  1895    
                           A  1896    .DEFINE "channel"
                           A  1897    
                           A  1898    .CLASS 65
                           A  1899    
                           A  1900    .VALUE 6
                           A  1901    
                           A  1902    .TYPE 12
                           A  1903    
                           A  1904    .ENDEF
                           A  1905    
                           A  1906    .DEFINE "sample_id"
                           A  1907    
                           A  1908    .CLASS 65
                           A  1909    
                           A  1910    .VALUE 9
                           A  1911    
                           A  1912    .TYPE 12
                           A  1913    
                           A  1914    .ENDEF
                           A  1915    
                           A  1916    .DEFINE "volume"
                           A  1917    
                           A  1918    .CLASS 65
                           A  1919    
                           A  1920    .VALUE 12
                           A  1921    
                           A  1922    .TYPE 12
                           A  1923    
                           A  1924    .ENDEF
                           A  1925    
0404A1 DDE5                A  1926    	PUSH	IX
0404A3 DD210000 00         A  1927    	LD	IX,0
0404A8 DD39                A  1928    	ADD	IX,SP
                           A  1929    ;  246		
                           A  1930    ;  247		channel_ready(channel);
                           A  1931    .LINE 247
                           A  1932    
0404AA DD7E06              A  1933    	LD	A,(IX+%6)
0404AD B7ED62              A  1934    	UEXT	HL
0404B0 6F                  A  1935    	LD	L,A
0404B1 E5                  A  1936    	PUSH	HL
0404B2 CD 17 02 04         A  1937    	CALL	_channel_ready
0404B6 C1                  A  1938    	POP	BC
                           A  1939    ;  248		
                           A  1940    ;  249		putch(23);
                           A  1941    .LINE 249
                           A  1942    
0404B7 01170000            A  1943    	LD	BC,23
0404BB C5                  A  1944    	PUSH	BC
0404BC CD 8C 30 04         A  1945    	CALL	_putch
0404C0 C1                  A  1946    	POP	BC
                           A  1947    ;  250		putch(0);
                           A  1948    .LINE 250
                           A  1949    
0404C1 01000000            A  1950    	LD	BC,0
0404C5 C5                  A  1951    	PUSH	BC
0404C6 CD 8C 30 04         A  1952    	CALL	_putch
0404CA C1                  A  1953    	POP	BC
                           A  1954    ;  251		putch(133);
                           A  1955    .LINE 251
                           A  1956    
0404CB 01850000            A  1957    	LD	BC,133
0404CF C5                  A  1958    	PUSH	BC
0404D0 CD 8C 30 04         A  1959    	CALL	_putch
0404D4 C1                  A  1960    	POP	BC
                           A  1961    ;  252		
                           A  1962    ;  253		putch(channel);
                           A  1963    .LINE 253
                           A  1964    
0404D5 DD7E06              A  1965    	LD	A,(IX+%6)
0404D8 B7ED62              A  1966    	UEXT	HL
0404DB 6F                  A  1967    	LD	L,A
0404DC E5                  A  1968    	PUSH	HL
0404DD CD 8C 30 04         A  1969    	CALL	_putch
0404E1 C1                  A  1970    	POP	BC
                           A  1971    ;  254		putch(5);
                           A  1972    .LINE 254
                           A  1973    
0404E2 01050000            A  1974    	LD	BC,5
0404E6 C5                  A  1975    	PUSH	BC
0404E7 CD 8C 30 04         A  1976    	CALL	_putch
0404EB C1                  A  1977    	POP	BC
                           A  1978    ;  255		putch(sample_id);
                           A  1979    .LINE 255
                           A  1980    
0404EC DD7E09              A  1981    	LD	A,(IX+%9)
0404EF B7ED62              A  1982    	UEXT	HL
0404F2 6F                  A  1983    	LD	L,A
0404F3 E5                  A  1984    	PUSH	HL
0404F4 CD 8C 30 04         A  1985    	CALL	_putch
0404F8 C1                  A  1986    	POP	BC
                           A  1987    ;  256		putch(1); //Playback mode
                           A  1988    .LINE 256
                           A  1989    
0404F9 01010000            A  1990    	LD	BC,1
0404FD C5                  A  1991    	PUSH	BC
0404FE CD 8C 30 04         A  1992    	CALL	_putch
040502 C1                  A  1993    	POP	BC
                           A  1994    ;  257		
                           A  1995    ;  258		putch(volume);
                           A  1996    .LINE 258
                           A  1997    
040503 DD7E0C              A  1998    	LD	A,(IX+%C)
040506 B7ED62              A  1999    	UEXT	HL
040509 6F                  A  2000    	LD	L,A
04050A E5                  A  2001    	PUSH	HL
04050B CD 8C 30 04         A  2002    	CALL	_putch
04050F C1                  A  2003    	POP	BC
                           A  2004    ;  259		
                           A  2005    ;  260	}
                           A  2006    .LINE 260
                           A  2007    
040510 DDF9                A  2008    	LD	SP,IX
040512 DDE1                A  2009    	POP	IX
040514 C9                  A  2010    	RET	
                           A  2011    
                           A  2012    
                           A  2013    ;**************************** _play_sample ****
                           A  2014    ;Name                         Addr/Register   S
                           A  2015    ;_putch                              IMPORT  --
                           A  2016    ;volume                               IX+12    
                           A  2017    ;sample_id                             IX+9    
                           A  2018    ;channel                               IX+6    
                           A  2019    
                           A  2020    
                           A  2021    ; Stack Frame Size: 15 (bytes)
                           A  2022    ;       Spill Code: 0 (instruction)
                           A  2023    
                           A  2024    
                           A  2025    .ENDFUNC "play_sample",260,"_play_sample"
                           A  2026    ;  261	
                           A  2027    ;  262	void load_wav(const char* filename, uin
040515                     A  2028    _load_wav:
                           A  2029    .DEFINE "_load_wav"
                           A  2030    
                           A  2031    .VALUE _load_wav
                           A  2032    
                           A  2033    .CLASS 2
                           A  2034    
                           A  2035    .TYPE 65
                           A  2036    
                           A  2037    .ENDEF
                           A  2038    
                           A  2039    .BEGFUNC "load_wav",262,"_load_wav"
                           A  2040    
                           A  2041    .LINE 262
                           A  2042    
                           A  2043    .DEFINE "filename"
                           A  2044    
                           A  2045    .CLASS 65
                           A  2046    
                           A  2047    .VALUE 6
                           A  2048    
                           A  2049    .TYPE 194
                           A  2050    
                           A  2051    .ENDEF
                           A  2052    
                           A  2053    .DEFINE "sample_id"
                           A  2054    
                           A  2055    .CLASS 65
                           A  2056    
                           A  2057    .VALUE 9
                           A  2058    
                           A  2059    .TYPE 12
                           A  2060    
                           A  2061    .ENDEF
                           A  2062    
                           A  2063    .DEFINE "fp"
                           A  2064    
                           A  2065    .CLASS 65
                           A  2066    
                           A  2067    .VALUE -1
                           A  2068    
                           A  2069    .TYPE 12
                           A  2070    
                           A  2071    .ENDEF
                           A  2072    
                           A  2073    .DEFINE "i"
                           A  2074    
                           A  2075    .CLASS 65
                           A  2076    
                           A  2077    .VALUE -4
                           A  2078    
                           A  2079    .TYPE 4
                           A  2080    
                           A  2081    .ENDEF
                           A  2082    
                           A  2083    .DEFINE "data_size"
                           A  2084    
                           A  2085    .CLASS 65
                           A  2086    
                           A  2087    .VALUE -11
                           A  2088    
                           A  2089    .TYPE 15
                           A  2090    
                           A  2091    .ENDEF
                           A  2092    
                           A  2093    .DEFINE "sample_buffer"
                           A  2094    
                           A  2095    .CLASS 65
                           A  2096    
                           A  2097    .VALUE -14
                           A  2098    
                           A  2099    .TYPE 34
                           A  2100    
                           A  2101    .ENDEF
                           A  2102    
                           A  2103    .DEFINE "sample_rate"
                           A  2104    
                           A  2105    .CLASS 65
                           A  2106    
                           A  2107    .VALUE -18
                           A  2108    
                           A  2109    .TYPE 15
                           A  2110    
                           A  2111    .ENDEF
                           A  2112    
                           A  2113    .DEFINE "header"
                           A  2114    
                           A  2115    .CLASS 65
                           A  2116    
                           A  2117    .VALUE -318
                           A  2118    
                           A  2119    .DIM 300
                           A  2120    
                           A  2121    .TYPE 108
                           A  2122    
                           A  2123    .ENDEF
                           A  2124    
040515 DDE5                A  2125    	PUSH	IX
040517 DD210000 00         A  2126    	LD	IX,0
04051C DD39                A  2127    	ADD	IX,SP
04051E 2180FEFF            A  2128    	LD	HL,-384
040522 39                  A  2129    	ADD	HL,SP
040523 F9                  A  2130    	LD	SP,HL
                           A  2131    ;  263	    
                           A  2132    ;  264		int i, j, header_size, bit_rate;
                           A  2133    ;  265		int8_t sample8;
                           A  2134    ;  266		int16_t sample16;
                           A  2135    ;  267		uint32_t data_size, sample_rate;
                           A  2136    ;  268	    unsigned char header[300];
                           A  2137    ;  269		UINT32 remainder;
                           A  2138    ;  270		char *sample_buffer;
                           A  2139    ;  271	    UINT8 fp;
                           A  2140    ;  272		FIL *fo;
                           A  2141    ;  273		
                           A  2142    ;  274	    fp = mos_fopen(filename, fa_read);
                           A  2143    .LINE 274
                           A  2144    
040524 01010000            A  2145    	LD	BC,1
040528 C5                  A  2146    	PUSH	BC
040529 DD0706              A  2147    	LD	BC,(IX+%6)
04052C C5                  A  2148    	PUSH	BC
04052D CD E4 32 04         A  2149    	CALL	_mos_fopen
040531 C1                  A  2150    	POP	BC
040532 C1                  A  2151    	POP	BC
040533 DD77FF              A  2152    	LD	(IX+%FFFFFFFF),A
                           A  2153    ;  275	    if (!fp) {
                           A  2154    .LINE 275
                           A  2155    
040536 B7                  A  2156    	OR	A,A
040537 20 2A               A  2157    	JR	NZ,L_37
                           A  2158    ;  276	        printf("Error: could not open f
                           A  2159    .LINE 276
                           A  2160    
040539 01 DD 3A 04         A  2161    	LD	BC,___print_uputch
04053D ED43 FC 42 04       A  2162    	LD	(___print_xputch),BC
040542 01 02 43 04         A  2163    	LD	BC,L__20
040546 C5                  A  2164    	PUSH	BC
040547 CD EE 37 04         A  2165    	CALL	___print_sendstring
04054B C1                  A  2166    	POP	BC
04054C DD0706              A  2167    	LD	BC,(IX+%6)
04054F C5                  A  2168    	PUSH	BC
040550 CD EE 37 04         A  2169    	CALL	___print_sendstring
040554 C1                  A  2170    	POP	BC
040555 010A0000            A  2171    	LD	BC,10
040559 C5                  A  2172    	PUSH	BC
04055A CD DD 3A 04         A  2173    	CALL	___print_uputch
04055E C1                  A  2174    	POP	BC
                           A  2175    ;  277	        return;
                           A  2176    .LINE 277
                           A  2177    
04055F C3 7A 0D 04         A  2178    	JR	L_65
                           A  2179    ;  278	    }
040563                     A  2180    L_37:
                           A  2181    .LINE 278
                           A  2182    
                           A  2183    ;  279	
                           A  2184    ;  280	    for (i = 0; i < 300 && !mos_feof(fp
                           A  2185    .LINE 280
                           A  2186    
040563 01000000            A  2187    	LD	BC,0
040567 DD0FFC              A  2188    	LD	(IX+%FFFFFFFC),BC
04056A C3 F1 05 04         A  2189    	JR	L_36
04056E                     A  2190    L_34:
                           A  2191    ;  281	        header[i] = mos_fgetc(fp);
                           A  2192    .LINE 281
                           A  2193    
04056E DD07FC              A  2194    	LD	BC,(IX+%FFFFFFFC)
040571 DDE5E1              A  2195    	LD	HL,IX
040574 11C2FEFF            A  2196    	LD	DE,-318
040578 19                  A  2197    	ADD	HL,DE
040579 09                  A  2198    	ADD	HL,BC
04057A DD2FF9              A  2199    	LD	(IX+%FFFFFFF9),HL
04057D DD4EFF              A  2200    	LD	C,(IX+%FFFFFFFF)
040580 0600                A  2201    	LD	B,%0
040582 C5                  A  2202    	PUSH	BC
040583 CD 11 33 04         A  2203    	CALL	_mos_fgetc
040587 C1                  A  2204    	POP	BC
040588 DD27F9              A  2205    	LD	HL,(IX+%FFFFFFF9)
04058B 77                  A  2206    	LD	(HL),A
                           A  2207    ;  282	        if (i >= 3 && header[i - 7] == 
                           A  2208    .LINE 282
                           A  2209    
04058C 01030000            A  2210    	LD	BC,3
040590 DD27FC              A  2211    	LD	HL,(IX+%FFFFFFFC)
040593 B7                  A  2212    	OR	A,A
040594 ED42                A  2213    	SBC	HL,BC
040596 FA EA 05 04         A  2214    	JP	M,L_35
04059A DD31F9              A  2215    	LD	IY,(IX+%FFFFFFF9)
04059D ED23F9              A  2216    	LEA	HL,IY+%FFFFFFF9
0405A0 7E                  A  2217    	LD	A,(HL)
0405A1 B7ED62              A  2218    	UEXT	HL
0405A4 6F                  A  2219    	LD	L,A
0405A5 01640000            A  2220    	LD	BC,100
0405A9 B7                  A  2221    	OR	A,A
0405AA ED42                A  2222    	SBC	HL,BC
0405AC 20 3C               A  2223    	JR	NZ,L_35
0405AE DD31F9              A  2224    	LD	IY,(IX+%FFFFFFF9)
0405B1 ED23FA              A  2225    	LEA	HL,IY+%FFFFFFFA
0405B4 7E                  A  2226    	LD	A,(HL)
0405B5 B7ED62              A  2227    	UEXT	HL
0405B8 6F                  A  2228    	LD	L,A
0405B9 01610000            A  2229    	LD	BC,97
0405BD B7                  A  2230    	OR	A,A
0405BE ED42                A  2231    	SBC	HL,BC
0405C0 20 28               A  2232    	JR	NZ,L_35
0405C2 DD31F9              A  2233    	LD	IY,(IX+%FFFFFFF9)
0405C5 ED23FB              A  2234    	LEA	HL,IY+%FFFFFFFB
0405C8 7E                  A  2235    	LD	A,(HL)
0405C9 B7ED62              A  2236    	UEXT	HL
0405CC 6F                  A  2237    	LD	L,A
0405CD 01740000            A  2238    	LD	BC,116
0405D1 B7                  A  2239    	OR	A,A
0405D2 ED42                A  2240    	SBC	HL,BC
0405D4 20 14               A  2241    	JR	NZ,L_35
0405D6 DD31F9              A  2242    	LD	IY,(IX+%FFFFFFF9)
0405D9 ED23FC              A  2243    	LEA	HL,IY+%FFFFFFFC
0405DC 7E                  A  2244    	LD	A,(HL)
0405DD B7ED62              A  2245    	UEXT	HL
0405E0 6F                  A  2246    	LD	L,A
0405E1 01610000            A  2247    	LD	BC,97
0405E5 B7                  A  2248    	OR	A,A
0405E6 ED42                A  2249    	SBC	HL,BC
0405E8 28 2F               A  2250    	JR	Z,L_59
                           A  2251    ;  283				break; // found the start o
                           A  2252    ;  284	        }
                           A  2253    ;  285	    }
0405EA                     A  2254    L_35:
                           A  2255    .LINE 285
                           A  2256    
0405EA DD07FC              A  2257    	LD	BC,(IX+%FFFFFFFC)
0405ED 03                  A  2258    	INC	BC
0405EE DD0FFC              A  2259    	LD	(IX+%FFFFFFFC),BC
0405F1                     A  2260    L_36:
0405F1 012C0100            A  2261    	LD	BC,300
0405F5 DD27FC              A  2262    	LD	HL,(IX+%FFFFFFFC)
0405F8 B7                  A  2263    	OR	A,A
0405F9 ED42                A  2264    	SBC	HL,BC
0405FB F2 05 06 04         A  2265    	JP	P,L__54
0405FF EA 19 06 04         A  2266    	JP	PE,L_59
040603 18 04               A  2267    	JR	L__55
040605                     A  2268    L__54:
040605 E2 19 06 04         A  2269    	JP	PO,L_59
040609                     A  2270    L__55:
040609 DD4EFF              A  2271    	LD	C,(IX+%FFFFFFFF)
04060C 0600                A  2272    	LD	B,%0
04060E C5                  A  2273    	PUSH	BC
04060F CD 3E 33 04         A  2274    	CALL	_mos_feof
040613 C1                  A  2275    	POP	BC
040614 B7                  A  2276    	OR	A,A
040615 CA 6E 05 04         A  2277    	JR	Z,L_34
040619                     A  2278    L_59:
                           A  2279    ;  286	
                           A  2280    ;  287	    if (i >= 300 || !(header[0] == 'R' 
                           A  2281    .LINE 287
                           A  2282    
040619 012C0100            A  2283    	LD	BC,300
04061D DD27FC              A  2284    	LD	HL,(IX+%FFFFFFFC)
040620 B7                  A  2285    	OR	A,A
040621 ED42                A  2286    	SBC	HL,BC
040623 F2 0B 08 04         A  2287    	JP	P,L_58
040627 21C2FEFF            A  2288    	LD	HL,-318
04062B DDE5C1              A  2289    	LD	BC,IX
04062E 09                  A  2290    	ADD	HL,BC
04062F 7E                  A  2291    	LD	A,(HL)
040630 B7ED62              A  2292    	UEXT	HL
040633 6F                  A  2293    	LD	L,A
040634 01520000            A  2294    	LD	BC,82
040638 B7                  A  2295    	OR	A,A
040639 ED42                A  2296    	SBC	HL,BC
04063B C2 0B 08 04         A  2297    	JR	NZ,L_58
04063F DDE5E1              A  2298    	LD	HL,IX
040642 01C2FEFF            A  2299    	LD	BC,-318
040646 09                  A  2300    	ADD	HL,BC
040647 23                  A  2301    	INC	HL
040648 7E                  A  2302    	LD	A,(HL)
040649 B7ED62              A  2303    	UEXT	HL
04064C 6F                  A  2304    	LD	L,A
04064D 01490000            A  2305    	LD	BC,73
040651 B7                  A  2306    	OR	A,A
040652 ED42                A  2307    	SBC	HL,BC
040654 C2 0B 08 04         A  2308    	JR	NZ,L_58
040658 DDE5FDE1            A  2309    	LD	IY,IX
04065C 01C2FEFF            A  2310    	LD	BC,-318
040660 FD09                A  2311    	ADD	IY,BC
040662 ED2302              A  2312    	LEA	HL,IY+%2
040665 7E                  A  2313    	LD	A,(HL)
040666 B7ED62              A  2314    	UEXT	HL
040669 6F                  A  2315    	LD	L,A
04066A 01460000            A  2316    	LD	BC,70
04066E B7                  A  2317    	OR	A,A
04066F ED42                A  2318    	SBC	HL,BC
040671 C2 0B 08 04         A  2319    	JR	NZ,L_58
040675 DDE5FDE1            A  2320    	LD	IY,IX
040679 01C2FEFF            A  2321    	LD	BC,-318
04067D FD09                A  2322    	ADD	IY,BC
04067F ED2303              A  2323    	LEA	HL,IY+%3
040682 7E                  A  2324    	LD	A,(HL)
040683 B7ED62              A  2325    	UEXT	HL
040686 6F                  A  2326    	LD	L,A
040687 01460000            A  2327    	LD	BC,70
04068B B7                  A  2328    	OR	A,A
04068C ED42                A  2329    	SBC	HL,BC
04068E C2 0B 08 04         A  2330    	JR	NZ,L_58
                           A  2331    ;  288	        !(header[8] == 'W' && header[9]
                           A  2332    .LINE 288
                           A  2333    
040692 DDE5FDE1            A  2334    	LD	IY,IX
040696 01C2FEFF            A  2335    	LD	BC,-318
04069A FD09                A  2336    	ADD	IY,BC
04069C ED2308              A  2337    	LEA	HL,IY+%8
04069F 7E                  A  2338    	LD	A,(HL)
0406A0 B7ED62              A  2339    	UEXT	HL
0406A3 6F                  A  2340    	LD	L,A
0406A4 01570000            A  2341    	LD	BC,87
0406A8 B7                  A  2342    	OR	A,A
0406A9 ED42                A  2343    	SBC	HL,BC
0406AB C2 0B 08 04         A  2344    	JR	NZ,L_58
0406AF DDE5FDE1            A  2345    	LD	IY,IX
0406B3 01C2FEFF            A  2346    	LD	BC,-318
0406B7 FD09                A  2347    	ADD	IY,BC
0406B9 ED2309              A  2348    	LEA	HL,IY+%9
0406BC 7E                  A  2349    	LD	A,(HL)
0406BD B7ED62              A  2350    	UEXT	HL
0406C0 6F                  A  2351    	LD	L,A
0406C1 01410000            A  2352    	LD	BC,65
0406C5 B7                  A  2353    	OR	A,A
0406C6 ED42                A  2354    	SBC	HL,BC
0406C8 C2 0B 08 04         A  2355    	JR	NZ,L_58
0406CC DDE5FDE1            A  2356    	LD	IY,IX
0406D0 01C2FEFF            A  2357    	LD	BC,-318
0406D4 FD09                A  2358    	ADD	IY,BC
0406D6 ED230A              A  2359    	LEA	HL,IY+%A
0406D9 7E                  A  2360    	LD	A,(HL)
0406DA B7ED62              A  2361    	UEXT	HL
0406DD 6F                  A  2362    	LD	L,A
0406DE 01560000            A  2363    	LD	BC,86
0406E2 B7                  A  2364    	OR	A,A
0406E3 ED42                A  2365    	SBC	HL,BC
0406E5 C2 0B 08 04         A  2366    	JR	NZ,L_58
0406E9 DDE5FDE1            A  2367    	LD	IY,IX
0406ED 01C2FEFF            A  2368    	LD	BC,-318
0406F1 FD09                A  2369    	ADD	IY,BC
0406F3 ED230B              A  2370    	LEA	HL,IY+%B
0406F6 7E                  A  2371    	LD	A,(HL)
0406F7 B7ED62              A  2372    	UEXT	HL
0406FA 6F                  A  2373    	LD	L,A
0406FB 01450000            A  2374    	LD	BC,69
0406FF B7                  A  2375    	OR	A,A
040700 ED42                A  2376    	SBC	HL,BC
040702 C2 0B 08 04         A  2377    	JR	NZ,L_58
                           A  2378    ;  289	          header[12] == 'f' && header[1
                           A  2379    .LINE 289
                           A  2380    
040706 DDE5FDE1            A  2381    	LD	IY,IX
04070A 01C2FEFF            A  2382    	LD	BC,-318
04070E FD09                A  2383    	ADD	IY,BC
040710 ED230C              A  2384    	LEA	HL,IY+%C
040713 7E                  A  2385    	LD	A,(HL)
040714 B7ED62              A  2386    	UEXT	HL
040717 6F                  A  2387    	LD	L,A
040718 01660000            A  2388    	LD	BC,102
04071C B7                  A  2389    	OR	A,A
04071D ED42                A  2390    	SBC	HL,BC
04071F C2 0B 08 04         A  2391    	JR	NZ,L_58
040723 DDE5FDE1            A  2392    	LD	IY,IX
040727 01C2FEFF            A  2393    	LD	BC,-318
04072B FD09                A  2394    	ADD	IY,BC
04072D ED230D              A  2395    	LEA	HL,IY+%D
040730 7E                  A  2396    	LD	A,(HL)
040731 B7ED62              A  2397    	UEXT	HL
040734 6F                  A  2398    	LD	L,A
040735 016D0000            A  2399    	LD	BC,109
040739 B7                  A  2400    	OR	A,A
04073A ED42                A  2401    	SBC	HL,BC
04073C C2 0B 08 04         A  2402    	JR	NZ,L_58
040740 DDE5FDE1            A  2403    	LD	IY,IX
040744 01C2FEFF            A  2404    	LD	BC,-318
040748 FD09                A  2405    	ADD	IY,BC
04074A ED230E              A  2406    	LEA	HL,IY+%E
04074D 7E                  A  2407    	LD	A,(HL)
04074E B7ED62              A  2408    	UEXT	HL
040751 6F                  A  2409    	LD	L,A
040752 01740000            A  2410    	LD	BC,116
040756 B7                  A  2411    	OR	A,A
040757 ED42                A  2412    	SBC	HL,BC
040759 C2 0B 08 04         A  2413    	JR	NZ,L_58
04075D DDE5FDE1            A  2414    	LD	IY,IX
040761 01C2FEFF            A  2415    	LD	BC,-318
040765 FD09                A  2416    	ADD	IY,BC
040767 ED230F              A  2417    	LEA	HL,IY+%F
04076A 7E                  A  2418    	LD	A,(HL)
04076B B7ED62              A  2419    	UEXT	HL
04076E 6F                  A  2420    	LD	L,A
04076F 01200000            A  2421    	LD	BC,32
040773 B7                  A  2422    	OR	A,A
040774 ED42                A  2423    	SBC	HL,BC
040776 C2 0B 08 04         A  2424    	JR	NZ,L_58
                           A  2425    ;  290	        !(header[16] == 0x10 && header[
                           A  2426    .LINE 290
                           A  2427    
04077A DDE5FDE1            A  2428    	LD	IY,IX
04077E 01C2FEFF            A  2429    	LD	BC,-318
040782 FD09                A  2430    	ADD	IY,BC
040784 ED2310              A  2431    	LEA	HL,IY+%10
040787 7E                  A  2432    	LD	A,(HL)
040788 B7ED62              A  2433    	UEXT	HL
04078B 6F                  A  2434    	LD	L,A
04078C 01100000            A  2435    	LD	BC,16
040790 B7                  A  2436    	OR	A,A
040791 ED42                A  2437    	SBC	HL,BC
040793 20 76               A  2438    	JR	NZ,L_58
040795 DDE5FDE1            A  2439    	LD	IY,IX
040799 01C2FEFF            A  2440    	LD	BC,-318
04079D FD09                A  2441    	ADD	IY,BC
04079F FD7E11              A  2442    	LD	A,(IY+%11)
0407A2 B7                  A  2443    	OR	A,A
0407A3 20 66               A  2444    	JR	NZ,L_58
0407A5 DDE5FDE1            A  2445    	LD	IY,IX
0407A9 FD09                A  2446    	ADD	IY,BC
0407AB FD7E12              A  2447    	LD	A,(IY+%12)
0407AE B7                  A  2448    	OR	A,A
0407AF 20 5A               A  2449    	JR	NZ,L_58
0407B1 DDE5FDE1            A  2450    	LD	IY,IX
0407B5 FD09                A  2451    	ADD	IY,BC
0407B7 FD7E13              A  2452    	LD	A,(IY+%13)
0407BA B7                  A  2453    	OR	A,A
0407BB 20 4E               A  2454    	JR	NZ,L_58
                           A  2455    ;  291	          header[20] == 0x01 && header[
                           A  2456    .LINE 291
                           A  2457    
0407BD DDE5FDE1            A  2458    	LD	IY,IX
0407C1 FD09                A  2459    	ADD	IY,BC
0407C3 ED2314              A  2460    	LEA	HL,IY+%14
0407C6 7E                  A  2461    	LD	A,(HL)
0407C7 B7ED62              A  2462    	UEXT	HL
0407CA 6F                  A  2463    	LD	L,A
0407CB 01010000            A  2464    	LD	BC,1
0407CF B7                  A  2465    	OR	A,A
0407D0 ED42                A  2466    	SBC	HL,BC
0407D2 20 37               A  2467    	JR	NZ,L_58
0407D4 DDE5FDE1            A  2468    	LD	IY,IX
0407D8 01C2FEFF            A  2469    	LD	BC,-318
0407DC FD09                A  2470    	ADD	IY,BC
0407DE FD7E15              A  2471    	LD	A,(IY+%15)
0407E1 B7                  A  2472    	OR	A,A
0407E2 20 27               A  2473    	JR	NZ,L_58
0407E4 DDE5FDE1            A  2474    	LD	IY,IX
0407E8 FD09                A  2475    	ADD	IY,BC
0407EA ED2316              A  2476    	LEA	HL,IY+%16
0407ED 7E                  A  2477    	LD	A,(HL)
0407EE B7ED62              A  2478    	UEXT	HL
0407F1 6F                  A  2479    	LD	L,A
0407F2 01010000            A  2480    	LD	BC,1
0407F6 B7                  A  2481    	OR	A,A
0407F7 ED42                A  2482    	SBC	HL,BC
0407F9 20 10               A  2483    	JR	NZ,L_58
0407FB DDE5FDE1            A  2484    	LD	IY,IX
0407FF 01C2FEFF            A  2485    	LD	BC,-318
040803 FD09                A  2486    	ADD	IY,BC
040805 FD7E17              A  2487    	LD	A,(IY+%17)
040808 B7                  A  2488    	OR	A,A
040809 28 22               A  2489    	JR	Z,L_60
04080B                     A  2490    L_58:
                           A  2491    ;  292	        printf("Error: invalid WAV file
                           A  2492    .LINE 292
                           A  2493    
04080B 01 DD 3A 04         A  2494    	LD	BC,___print_uputch
04080F ED43 FC 42 04       A  2495    	LD	(___print_xputch),BC
040814 01 1E 43 04         A  2496    	LD	BC,L__49
040818 C5                  A  2497    	PUSH	BC
040819 CD EE 37 04         A  2498    	CALL	___print_sendstring
04081D C1                  A  2499    	POP	BC
                           A  2500    ;  293	        mos_fclose(fp);
                           A  2501    .LINE 293
                           A  2502    
04081E DD4EFF              A  2503    	LD	C,(IX+%FFFFFFFF)
040821 0600                A  2504    	LD	B,%0
040823 C5                  A  2505    	PUSH	BC
040824 CD FC 32 04         A  2506    	CALL	_mos_fclose
040828 C1                  A  2507    	POP	BC
                           A  2508    ;  294	        return;
                           A  2509    .LINE 294
                           A  2510    
040829 C3 7A 0D 04         A  2511    	JR	L_65
                           A  2512    ;  295	    }
04082D                     A  2513    L_60:
                           A  2514    .LINE 295
                           A  2515    
                           A  2516    ;  296		
                           A  2517    ;  297	    sample_rate = header[24] | (header[
                           A  2518    .LINE 297
                           A  2519    
04082D DDE5FDE1            A  2520    	LD	IY,IX
040831 FD09                A  2521    	ADD	IY,BC
040833 B7ED62              A  2522    	UEXT	HL
040836 FD6E18              A  2523    	LD	L,(IY+%18)
040839 E5C1                A  2524    	LD	BC,HL
04083B C5                  A  2525    	PUSH	BC
04083C E5                  A  2526    	PUSH	HL
04083D C5E1                A  2527    	LD	HL,BC
04083F 01B9FEFF            A  2528    	LD	BC,-327	; spill
040843 CD E2 37 04         A  2529    	CALL	__istix
040847 E1                  A  2530    	POP	HL
040848 C1                  A  2531    	POP	BC
040849 5C                  A  2532    	LD	E,H
04084A DDE5FDE1            A  2533    	LD	IY,IX
04084E C5E1                A  2534    	LD	HL,BC
040850 01B6FEFF            A  2535    	LD	BC,-330	; spill
040854 CD E2 37 04         A  2536    	CALL	__istix
040858 01C2FEFF            A  2537    	LD	BC,-318
04085C C5E1                A  2538    	LD	HL,BC	; unspill
04085E 01B3FEFF            A  2539    	LD	BC,-333	; spill
040862 CD E2 37 04         A  2540    	CALL	__istix
040866 01B6FEFF            A  2541    	LD	BC,-330	; unspill
04086A CD 56 42 04         A  2542    	CALL	__ildix
04086E 01B3FEFF            A  2543    	LD	BC,-333	; unspill
040872 CD 56 42 04         A  2544    	CALL	__ildix
040876 E5C1                A  2545    	LD	BC,HL
040878 FD09                A  2546    	ADD	IY,BC
04087A B7ED62              A  2547    	UEXT	HL
04087D FD6E19              A  2548    	LD	L,(IY+%19)
040880 E5                  A  2549    	PUSH	HL
040881 E5                  A  2550    	PUSH	HL
040882 B7ED62              A  2551    	UEXT	HL
040885 E5                  A  2552    	PUSH	HL
040886 33                  A  2553    	INC	SP
040887 33                  A  2554    	INC	SP
040888 C1                  A  2555    	POP	BC
040889 E1                  A  2556    	POP	HL
04088A C5                  A  2557    	PUSH	BC
04088B FD21B1FE FF         A  2558    	LD	IY,-335	; spill
040890 DDE5C1              A  2559    	LD	BC,IX	; spill
040893 FD09                A  2560    	ADD	IY,BC
040895 FD7500              A  2561    	LD	(IY),L
040898 C1                  A  2562    	POP	BC
040899 33                  A  2563    	INC	SP
04089A C5E1                A  2564    	LD	HL,BC
04089C 01BCFEFF            A  2565    	LD	BC,-324	; spill
0408A0 CD E2 37 04         A  2566    	CALL	__istix
0408A4 01B9FEFF            A  2567    	LD	BC,-327	; unspill
0408A8 CD 56 42 04         A  2568    	CALL	__ildix
0408AC E5C1                A  2569    	LD	BC,HL
0408AE C5E1                A  2570    	LD	HL,BC
0408B0 01BCFEFF            A  2571    	LD	BC,-324	; unspill
0408B4 E5                  A  2572    	PUSH	HL
0408B5 CD 56 42 04         A  2573    	CALL	__ildix
0408B9 E5C1                A  2574    	LD	BC,HL
0408BB E1                  A  2575    	POP	HL
0408BC C5                  A  2576    	PUSH	BC
0408BD FD21B2FE FF         A  2577    	LD	IY,-334	; spill
0408C2 DDE5C1              A  2578    	LD	BC,IX	; spill
0408C5 FD09                A  2579    	ADD	IY,BC
0408C7 FD7500              A  2580    	LD	(IY),L
0408CA FD21B1FE FF         A  2581    	LD	IY,-335	; unspill
0408CF DDE5C1              A  2582    	LD	BC,IX	; unspill
0408D2 FD09                A  2583    	ADD	IY,BC
0408D4 FD6E00              A  2584    	LD	L,(IY)
0408D7 C1                  A  2585    	POP	BC
0408D8 7D                  A  2586    	LD	A,L
0408D9 C5                  A  2587    	PUSH	BC
0408DA FD21B2FE FF         A  2588    	LD	IY,-334	; unspill
0408DF DDE5C1              A  2589    	LD	BC,IX	; unspill
0408E2 FD09                A  2590    	ADD	IY,BC
0408E4 FD6E00              A  2591    	LD	L,(IY)
0408E7 C1                  A  2592    	POP	BC
0408E8 CD 55 3C 04         A  2593    	CALL	__lor
0408EC E5C1                A  2594    	LD	BC,HL
0408EE C5                  A  2595    	PUSH	BC
0408EF C5E1                A  2596    	LD	HL,BC
0408F1 01AEFEFF            A  2597    	LD	BC,-338	; spill
0408F5 CD E2 37 04         A  2598    	CALL	__istix
0408F9 C1                  A  2599    	POP	BC
0408FA DDE5FDE1            A  2600    	LD	IY,IX
0408FE C5E1                A  2601    	LD	HL,BC
040900 01ABFEFF            A  2602    	LD	BC,-341	; spill
040904 CD E2 37 04         A  2603    	CALL	__istix
040908 01C2FEFF            A  2604    	LD	BC,-318
04090C C5E1                A  2605    	LD	HL,BC	; unspill
04090E 01A8FEFF            A  2606    	LD	BC,-344	; spill
040912 CD E2 37 04         A  2607    	CALL	__istix
040916 01ABFEFF            A  2608    	LD	BC,-341	; unspill
04091A CD 56 42 04         A  2609    	CALL	__ildix
04091E 01A8FEFF            A  2610    	LD	BC,-344	; unspill
040922 CD 56 42 04         A  2611    	CALL	__ildix
040926 E5C1                A  2612    	LD	BC,HL
040928 FD09                A  2613    	ADD	IY,BC
04092A B7ED62              A  2614    	UEXT	HL
04092D FD6E1A              A  2615    	LD	L,(IY+%1A)
040930 E5                  A  2616    	PUSH	HL
040931 E5                  A  2617    	PUSH	HL
040932 B7ED62              A  2618    	UEXT	HL
040935 E5                  A  2619    	PUSH	HL
040936 33                  A  2620    	INC	SP
040937 C1                  A  2621    	POP	BC
040938 E1                  A  2622    	POP	HL
040939 C5                  A  2623    	PUSH	BC
04093A FD21A7FE FF         A  2624    	LD	IY,-345	; spill
04093F DDE5C1              A  2625    	LD	BC,IX	; spill
040942 FD09                A  2626    	ADD	IY,BC
040944 FD7500              A  2627    	LD	(IY),L
040947 C1                  A  2628    	POP	BC
040948 33                  A  2629    	INC	SP
040949 33                  A  2630    	INC	SP
04094A C5E1                A  2631    	LD	HL,BC
04094C 01BCFEFF            A  2632    	LD	BC,-324	; spill
040950 CD E2 37 04         A  2633    	CALL	__istix
040954 01AEFEFF            A  2634    	LD	BC,-338	; unspill
040958 CD 56 42 04         A  2635    	CALL	__ildix
04095C E5C1                A  2636    	LD	BC,HL
04095E C5E1                A  2637    	LD	HL,BC
040960 01BCFEFF            A  2638    	LD	BC,-324	; unspill
040964 E5                  A  2639    	PUSH	HL
040965 CD 56 42 04         A  2640    	CALL	__ildix
040969 E5C1                A  2641    	LD	BC,HL
04096B E1                  A  2642    	POP	HL
04096C C5                  A  2643    	PUSH	BC
04096D FD21B2FE FF         A  2644    	LD	IY,-334	; spill
040972 DDE5C1              A  2645    	LD	BC,IX	; spill
040975 FD09                A  2646    	ADD	IY,BC
040977 FD7500              A  2647    	LD	(IY),L
04097A FD21A7FE FF         A  2648    	LD	IY,-345	; unspill
04097F DDE5C1              A  2649    	LD	BC,IX	; unspill
040982 FD09                A  2650    	ADD	IY,BC
040984 FD6E00              A  2651    	LD	L,(IY)
040987 C1                  A  2652    	POP	BC
040988 7D                  A  2653    	LD	A,L
040989 C5                  A  2654    	PUSH	BC
04098A FD21B2FE FF         A  2655    	LD	IY,-334	; unspill
04098F DDE5C1              A  2656    	LD	BC,IX	; unspill
040992 FD09                A  2657    	ADD	IY,BC
040994 FD6E00              A  2658    	LD	L,(IY)
040997 C1                  A  2659    	POP	BC
040998 CD 55 3C 04         A  2660    	CALL	__lor
04099C E5C1                A  2661    	LD	BC,HL
04099E C5                  A  2662    	PUSH	BC
04099F C5E1                A  2663    	LD	HL,BC
0409A1 01A4FEFF            A  2664    	LD	BC,-348	; spill
0409A5 CD E2 37 04         A  2665    	CALL	__istix
0409A9 C1                  A  2666    	POP	BC
0409AA DDE5FDE1            A  2667    	LD	IY,IX
0409AE C5E1                A  2668    	LD	HL,BC
0409B0 01A1FEFF            A  2669    	LD	BC,-351	; spill
0409B4 CD E2 37 04         A  2670    	CALL	__istix
0409B8 01C2FEFF            A  2671    	LD	BC,-318
0409BC C5E1                A  2672    	LD	HL,BC	; unspill
0409BE 019EFEFF            A  2673    	LD	BC,-354	; spill
0409C2 CD E2 37 04         A  2674    	CALL	__istix
0409C6 01A1FEFF            A  2675    	LD	BC,-351	; unspill
0409CA CD 56 42 04         A  2676    	CALL	__ildix
0409CE 019EFEFF            A  2677    	LD	BC,-354	; unspill
0409D2 CD 56 42 04         A  2678    	CALL	__ildix
0409D6 E5C1                A  2679    	LD	BC,HL
0409D8 FD09                A  2680    	ADD	IY,BC
0409DA FD6E1B              A  2681    	LD	L,(IY+%1B)
0409DD FD219DFE FF         A  2682    	LD	IY,-355	; spill
0409E2 DDE5C1              A  2683    	LD	BC,IX	; spill
0409E5 FD09                A  2684    	ADD	IY,BC
0409E7 FD7500              A  2685    	LD	(IY),L
0409EA 01000000            A  2686    	LD	BC,0
0409EE C5E1                A  2687    	LD	HL,BC
0409F0 01BCFEFF            A  2688    	LD	BC,-324	; spill
0409F4 CD E2 37 04         A  2689    	CALL	__istix
0409F8 01A4FEFF            A  2690    	LD	BC,-348	; unspill
0409FC CD 56 42 04         A  2691    	CALL	__ildix
040A00 E5C1                A  2692    	LD	BC,HL
040A02 C5E1                A  2693    	LD	HL,BC
040A04 01BCFEFF            A  2694    	LD	BC,-324	; unspill
040A08 E5                  A  2695    	PUSH	HL
040A09 CD 56 42 04         A  2696    	CALL	__ildix
040A0D E5C1                A  2697    	LD	BC,HL
040A0F E1                  A  2698    	POP	HL
040A10 C5                  A  2699    	PUSH	BC
040A11 FD21B2FE FF         A  2700    	LD	IY,-334	; spill
040A16 DDE5C1              A  2701    	LD	BC,IX	; spill
040A19 FD09                A  2702    	ADD	IY,BC
040A1B FD7500              A  2703    	LD	(IY),L
040A1E FD219DFE FF         A  2704    	LD	IY,-355	; unspill
040A23 DDE5C1              A  2705    	LD	BC,IX	; unspill
040A26 FD09                A  2706    	ADD	IY,BC
040A28 FD6E00              A  2707    	LD	L,(IY)
040A2B C1                  A  2708    	POP	BC
040A2C 7D                  A  2709    	LD	A,L
040A2D C5                  A  2710    	PUSH	BC
040A2E FD21B2FE FF         A  2711    	LD	IY,-334	; unspill
040A33 DDE5C1              A  2712    	LD	BC,IX	; unspill
040A36 FD09                A  2713    	ADD	IY,BC
040A38 FD6E00              A  2714    	LD	L,(IY)
040A3B C1                  A  2715    	POP	BC
040A3C CD 55 3C 04         A  2716    	CALL	__lor
040A40 DD2FEE              A  2717    	LD	(IX+%FFFFFFEE),HL
040A43 DD73F1              A  2718    	LD	(IX+%FFFFFFF1),E
                           A  2719    ;  298		data_size = header[i - 3] | (header
                           A  2720    .LINE 298
                           A  2721    
040A46 DD07FC              A  2722    	LD	BC,(IX+%FFFFFFFC)
040A49 DDE5E1              A  2723    	LD	HL,IX
040A4C 11C2FEFF            A  2724    	LD	DE,-318
040A50 19                  A  2725    	ADD	HL,DE
040A51 09                  A  2726    	ADD	HL,BC
040A52 FD21BFFE FF         A  2727    	LD	IY,-321
040A57 DDE5C1              A  2728    	LD	BC,IX
040A5A FD09                A  2729    	ADD	IY,BC
040A5C FD2F00              A  2730    	LD	(IY),HL
040A5F 21BFFEFF            A  2731    	LD	HL,-321
040A63 DDE5C1              A  2732    	LD	BC,IX
040A66 09                  A  2733    	ADD	HL,BC
040A67 ED31                A  2734    	LD	IY,(HL)
040A69 B7ED62              A  2735    	UEXT	HL
040A6C FD6EFE              A  2736    	LD	L,(IY+%FFFFFFFE)
040A6F E5                  A  2737    	PUSH	HL
040A70 E5                  A  2738    	PUSH	HL
040A71 B7ED62              A  2739    	UEXT	HL
040A74 E5                  A  2740    	PUSH	HL
040A75 33                  A  2741    	INC	SP
040A76 33                  A  2742    	INC	SP
040A77 C1                  A  2743    	POP	BC
040A78 C5                  A  2744    	PUSH	BC
040A79 C5E1                A  2745    	LD	HL,BC
040A7B 019AFEFF            A  2746    	LD	BC,-358	; spill
040A7F CD E2 37 04         A  2747    	CALL	__istix
040A83 C1                  A  2748    	POP	BC
040A84 D1                  A  2749    	POP	DE
040A85 33                  A  2750    	INC	SP
040A86 21BFFEFF            A  2751    	LD	HL,-321
040A8A E5                  A  2752    	PUSH	HL
040A8B C5E1                A  2753    	LD	HL,BC
040A8D 0197FEFF            A  2754    	LD	BC,-361	; spill
040A91 CD E2 37 04         A  2755    	CALL	__istix
040A95 E1                  A  2756    	POP	HL
040A96 DDE5C1              A  2757    	LD	BC,IX
040A99 E5                  A  2758    	PUSH	HL
040A9A C5E1                A  2759    	LD	HL,BC	; unspill
040A9C 0194FEFF            A  2760    	LD	BC,-364	; spill
040AA0 CD E2 37 04         A  2761    	CALL	__istix
040AA4 E1                  A  2762    	POP	HL
040AA5 0197FEFF            A  2763    	LD	BC,-361	; unspill
040AA9 E5                  A  2764    	PUSH	HL
040AAA CD 56 42 04         A  2765    	CALL	__ildix
040AAE E1                  A  2766    	POP	HL
040AAF 0194FEFF            A  2767    	LD	BC,-364	; unspill
040AB3 E5                  A  2768    	PUSH	HL
040AB4 CD 56 42 04         A  2769    	CALL	__ildix
040AB8 E5C1                A  2770    	LD	BC,HL
040ABA E1                  A  2771    	POP	HL
040ABB 09                  A  2772    	ADD	HL,BC
040ABC ED31                A  2773    	LD	IY,(HL)
040ABE B7ED62              A  2774    	UEXT	HL
040AC1 FD6EFD              A  2775    	LD	L,(IY+%FFFFFFFD)
040AC4 E5C1                A  2776    	LD	BC,HL
040AC6 7C                  A  2777    	LD	A,H
040AC7 C5E1                A  2778    	LD	HL,BC
040AC9 01BCFEFF            A  2779    	LD	BC,-324	; spill
040ACD CD E2 37 04         A  2780    	CALL	__istix
040AD1 019AFEFF            A  2781    	LD	BC,-358	; unspill
040AD5 CD 56 42 04         A  2782    	CALL	__ildix
040AD9 E5C1                A  2783    	LD	BC,HL
040ADB C5E1                A  2784    	LD	HL,BC
040ADD 01BCFEFF            A  2785    	LD	BC,-324	; unspill
040AE1 E5                  A  2786    	PUSH	HL
040AE2 CD 56 42 04         A  2787    	CALL	__ildix
040AE6 E5C1                A  2788    	LD	BC,HL
040AE8 E1                  A  2789    	POP	HL
040AE9 CD 55 3C 04         A  2790    	CALL	__lor
040AED E5C1                A  2791    	LD	BC,HL
040AEF C5                  A  2792    	PUSH	BC
040AF0 C5E1                A  2793    	LD	HL,BC
040AF2 0191FEFF            A  2794    	LD	BC,-367	; spill
040AF6 CD E2 37 04         A  2795    	CALL	__istix
040AFA C1                  A  2796    	POP	BC
040AFB 21BFFEFF            A  2797    	LD	HL,-321
040AFF E5                  A  2798    	PUSH	HL
040B00 C5E1                A  2799    	LD	HL,BC
040B02 018EFEFF            A  2800    	LD	BC,-370	; spill
040B06 CD E2 37 04         A  2801    	CALL	__istix
040B0A E1                  A  2802    	POP	HL
040B0B DDE5C1              A  2803    	LD	BC,IX
040B0E E5                  A  2804    	PUSH	HL
040B0F C5E1                A  2805    	LD	HL,BC	; unspill
040B11 018BFEFF            A  2806    	LD	BC,-373	; spill
040B15 CD E2 37 04         A  2807    	CALL	__istix
040B19 E1                  A  2808    	POP	HL
040B1A 018EFEFF            A  2809    	LD	BC,-370	; unspill
040B1E E5                  A  2810    	PUSH	HL
040B1F CD 56 42 04         A  2811    	CALL	__ildix
040B23 E1                  A  2812    	POP	HL
040B24 018BFEFF            A  2813    	LD	BC,-373	; unspill
040B28 E5                  A  2814    	PUSH	HL
040B29 CD 56 42 04         A  2815    	CALL	__ildix
040B2D E5C1                A  2816    	LD	BC,HL
040B2F E1                  A  2817    	POP	HL
040B30 09                  A  2818    	ADD	HL,BC
040B31 ED31                A  2819    	LD	IY,(HL)
040B33 FD2B                A  2820    	DEC	IY
040B35 B7ED62              A  2821    	UEXT	HL
040B38 FD6E00              A  2822    	LD	L,(IY)
040B3B E5                  A  2823    	PUSH	HL
040B3C E5                  A  2824    	PUSH	HL
040B3D B7ED62              A  2825    	UEXT	HL
040B40 E5                  A  2826    	PUSH	HL
040B41 33                  A  2827    	INC	SP
040B42 C1                  A  2828    	POP	BC
040B43 E1                  A  2829    	POP	HL
040B44 C5                  A  2830    	PUSH	BC
040B45 FD218AFE FF         A  2831    	LD	IY,-374	; spill
040B4A DDE5C1              A  2832    	LD	BC,IX	; spill
040B4D FD09                A  2833    	ADD	IY,BC
040B4F FD7500              A  2834    	LD	(IY),L
040B52 C1                  A  2835    	POP	BC
040B53 33                  A  2836    	INC	SP
040B54 33                  A  2837    	INC	SP
040B55 C5E1                A  2838    	LD	HL,BC
040B57 01BCFEFF            A  2839    	LD	BC,-324	; spill
040B5B CD E2 37 04         A  2840    	CALL	__istix
040B5F 0191FEFF            A  2841    	LD	BC,-367	; unspill
040B63 CD 56 42 04         A  2842    	CALL	__ildix
040B67 E5C1                A  2843    	LD	BC,HL
040B69 C5E1                A  2844    	LD	HL,BC
040B6B 01BCFEFF            A  2845    	LD	BC,-324	; unspill
040B6F E5                  A  2846    	PUSH	HL
040B70 CD 56 42 04         A  2847    	CALL	__ildix
040B74 E5C1                A  2848    	LD	BC,HL
040B76 E1                  A  2849    	POP	HL
040B77 C5                  A  2850    	PUSH	BC
040B78 FD21B2FE FF         A  2851    	LD	IY,-334	; spill
040B7D DDE5C1              A  2852    	LD	BC,IX	; spill
040B80 FD09                A  2853    	ADD	IY,BC
040B82 FD7500              A  2854    	LD	(IY),L
040B85 FD218AFE FF         A  2855    	LD	IY,-374	; unspill
040B8A DDE5C1              A  2856    	LD	BC,IX	; unspill
040B8D FD09                A  2857    	ADD	IY,BC
040B8F FD6E00              A  2858    	LD	L,(IY)
040B92 C1                  A  2859    	POP	BC
040B93 7D                  A  2860    	LD	A,L
040B94 C5                  A  2861    	PUSH	BC
040B95 FD21B2FE FF         A  2862    	LD	IY,-334	; unspill
040B9A DDE5C1              A  2863    	LD	BC,IX	; unspill
040B9D FD09                A  2864    	ADD	IY,BC
040B9F FD6E00              A  2865    	LD	L,(IY)
040BA2 C1                  A  2866    	POP	BC
040BA3 CD 55 3C 04         A  2867    	CALL	__lor
040BA7 E5C1                A  2868    	LD	BC,HL
040BA9 C5                  A  2869    	PUSH	BC
040BAA C5E1                A  2870    	LD	HL,BC
040BAC 0187FEFF            A  2871    	LD	BC,-377	; spill
040BB0 CD E2 37 04         A  2872    	CALL	__istix
040BB4 C1                  A  2873    	POP	BC
040BB5 21BFFEFF            A  2874    	LD	HL,-321
040BB9 E5                  A  2875    	PUSH	HL
040BBA C5E1                A  2876    	LD	HL,BC
040BBC 0184FEFF            A  2877    	LD	BC,-380	; spill
040BC0 CD E2 37 04         A  2878    	CALL	__istix
040BC4 E1                  A  2879    	POP	HL
040BC5 DDE5C1              A  2880    	LD	BC,IX
040BC8 E5                  A  2881    	PUSH	HL
040BC9 C5E1                A  2882    	LD	HL,BC	; unspill
040BCB 0181FEFF            A  2883    	LD	BC,-383	; spill
040BCF CD E2 37 04         A  2884    	CALL	__istix
040BD3 E1                  A  2885    	POP	HL
040BD4 0184FEFF            A  2886    	LD	BC,-380	; unspill
040BD8 E5                  A  2887    	PUSH	HL
040BD9 CD 56 42 04         A  2888    	CALL	__ildix
040BDD E1                  A  2889    	POP	HL
040BDE 0181FEFF            A  2890    	LD	BC,-383	; unspill
040BE2 E5                  A  2891    	PUSH	HL
040BE3 CD 56 42 04         A  2892    	CALL	__ildix
040BE7 E5C1                A  2893    	LD	BC,HL
040BE9 E1                  A  2894    	POP	HL
040BEA 09                  A  2895    	ADD	HL,BC
040BEB ED31                A  2896    	LD	IY,(HL)
040BED FD6E00              A  2897    	LD	L,(IY)
040BF0 FD2180FE FF         A  2898    	LD	IY,-384	; spill
040BF5 DDE5C1              A  2899    	LD	BC,IX	; spill
040BF8 FD09                A  2900    	ADD	IY,BC
040BFA FD7500              A  2901    	LD	(IY),L
040BFD 01000000            A  2902    	LD	BC,0
040C01 C5E1                A  2903    	LD	HL,BC
040C03 01BCFEFF            A  2904    	LD	BC,-324	; spill
040C07 CD E2 37 04         A  2905    	CALL	__istix
040C0B 0187FEFF            A  2906    	LD	BC,-377	; unspill
040C0F CD 56 42 04         A  2907    	CALL	__ildix
040C13 E5C1                A  2908    	LD	BC,HL
040C15 C5E1                A  2909    	LD	HL,BC
040C17 01BCFEFF            A  2910    	LD	BC,-324	; unspill
040C1B E5                  A  2911    	PUSH	HL
040C1C CD 56 42 04         A  2912    	CALL	__ildix
040C20 E5C1                A  2913    	LD	BC,HL
040C22 E1                  A  2914    	POP	HL
040C23 C5                  A  2915    	PUSH	BC
040C24 FD21B2FE FF         A  2916    	LD	IY,-334	; spill
040C29 DDE5C1              A  2917    	LD	BC,IX	; spill
040C2C FD09                A  2918    	ADD	IY,BC
040C2E FD7500              A  2919    	LD	(IY),L
040C31 FD2180FE FF         A  2920    	LD	IY,-384	; unspill
040C36 DDE5C1              A  2921    	LD	BC,IX	; unspill
040C39 FD09                A  2922    	ADD	IY,BC
040C3B FD6E00              A  2923    	LD	L,(IY)
040C3E C1                  A  2924    	POP	BC
040C3F 7D                  A  2925    	LD	A,L
040C40 C5                  A  2926    	PUSH	BC
040C41 FD21B2FE FF         A  2927    	LD	IY,-334	; unspill
040C46 DDE5C1              A  2928    	LD	BC,IX	; unspill
040C49 FD09                A  2929    	ADD	IY,BC
040C4B FD6E00              A  2930    	LD	L,(IY)
040C4E C1                  A  2931    	POP	BC
040C4F CD 55 3C 04         A  2932    	CALL	__lor
040C53 DD2FF5              A  2933    	LD	(IX+%FFFFFFF5),HL
040C56 DD73F8              A  2934    	LD	(IX+%FFFFFFF8),E
                           A  2935    ;  299	
                           A  2936    ;  300	    if (header[34] == 8 && header[35] =
                           A  2937    .LINE 300
                           A  2938    
040C59 DDE5FDE1            A  2939    	LD	IY,IX
040C5D 01C2FEFF            A  2940    	LD	BC,-318
040C61 FD09                A  2941    	ADD	IY,BC
040C63 ED2322              A  2942    	LEA	HL,IY+%22
040C66 7E                  A  2943    	LD	A,(HL)
040C67 B7ED62              A  2944    	UEXT	HL
040C6A 6F                  A  2945    	LD	L,A
040C6B 01080000            A  2946    	LD	BC,8
040C6F B7                  A  2947    	OR	A,A
040C70 ED42                A  2948    	SBC	HL,BC
040C72 20 10               A  2949    	JR	NZ,L_63
040C74 DDE5FDE1            A  2950    	LD	IY,IX
040C78 01C2FEFF            A  2951    	LD	BC,-318
040C7C FD09                A  2952    	ADD	IY,BC
040C7E FD7E23              A  2953    	LD	A,(IY+%23)
040C81 B7                  A  2954    	OR	A,A
040C82 28 22               A  2955    	JR	Z,L_64
                           A  2956    ;  301	        bit_rate = 8;
                           A  2957    ;  302	    } else {
                           A  2958    .LINE 302
                           A  2959    
040C84                     A  2960    L_63:
                           A  2961    ;  303	        printf("Error: unsupported PCM 
                           A  2962    .LINE 303
                           A  2963    
040C84 01 DD 3A 04         A  2964    	LD	BC,___print_uputch
040C88 ED43 FC 42 04       A  2965    	LD	(___print_xputch),BC
040C8D 01 37 43 04         A  2966    	LD	BC,L__52
040C91 C5                  A  2967    	PUSH	BC
040C92 CD EE 37 04         A  2968    	CALL	___print_sendstring
040C96 C1                  A  2969    	POP	BC
                           A  2970    ;  304	        mos_fclose(fp);
                           A  2971    .LINE 304
                           A  2972    
040C97 DD4EFF              A  2973    	LD	C,(IX+%FFFFFFFF)
040C9A 0600                A  2974    	LD	B,%0
040C9C C5                  A  2975    	PUSH	BC
040C9D CD FC 32 04         A  2976    	CALL	_mos_fclose
040CA1 C1                  A  2977    	POP	BC
                           A  2978    ;  305	        return;
                           A  2979    .LINE 305
                           A  2980    
040CA2 C3 7A 0D 04         A  2981    	JR	L_65
                           A  2982    ;  306	    }
040CA6                     A  2983    L_64:
                           A  2984    .LINE 306
                           A  2985    
                           A  2986    ;  307		
                           A  2987    ;  308			//remainder = data_size % 5000;
                           A  2988    ;  309			printf("%u total samples.\r\n",
                           A  2989    .LINE 309
                           A  2990    
040CA6 01 DD 3A 04         A  2991    	LD	BC,___print_uputch
040CAA ED43 FC 42 04       A  2992    	LD	(___print_xputch),BC
040CAF 3E75                A  2993    	LD	A,%75
040CB1 32 9F 44 04         A  2994    	LD	(___print_fmt+4),A
040CB5 DD4EF8              A  2995    	LD	C,(IX+%FFFFFFF8)
040CB8 0600                A  2996    	LD	B,%0
040CBA C5                  A  2997    	PUSH	BC
040CBB DD07F5              A  2998    	LD	BC,(IX+%FFFFFFF5)
040CBE C5                  A  2999    	PUSH	BC
040CBF CD 63 3B 04         A  3000    	CALL	__u_uitoa
040CC3 C1                  A  3001    	POP	BC
040CC4 C1                  A  3002    	POP	BC
040CC5 01 56 43 04         A  3003    	LD	BC,L__53
040CC9 C5                  A  3004    	PUSH	BC
040CCA CD EE 37 04         A  3005    	CALL	___print_sendstring
040CCE C1                  A  3006    	POP	BC
                           A  3007    ;  310	
                           A  3008    ;  311			//printf("Done reading.\r\n");
                           A  3009    ;  312			putch(23);
                           A  3010    .LINE 312
                           A  3011    
040CCF 01170000            A  3012    	LD	BC,23
040CD3 C5                  A  3013    	PUSH	BC
040CD4 CD 8C 30 04         A  3014    	CALL	_putch
040CD8 C1                  A  3015    	POP	BC
                           A  3016    ;  313			putch(0);
                           A  3017    .LINE 313
                           A  3018    
040CD9 01000000            A  3019    	LD	BC,0
040CDD C5                  A  3020    	PUSH	BC
040CDE CD 8C 30 04         A  3021    	CALL	_putch
040CE2 C1                  A  3022    	POP	BC
                           A  3023    ;  314			putch(133);
                           A  3024    .LINE 314
                           A  3025    
040CE3 01850000            A  3026    	LD	BC,133
040CE7 C5                  A  3027    	PUSH	BC
040CE8 CD 8C 30 04         A  3028    	CALL	_putch
040CEC C1                  A  3029    	POP	BC
                           A  3030    ;  315			putch(0);
                           A  3031    .LINE 315
                           A  3032    
040CED 01000000            A  3033    	LD	BC,0
040CF1 C5                  A  3034    	PUSH	BC
040CF2 CD 8C 30 04         A  3035    	CALL	_putch
040CF6 C1                  A  3036    	POP	BC
                           A  3037    ;  316			putch(5); //Sample mode
                           A  3038    .LINE 316
                           A  3039    
040CF7 01050000            A  3040    	LD	BC,5
040CFB C5                  A  3041    	PUSH	BC
040CFC CD 8C 30 04         A  3042    	CALL	_putch
040D00 C1                  A  3043    	POP	BC
                           A  3044    ;  317	
                           A  3045    ;  318			putch(sample_id); //Sample ID
                           A  3046    .LINE 318
                           A  3047    
040D01 DD7E09              A  3048    	LD	A,(IX+%9)
040D04 B7ED62              A  3049    	UEXT	HL
040D07 6F                  A  3050    	LD	L,A
040D08 E5                  A  3051    	PUSH	HL
040D09 CD 8C 30 04         A  3052    	CALL	_putch
040D0D C1                  A  3053    	POP	BC
                           A  3054    ;  319			putch(0); //Record mode
                           A  3055    .LINE 319
                           A  3056    
040D0E 01000000            A  3057    	LD	BC,0
040D12 C5                  A  3058    	PUSH	BC
040D13 CD 8C 30 04         A  3059    	CALL	_putch
040D17 C1                  A  3060    	POP	BC
                           A  3061    ;  320			
                           A  3062    ;  321			write32bit(data_size);
                           A  3063    .LINE 321
                           A  3064    
040D18 DD4EF8              A  3065    	LD	C,(IX+%FFFFFFF8)
040D1B 0600                A  3066    	LD	B,%0
040D1D C5                  A  3067    	PUSH	BC
040D1E DD07F5              A  3068    	LD	BC,(IX+%FFFFFFF5)
040D21 C5                  A  3069    	PUSH	BC
040D22 CD F8 24 04         A  3070    	CALL	_write32bit
040D26 C1                  A  3071    	POP	BC
040D27 C1                  A  3072    	POP	BC
                           A  3073    ;  322			//else if (bit_rate == 16) writ
                           A  3074    ;  323			
                           A  3075    ;  324			write16bit(sample_rate);
                           A  3076    .LINE 324
                           A  3077    
040D28 DD07EE              A  3078    	LD	BC,(IX+%FFFFFFEE)
040D2B C5                  A  3079    	PUSH	BC
040D2C CD BC 24 04         A  3080    	CALL	_write16bit
040D30 C1                  A  3081    	POP	BC
                           A  3082    ;  325			
                           A  3083    ;  326			sample_buffer = (char *) malloc
                           A  3084    .LINE 326
                           A  3085    
040D31 DD07F5              A  3086    	LD	BC,(IX+%FFFFFFF5)
040D34 C5                  A  3087    	PUSH	BC
040D35 CD 0A 37 04         A  3088    	CALL	_malloc
040D39 C1                  A  3089    	POP	BC
040D3A DD2FF2              A  3090    	LD	(IX+%FFFFFFF2),HL
                           A  3091    ;  327			mos_fread(fp, sample_buffer, da
                           A  3092    .LINE 327
                           A  3093    
040D3D DD07F5              A  3094    	LD	BC,(IX+%FFFFFFF5)
040D40 C5                  A  3095    	PUSH	BC
040D41 DD07F2              A  3096    	LD	BC,(IX+%FFFFFFF2)
040D44 C5                  A  3097    	PUSH	BC
040D45 DD4EFF              A  3098    	LD	C,(IX+%FFFFFFFF)
040D48 0600                A  3099    	LD	B,%0
040D4A C5                  A  3100    	PUSH	BC
040D4B CD 11 34 04         A  3101    	CALL	_mos_fread
040D4F C1                  A  3102    	POP	BC
040D50 C1                  A  3103    	POP	BC
040D51 C1                  A  3104    	POP	BC
                           A  3105    ;  328			mos_puts(sample_buffer, data_si
                           A  3106    .LINE 328
                           A  3107    
040D52 01000000            A  3108    	LD	BC,0
040D56 C5                  A  3109    	PUSH	BC
040D57 DD07F5              A  3110    	LD	BC,(IX+%FFFFFFF5)
040D5A C5                  A  3111    	PUSH	BC
040D5B DD07F2              A  3112    	LD	BC,(IX+%FFFFFFF2)
040D5E C5                  A  3113    	PUSH	BC
040D5F CD A4 30 04         A  3114    	CALL	_mos_puts
040D63 C1                  A  3115    	POP	BC
040D64 C1                  A  3116    	POP	BC
040D65 C1                  A  3117    	POP	BC
                           A  3118    ;  329			free(sample_buffer);
                           A  3119    .LINE 329
                           A  3120    
040D66 DD07F2              A  3121    	LD	BC,(IX+%FFFFFFF2)
040D69 C5                  A  3122    	PUSH	BC
040D6A CD 05 36 04         A  3123    	CALL	_free
040D6E C1                  A  3124    	POP	BC
                           A  3125    ;  330	
                           A  3126    ;  331	    mos_fclose(fp);
                           A  3127    .LINE 331
                           A  3128    
040D6F DD4EFF              A  3129    	LD	C,(IX+%FFFFFFFF)
040D72 0600                A  3130    	LD	B,%0
040D74 C5                  A  3131    	PUSH	BC
040D75 CD FC 32 04         A  3132    	CALL	_mos_fclose
040D79 C1                  A  3133    	POP	BC
                           A  3134    ;  332	}
040D7A                     A  3135    L_65:
                           A  3136    .LINE 332
                           A  3137    
040D7A DDF9                A  3138    	LD	SP,IX
040D7C DDE1                A  3139    	POP	IX
040D7E C9                  A  3140    	RET	
                           A  3141    
                           A  3142    
                           A  3143    ;**************************** _load_wav *******
                           A  3144    ;Name                         Addr/Register   S
                           A  3145    ;_free                               IMPORT  --
                           A  3146    ;_mos_puts                           IMPORT  --
                           A  3147    ;_mos_fread                          IMPORT  --
                           A  3148    ;_malloc                             IMPORT  --
                           A  3149    ;_write16bit                         IMPORT  --
                           A  3150    ;_write32bit                         IMPORT  --
                           A  3151    ;_putch                              IMPORT  --
                           A  3152    ;__u_uitoa                           IMPORT  --
                           A  3153    ;___print_fmt                        IMPORT    
                           A  3154    ;_mos_fclose                         IMPORT  --
                           A  3155    ;_mos_feof                           IMPORT  --
                           A  3156    ;_mos_fgetc                          IMPORT  --
                           A  3157    ;___print_sendstring                 IMPORT  --
                           A  3158    ;___print_xputch                     IMPORT    
                           A  3159    ;___print_uputch                     IMPORT  --
                           A  3160    ;_mos_fopen                          IMPORT  --
                           A  3161    ;header                              IX-318    
                           A  3162    ;sample_rate                          IX-18    
                           A  3163    ;sample_buffer                        IX-14    
                           A  3164    ;data_size                            IX-11    
                           A  3165    ;G_0                                   IX-7    
                           A  3166    ;i                                     IX-4    
                           A  3167    ;fp                                    IX-1    
                           A  3168    ;sample_id                             IX+9    
                           A  3169    ;filename                              IX+6    
                           A  3170    
                           A  3171    
                           A  3172    ; Stack Frame Size: 396 (bytes)
                           A  3173    ;       Spill Code: 0 (instruction)
                           A  3174    
                           A  3175    
                           A  3176    .ENDFUNC "load_wav",332,"_load_wav"
                           A  3177    	SEGMENT STRSECT
044302                     A  3178    L__20:
044302 4572726F 723A2063   A  3179    	DB	"Error: could not open file "
04430A 6F756C64 206E6F74 
044312 206F7065 6E206669 
04431A 6C6520 
04431D 00                  A  3180    	DB	0
04431E                     A  3181    L__49:
04431E 4572726F 723A2069   A  3182    	DB	"Error: invalid WAV file"
044326 6E76616C 69642057 
04432E 41562066 696C65 
044335 0A00                A  3183    	DB	10,0
044337                     A  3184    L__52:
044337 4572726F 723A2075   A  3185    	DB	"Error: unsupported PCM format"
04433F 6E737570 706F7274 
044347 65642050 434D2066 
04434F 6F726D61 74 
044354 0A00                A  3186    	DB	10,0
044356                     A  3187    L__53:
044356 20746F74 616C2073   A  3188    	DB	" total samples."
04435E 616D706C 65732E 
044365 0D0A00              A  3189    	DB	13,10,0
                           A  3190    	SEGMENT CODE
                           A  3191    ;  333	
                           A  3192    ;  334	#define AY_3_8910_CLOCK_SPEED 1789773
                           A  3193    ;  335	//#define AY_FREQ 55930
                           A  3194    ;  336	#define AY_3_8910_CHANNELS 3
                           A  3195    ;  337	
                           A  3196    ;  338	typedef struct {
                           A  3197    ;  339	    uint8_t volume;
                           A  3198    ;  340	    uint8_t frequency_coarse;
                           A  3199    ;  341	    uint8_t frequency_fine;
                           A  3200    ;  342	    int frequency_hz;
                           A  3201    ;  343		bool enabled;
                           A  3202    ;  344	} ay_channel_state;
                           A  3203    .BEGREC "NONAME8",7
                           A  3204    .DEFINE "volume"
                           A  3205    .VALUE 0
                           A  3206    .CLASS 8
                           A  3207    .TYPE 12
                           A  3208    .ENDEF
                           A  3209    .DEFINE "frequency_coarse"
                           A  3210    .VALUE 1
                           A  3211    .CLASS 8
                           A  3212    .TYPE 12
                           A  3213    .ENDEF
                           A  3214    .DEFINE "frequency_fine"
                           A  3215    .VALUE 2
                           A  3216    .CLASS 8
                           A  3217    .TYPE 12
                           A  3218    .ENDEF
                           A  3219    .DEFINE "frequency_hz"
                           A  3220    .VALUE 3
                           A  3221    .CLASS 8
                           A  3222    .TYPE 4
                           A  3223    .ENDEF
                           A  3224    .DEFINE "enabled"
                           A  3225    .VALUE 6
                           A  3226    .CLASS 8
                           A  3227    .TYPE 12
                           A  3228    .ENDEF
                           A  3229    .ENDREC "NONAME8"
                           A  3230    	SEGMENT BSS
044437                     A  3231    _ay_states:
044437                     A  3232    	DS	21
                           A  3233    .DEFINE "ay_states"
                           A  3234    .ALIAS "_ay_states"
                           A  3235    .CLASS 83
                           A  3236    .VALUE _ay_states
                           A  3237    .DIM 3
                           A  3238    .TAG "NONAME8"
                           A  3239    .TYPE 104
                           A  3240    .ENDEF
                           A  3241    .BEGREC "NONAME9",2
                           A  3242    .DEFINE "latched_channel"
                           A  3243    .VALUE 0
                           A  3244    .CLASS 8
                           A  3245    .TYPE 12
                           A  3246    .ENDEF
                           A  3247    .DEFINE "latched_type"
                           A  3248    .VALUE 1
                           A  3249    .CLASS 8
                           A  3250    .TYPE 12
                           A  3251    .ENDEF
                           A  3252    .ENDREC "NONAME9"
04444C                     A  3253    _sn:
04444C                     A  3254    	DS	2
                           A  3255    .DEFINE "sn"
                           A  3256    .ALIAS "_sn"
                           A  3257    .CLASS 83
                           A  3258    .VALUE _sn
                           A  3259    .TAG "NONAME9"
                           A  3260    .TYPE 8
                           A  3261    .ENDEF
                           A  3262    .BEGREC "NONAME10",9
                           A  3263    .DEFINE "volume"
                           A  3264    .VALUE 0
                           A  3265    .CLASS 8
                           A  3266    .TYPE 13
                           A  3267    .ENDEF
                           A  3268    .DEFINE "frequency_high"
                           A  3269    .VALUE 2
                           A  3270    .CLASS 8
                           A  3271    .TYPE 12
                           A  3272    .ENDEF
                           A  3273    .DEFINE "frequency_low"
                           A  3274    .VALUE 3
                           A  3275    .CLASS 8
                           A  3276    .TYPE 12
                           A  3277    .ENDEF
                           A  3278    .DEFINE "frequency_combined"
                           A  3279    .VALUE 4
                           A  3280    .CLASS 8
                           A  3281    .TYPE 13
                           A  3282    .ENDEF
                           A  3283    .DEFINE "frequency_hz"
                           A  3284    .VALUE 6
                           A  3285    .CLASS 8
                           A  3286    .TYPE 13
                           A  3287    .ENDEF
                           A  3288    .DEFINE "enabled"
                           A  3289    .VALUE 8
                           A  3290    .CLASS 8
                           A  3291    .TYPE 12
                           A  3292    .ENDEF
                           A  3293    .ENDREC "NONAME10"
04444E                     A  3294    _sn_channels:
04444E                     A  3295    	DS	54
                           A  3296    .DEFINE "sn_channels"
                           A  3297    .ALIAS "_sn_channels"
                           A  3298    .CLASS 83
                           A  3299    .VALUE _sn_channels
                           A  3300    .DIM 6
                           A  3301    .TAG "NONAME10"
                           A  3302    .TYPE 104
                           A  3303    .ENDEF
                           A  3304    	SEGMENT DATA
0442AA                     A  3305    _sn_vol_table:
0442AA 7F                  A  3306    	DB	127
0442AB 71                  A  3307    	DB	113
0442AC 65                  A  3308    	DB	101
0442AD 5A                  A  3309    	DB	90
0442AE 50                  A  3310    	DB	80
0442AF 47                  A  3311    	DB	71
0442B0 3F                  A  3312    	DB	63
0442B1 38                  A  3313    	DB	56
0442B2 32                  A  3314    	DB	50
0442B3 2D                  A  3315    	DB	45
0442B4 28                  A  3316    	DB	40
0442B5 24                  A  3317    	DB	36
0442B6 20                  A  3318    	DB	32
0442B7 1C                  A  3319    	DB	28
0442B8 19                  A  3320    	DB	25
0442B9 00                  A  3321    	DB	0
                           A  3322    .DEFINE "sn_vol_table"
                           A  3323    .ALIAS "_sn_vol_table"
                           A  3324    .CLASS 69
                           A  3325    .VALUE _sn_vol_table
                           A  3326    .DIM 16
                           A  3327    .TYPE 108
                           A  3328    .ENDEF
                           A  3329    ;  345	
                           A  3330    ;  346	ay_channel_state ay_states[AY_3_8910_CH
                           A  3331    ;  347	
                           A  3332    ;  348	typedef struct {
                           A  3333    ;  349		uint8_t latched_channel;
                           A  3334    ;  350		uint8_t latched_type;
                           A  3335    ;  351	} sn_global;
                           A  3336    ;  352	
                           A  3337    ;  353	sn_global sn;
                           A  3338    ;  354	
                           A  3339    ;  355	typedef struct {
                           A  3340    ;  356	    // uint8_t volume_high;
                           A  3341    ;  357		// uint8_t volume_low;
                           A  3342    ;  358		uint16_t volume;
                           A  3343    ;  359	    uint8_t frequency_high;
                           A  3344    ;  360	    uint8_t frequency_low;
                           A  3345    ;  361		uint16_t frequency_combined;
                           A  3346    ;  362	    uint16_t frequency_hz;
                           A  3347    ;  363		bool enabled;
                           A  3348    ;  364	} sn_channel_state;
                           A  3349    ;  365	
                           A  3350    ;  366	sn_channel_state sn_channels[6];
                           A  3351    ;  367	uint8_t sn_vol_table[16] = {127, 113, 1
                           A  3352    	SEGMENT CODE
                           A  3353    ;  368	
                           A  3354    ;  369	void process_0x50_command(unsigned char
040D7F                     A  3355    _process_0x50_command:
                           A  3356    .DEFINE "_process_0x50_command"
                           A  3357    
                           A  3358    .VALUE _process_0x50_command
                           A  3359    
                           A  3360    .CLASS 2
                           A  3361    
                           A  3362    .TYPE 65
                           A  3363    
                           A  3364    .ENDEF
                           A  3365    
                           A  3366    .BEGFUNC "process_0x50_command",369,"_process_0
                           A  3367    
                           A  3368    .LINE 369
                           A  3369    
                           A  3370    .DEFINE "data"
                           A  3371    
                           A  3372    .CLASS 65
                           A  3373    
                           A  3374    .VALUE 6
                           A  3375    
                           A  3376    .TYPE 12
                           A  3377    
                           A  3378    .ENDEF
                           A  3379    
040D7F DDE5                A  3380    	PUSH	IX
040D81 DD210000 00         A  3381    	LD	IX,0
040D86 DD39                A  3382    	ADD	IX,SP
040D88 C5                  A  3383    	PUSH	BC
                           A  3384    ;  370	    //uint8_t channel = 0;
                           A  3385    ;  371	    uint8_t type = 0;
                           A  3386    ;  372	    uint16_t value = 0;
                           A  3387    ;  373	
                           A  3388    ;  374	    if (data & 0x80) { //Latch data
                           A  3389    .LINE 374
                           A  3390    
040D89 DD7E06              A  3391    	LD	A,(IX+%6)
040D8C E680                A  3392    	AND	A,%80
040D8E CA 18 0E 04         A  3393    	JR	Z,L_73
                           A  3394    ;  375	
                           A  3395    ;  376	        sn.latched_channel = (data >> 5
                           A  3396    .LINE 376
                           A  3397    
040D92 DD7E06              A  3398    	LD	A,(IX+%6)
040D95 B7ED62              A  3399    	UEXT	HL
040D98 6F                  A  3400    	LD	L,A
040D99 3E05                A  3401    	LD	A,%5
040D9B CD BD 37 04         A  3402    	CALL	__ishrs_b
040D9F 7D                  A  3403    	LD	A,L
040DA0 E603                A  3404    	AND	A,%3
040DA2 32 4C 44 04         A  3405    	LD	(_sn),A
                           A  3406    ;  377	        sn.latched_type = (data >> 4) &
                           A  3407    .LINE 377
                           A  3408    
040DA6 DD7E06              A  3409    	LD	A,(IX+%6)
040DA9 B7ED62              A  3410    	UEXT	HL
040DAC 6F                  A  3411    	LD	L,A
040DAD 3E04                A  3412    	LD	A,%4
040DAF CD BD 37 04         A  3413    	CALL	__ishrs_b
040DB3 7D                  A  3414    	LD	A,L
040DB4 E601                A  3415    	AND	A,%1
040DB6 32 4D 44 04         A  3416    	LD	(_sn+1),A
                           A  3417    ;  378	
                           A  3418    ;  379	        if (sn.latched_type == 0) sn_ch
                           A  3419    .LINE 379
                           A  3420    
040DBA B7                  A  3421    	OR	A,A
040DBB 20 23               A  3422    	JR	NZ,L_68
040DBD DD7E06              A  3423    	LD	A,(IX+%6)
040DC0 E60F                A  3424    	AND	A,%F
040DC2 57                  A  3425    	LD	D,A
040DC3 3A 4C 44 04         A  3426    	LD	A,(_sn)
040DC7 B7ED62              A  3427    	UEXT	HL
040DCA 6F                  A  3428    	LD	L,A
040DCB 3E09                A  3429    	LD	A,%9
040DCD CD 5E 3C 04         A  3430    	CALL	__imul_b
040DD1 01 4E 44 04         A  3431    	LD	BC,_sn_channels
040DD5 09                  A  3432    	ADD	HL,BC
040DD6 E5FDE1              A  3433    	LD	IY,HL
040DD9 FD7203              A  3434    	LD	(IY+%3),D
                           A  3435    ;  380	
                           A  3436    ;  381	        else if (sn.latched_type == 1) 
                           A  3437    .LINE 381
                           A  3438    
040DDC C3 74 0E 04         A  3439    	JR	L_75
040DE0                     A  3440    L_68:
040DE0 3A 4D 44 04         A  3441    	LD	A,(_sn+1)
040DE4 FE01                A  3442    	CP	A,%1
040DE6 C2 74 0E 04         A  3443    	JR	NZ,L_75
040DEA DD7E06              A  3444    	LD	A,(IX+%6)
040DED E60F                A  3445    	AND	A,%F
040DEF B7ED62              A  3446    	UEXT	HL
040DF2 6F                  A  3447    	LD	L,A
040DF3 01 AA 42 04         A  3448    	LD	BC,_sn_vol_table
040DF7 09                  A  3449    	ADD	HL,BC
040DF8 4E                  A  3450    	LD	C,(HL)
040DF9 3A 4C 44 04         A  3451    	LD	A,(_sn)
040DFD B7ED62              A  3452    	UEXT	HL
040E00 6F                  A  3453    	LD	L,A
040E01 3E09                A  3454    	LD	A,%9
040E03 CD 5E 3C 04         A  3455    	CALL	__imul_b
040E07 11 4E 44 04         A  3456    	LD	DE,_sn_channels
040E0B 19                  A  3457    	ADD	HL,DE
040E0C E5FDE1              A  3458    	LD	IY,HL
040E0F FD7100              A  3459    	LD	(IY+%0),C
040E12 FD360100            A  3460    	LD	(IY+%1),%0
                           A  3461    ;  382	
                           A  3462    ;  383	    } else { //Pure data
                           A  3463    .LINE 383
                           A  3464    
040E16 18 5C               A  3465    	JR	L_75
040E18                     A  3466    L_73:
                           A  3467    ;  384	
                           A  3468    ;  385	        if (sn.latched_type == 0) sn_ch
                           A  3469    .LINE 385
                           A  3470    
040E18 3A 4D 44 04         A  3471    	LD	A,(_sn+1)
040E1C B7                  A  3472    	OR	A,A
040E1D 20 21               A  3473    	JR	NZ,L_71
040E1F DD7E06              A  3474    	LD	A,(IX+%6)
040E22 E63F                A  3475    	AND	A,%3F
040E24 57                  A  3476    	LD	D,A
040E25 3A 4C 44 04         A  3477    	LD	A,(_sn)
040E29 B7ED62              A  3478    	UEXT	HL
040E2C 6F                  A  3479    	LD	L,A
040E2D 3E09                A  3480    	LD	A,%9
040E2F CD 5E 3C 04         A  3481    	CALL	__imul_b
040E33 01 4E 44 04         A  3482    	LD	BC,_sn_channels
040E37 09                  A  3483    	ADD	HL,BC
040E38 E5FDE1              A  3484    	LD	IY,HL
040E3B FD7202              A  3485    	LD	(IY+%2),D
                           A  3486    ;  386	        else if (sn.latched_type == 1) 
                           A  3487    .LINE 386
                           A  3488    
040E3E 18 34               A  3489    	JR	L_75
040E40                     A  3490    L_71:
040E40 3A 4D 44 04         A  3491    	LD	A,(_sn+1)
040E44 FE01                A  3492    	CP	A,%1
040E46 20 2C               A  3493    	JR	NZ,L_75
040E48 DD7E06              A  3494    	LD	A,(IX+%6)
040E4B E60F                A  3495    	AND	A,%F
040E4D B7ED62              A  3496    	UEXT	HL
040E50 6F                  A  3497    	LD	L,A
040E51 01 AA 42 04         A  3498    	LD	BC,_sn_vol_table
040E55 09                  A  3499    	ADD	HL,BC
040E56 4E                  A  3500    	LD	C,(HL)
040E57 3A 4C 44 04         A  3501    	LD	A,(_sn)
040E5B B7ED62              A  3502    	UEXT	HL
040E5E 6F                  A  3503    	LD	L,A
040E5F 3E09                A  3504    	LD	A,%9
040E61 CD 5E 3C 04         A  3505    	CALL	__imul_b
040E65 11 4E 44 04         A  3506    	LD	DE,_sn_channels
040E69 19                  A  3507    	ADD	HL,DE
040E6A E5FDE1              A  3508    	LD	IY,HL
040E6D FD7100              A  3509    	LD	(IY+%0),C
040E70 FD360100            A  3510    	LD	(IY+%1),%0
                           A  3511    ;  387	
                           A  3512    ;  388	    }
040E74                     A  3513    L_75:
                           A  3514    .LINE 388
                           A  3515    
                           A  3516    ;  389	
                           A  3517    ;  390	    if (sn.latched_channel == 3) return
                           A  3518    .LINE 390
                           A  3519    
040E74 3A 4C 44 04         A  3520    	LD	A,(_sn)
040E78 FE03                A  3521    	CP	A,%3
040E7A CA CA 0F 04         A  3522    	JR	Z,L_84
                           A  3523    ;  391	
                           A  3524    ;  392	    //For an SN76489 game.vgm_info.f_sc
                           A  3525    ;  393	
                           A  3526    ;  394	    sn_channels[sn.latched_channel].fre
                           A  3527    .LINE 394
                           A  3528    
040E7E 01 CF 43 04         A  3529    	LD	BC,_game+1
040E82 DD0FFD              A  3530    	LD	(IX+%FFFFFFFD),BC
040E85 3A 4C 44 04         A  3531    	LD	A,(_sn)
040E89 B7ED62              A  3532    	UEXT	HL
040E8C 6F                  A  3533    	LD	L,A
040E8D 3E09                A  3534    	LD	A,%9
040E8F CD 5E 3C 04         A  3535    	CALL	__imul_b
040E93 01 4E 44 04         A  3536    	LD	BC,_sn_channels
040E97 09                  A  3537    	ADD	HL,BC
040E98 E5FDE1              A  3538    	LD	IY,HL
040E9B FD7E03              A  3539    	LD	A,(IY+%3)
040E9E E60F                A  3540    	AND	A,%F
040EA0 B7ED62              A  3541    	UEXT	HL
040EA3 6F                  A  3542    	LD	L,A
040EA4 E5D1                A  3543    	LD	DE,HL
040EA6 3A 4C 44 04         A  3544    	LD	A,(_sn)
040EAA B7ED62              A  3545    	UEXT	HL
040EAD 6F                  A  3546    	LD	L,A
040EAE 3E09                A  3547    	LD	A,%9
040EB0 CD 5E 3C 04         A  3548    	CALL	__imul_b
040EB4 09                  A  3549    	ADD	HL,BC
040EB5 E5FDE1              A  3550    	LD	IY,HL
040EB8 FD7E02              A  3551    	LD	A,(IY+%2)
040EBB B7ED62              A  3552    	UEXT	HL
040EBE 6F                  A  3553    	LD	L,A
040EBF 29                  A  3554    	ADD	HL,HL
040EC0 29                  A  3555    	ADD	HL,HL
040EC1 29                  A  3556    	ADD	HL,HL
040EC2 29                  A  3557    	ADD	HL,HL
040EC3 E5C1                A  3558    	LD	BC,HL
040EC5 D5E1                A  3559    	LD	HL,DE
040EC7 CD 85 39 04         A  3560    	CALL	__ior
040ECB E5C1                A  3561    	LD	BC,HL
040ECD 2A D6 43 04         A  3562    	LD	HL,(_game+8)
040ED1 CD AD 3C 04         A  3563    	CALL	__idivu
040ED5 E5C1                A  3564    	LD	BC,HL
040ED7 3A 4C 44 04         A  3565    	LD	A,(_sn)
040EDB B7ED62              A  3566    	UEXT	HL
040EDE 6F                  A  3567    	LD	L,A
040EDF 3E09                A  3568    	LD	A,%9
040EE1 CD 5E 3C 04         A  3569    	CALL	__imul_b
040EE5 11 4E 44 04         A  3570    	LD	DE,_sn_channels
040EE9 19                  A  3571    	ADD	HL,DE
040EEA E5FDE1              A  3572    	LD	IY,HL
040EED FD7106              A  3573    	LD	(IY+%6),C
040EF0 FD7007              A  3574    	LD	(IY+%7),B
                           A  3575    ;  395	
                           A  3576    ;  396	    if (sn.latched_type == 0) change_fr
                           A  3577    .LINE 396
                           A  3578    
040EF3 3A 4D 44 04         A  3579    	LD	A,(_sn+1)
040EF7 B7                  A  3580    	OR	A,A
040EF8 20 57               A  3581    	JR	NZ,L_83
040EFA 01170000            A  3582    	LD	BC,23
040EFE C5                  A  3583    	PUSH	BC
040EFF CD 8C 30 04         A  3584    	CALL	_putch
040F03 C1                  A  3585    	POP	BC
040F04 01000000            A  3586    	LD	BC,0
040F08 C5                  A  3587    	PUSH	BC
040F09 CD 8C 30 04         A  3588    	CALL	_putch
040F0D C1                  A  3589    	POP	BC
040F0E 01850000            A  3590    	LD	BC,133
040F12 C5                  A  3591    	PUSH	BC
040F13 CD 8C 30 04         A  3592    	CALL	_putch
040F17 C1                  A  3593    	POP	BC
040F18 3A 4C 44 04         A  3594    	LD	A,(_sn)
040F1C B7ED62              A  3595    	UEXT	HL
040F1F 6F                  A  3596    	LD	L,A
040F20 E5                  A  3597    	PUSH	HL
040F21 CD 8C 30 04         A  3598    	CALL	_putch
040F25 C1                  A  3599    	POP	BC
040F26 01030000            A  3600    	LD	BC,3
040F2A C5                  A  3601    	PUSH	BC
040F2B CD 8C 30 04         A  3602    	CALL	_putch
040F2F C1                  A  3603    	POP	BC
040F30 3A 4C 44 04         A  3604    	LD	A,(_sn)
040F34 B7ED62              A  3605    	UEXT	HL
040F37 6F                  A  3606    	LD	L,A
040F38 3E09                A  3607    	LD	A,%9
040F3A CD 5E 3C 04         A  3608    	CALL	__imul_b
040F3E 01 4E 44 04         A  3609    	LD	BC,_sn_channels
040F42 09                  A  3610    	ADD	HL,BC
040F43 E5FDE1              A  3611    	LD	IY,HL
040F46 FD0706              A  3612    	LD	BC,(IY+%6)
040F49 C5                  A  3613    	PUSH	BC
040F4A CD BC 24 04         A  3614    	CALL	_write16bit
040F4E C1                  A  3615    	POP	BC
040F4F 18 79               A  3616    	JR	L_84
                           A  3617    ;  397	
                           A  3618    ;  398	    else if (sn.latched_type == 1) chan
040F51                     A  3619    L_83:
                           A  3620    .LINE 398
                           A  3621    
040F51 3A 4D 44 04         A  3622    	LD	A,(_sn+1)
040F55 FE01                A  3623    	CP	A,%1
040F57 20 71               A  3624    	JR	NZ,L_84
040F59 01170000            A  3625    	LD	BC,23
040F5D C5                  A  3626    	PUSH	BC
040F5E CD 8C 30 04         A  3627    	CALL	_putch
040F62 C1                  A  3628    	POP	BC
040F63 01000000            A  3629    	LD	BC,0
040F67 C5                  A  3630    	PUSH	BC
040F68 CD 8C 30 04         A  3631    	CALL	_putch
040F6C C1                  A  3632    	POP	BC
040F6D 01850000            A  3633    	LD	BC,133
040F71 C5                  A  3634    	PUSH	BC
040F72 CD 8C 30 04         A  3635    	CALL	_putch
040F76 C1                  A  3636    	POP	BC
040F77 3A 4C 44 04         A  3637    	LD	A,(_sn)
040F7B B7ED62              A  3638    	UEXT	HL
040F7E 6F                  A  3639    	LD	L,A
040F7F E5                  A  3640    	PUSH	HL
040F80 CD 8C 30 04         A  3641    	CALL	_putch
040F84 C1                  A  3642    	POP	BC
040F85 01020000            A  3643    	LD	BC,2
040F89 C5                  A  3644    	PUSH	BC
040F8A CD 8C 30 04         A  3645    	CALL	_putch
040F8E C1                  A  3646    	POP	BC
040F8F 3A 4C 44 04         A  3647    	LD	A,(_sn)
040F93 B7ED62              A  3648    	UEXT	HL
040F96 6F                  A  3649    	LD	L,A
040F97 3E09                A  3650    	LD	A,%9
040F99 CD 5E 3C 04         A  3651    	CALL	__imul_b
040F9D 01 4E 44 04         A  3652    	LD	BC,_sn_channels
040FA1 09                  A  3653    	ADD	HL,BC
040FA2 E5FDE1              A  3654    	LD	IY,HL
040FA5 FD0700              A  3655    	LD	BC,(IY+%0)
040FA8 CD 60 3A 04         A  3656    	CALL	__stoiu
040FAC AF                  A  3657    	XOR	A,A
040FAD E5C1                A  3658    	LD	BC,HL
040FAF CD B0 3B 04         A  3659    	CALL	__ultof
040FB3 DD31FD              A  3660    	LD	IY,(IX+%FFFFFFFD)
040FB6 FD2719              A  3661    	LD	HL,(IY+%19)
040FB9 FD5E1C              A  3662    	LD	E,(IY+%1C)
040FBC CD A0 39 04         A  3663    	CALL	__fmul
040FC0 CD ED 3C 04         A  3664    	CALL	__ftol
040FC4 C5                  A  3665    	PUSH	BC
040FC5 CD 8C 30 04         A  3666    	CALL	_putch
040FC9 C1                  A  3667    	POP	BC
                           A  3668    ;  399	
                           A  3669    ;  400	}
040FCA                     A  3670    L_84:
                           A  3671    .LINE 400
                           A  3672    
040FCA DDF9                A  3673    	LD	SP,IX
040FCC DDE1                A  3674    	POP	IX
040FCE C9                  A  3675    	RET	
                           A  3676    
                           A  3677    
                           A  3678    ;**************************** _process_0x50_com
                           A  3679    ;Name                         Addr/Register   S
                           A  3680    ;_write16bit                         IMPORT  --
                           A  3681    ;_putch                              IMPORT  --
                           A  3682    ;_game                               STATIC    
                           A  3683    ;_sn_vol_table                       STATIC    
                           A  3684    ;_sn_channels                        STATIC    
                           A  3685    ;_sn                                 STATIC    
                           A  3686    ;G_4                                   IX-3    
                           A  3687    ;data                                  IX+6    
                           A  3688    
                           A  3689    
                           A  3690    ; Stack Frame Size: 12 (bytes)
                           A  3691    ;       Spill Code: 0 (instruction)
                           A  3692    
                           A  3693    
                           A  3694    .ENDFUNC "process_0x50_command",400,"_process_0
                           A  3695    	SEGMENT DATA
0442BA                     A  3696    _ay_vol_table:
0442BA 00                  A  3697    	DB	0
0442BB 08                  A  3698    	DB	8
0442BC 11                  A  3699    	DB	17
0442BD 19                  A  3700    	DB	25
0442BE 22                  A  3701    	DB	34
0442BF 2A                  A  3702    	DB	42
0442C0 33                  A  3703    	DB	51
0442C1 3B                  A  3704    	DB	59
0442C2 44                  A  3705    	DB	68
0442C3 4C                  A  3706    	DB	76
0442C4 55                  A  3707    	DB	85
0442C5 5D                  A  3708    	DB	93
0442C6 66                  A  3709    	DB	102
0442C7 6E                  A  3710    	DB	110
0442C8 77                  A  3711    	DB	119
0442C9 7F                  A  3712    	DB	127
                           A  3713    .DEFINE "ay_vol_table"
                           A  3714    .ALIAS "_ay_vol_table"
                           A  3715    .CLASS 69
                           A  3716    .VALUE _ay_vol_table
                           A  3717    .DIM 16
                           A  3718    .TYPE 108
                           A  3719    .ENDEF
0442CA                     A  3720    _ym_vol_table:
0442CA 00                  A  3721    	DB	0
0442CB 01                  A  3722    	DB	1
0442CC 01                  A  3723    	DB	1
0442CD 01                  A  3724    	DB	1
0442CE 02                  A  3725    	DB	2
0442CF 02                  A  3726    	DB	2
0442D0 02                  A  3727    	DB	2
0442D1 03                  A  3728    	DB	3
0442D2 04                  A  3729    	DB	4
0442D3 04                  A  3730    	DB	4
0442D4 05                  A  3731    	DB	5
0442D5 06                  A  3732    	DB	6
0442D6 07                  A  3733    	DB	7
0442D7 08                  A  3734    	DB	8
0442D8 0A                  A  3735    	DB	10
0442D9 0B                  A  3736    	DB	11
0442DA 0D                  A  3737    	DB	13
0442DB 0F                  A  3738    	DB	15
0442DC 11                  A  3739    	DB	17
0442DD 14                  A  3740    	DB	20
0442DE 17                  A  3741    	DB	23
0442DF 1A                  A  3742    	DB	26
0442E0 1E                  A  3743    	DB	30
0442E1 23                  A  3744    	DB	35
0442E2 27                  A  3745    	DB	39
0442E3 2D                  A  3746    	DB	45
0442E4 33                  A  3747    	DB	51
0442E5 3B                  A  3748    	DB	59
0442E6 43                  A  3749    	DB	67
0442E7 4C                  A  3750    	DB	76
0442E8 56                  A  3751    	DB	86
0442E9 62                  A  3752    	DB	98
                           A  3753    .DEFINE "ym_vol_table"
                           A  3754    .ALIAS "_ym_vol_table"
                           A  3755    .CLASS 69
                           A  3756    .VALUE _ym_vol_table
                           A  3757    .DIM 32
                           A  3758    .TYPE 108
                           A  3759    .ENDEF
                           A  3760    ;  401	
                           A  3761    ;  402	uint8_t ay_vol_table[16] = {0, 8, 17, 2
                           A  3762    ;  403	uint8_t ym_vol_table[32] = {0, 1, 1, 1,
                           A  3763    	SEGMENT CODE
                           A  3764    ;  404	
                           A  3765    ;  405	UINT32 little_long(UINT8 b0, UINT8 b1, 
040FCF                     A  3766    _little_long:
                           A  3767    .DEFINE "_little_long"
                           A  3768    
                           A  3769    .VALUE _little_long
                           A  3770    
                           A  3771    .CLASS 2
                           A  3772    
                           A  3773    .TYPE 79
                           A  3774    
                           A  3775    .ENDEF
                           A  3776    
                           A  3777    .BEGFUNC "little_long",405,"_little_long"
                           A  3778    
                           A  3779    .LINE 405
                           A  3780    
                           A  3781    .DEFINE "b0"
                           A  3782    
                           A  3783    .CLASS 65
                           A  3784    
                           A  3785    .VALUE 6
                           A  3786    
                           A  3787    .TYPE 12
                           A  3788    
                           A  3789    .ENDEF
                           A  3790    
                           A  3791    .DEFINE "b1"
                           A  3792    
                           A  3793    .CLASS 65
                           A  3794    
                           A  3795    .VALUE 9
                           A  3796    
                           A  3797    .TYPE 12
                           A  3798    
                           A  3799    .ENDEF
                           A  3800    
                           A  3801    .DEFINE "b2"
                           A  3802    
                           A  3803    .CLASS 65
                           A  3804    
                           A  3805    .VALUE 12
                           A  3806    
                           A  3807    .TYPE 12
                           A  3808    
                           A  3809    .ENDEF
                           A  3810    
                           A  3811    .DEFINE "b3"
                           A  3812    
                           A  3813    .CLASS 65
                           A  3814    
                           A  3815    .VALUE 15
                           A  3816    
                           A  3817    .TYPE 12
                           A  3818    
                           A  3819    .ENDEF
                           A  3820    
                           A  3821    .DEFINE "little_long"
                           A  3822    
                           A  3823    .CLASS 65
                           A  3824    
                           A  3825    .VALUE -4
                           A  3826    
                           A  3827    .TYPE 15
                           A  3828    
                           A  3829    .ENDEF
                           A  3830    
040FCF DDE5                A  3831    	PUSH	IX
040FD1 DD210000 00         A  3832    	LD	IX,0
040FD6 DD39                A  3833    	ADD	IX,SP
040FD8 C5                  A  3834    	PUSH	BC
040FD9 3B                  A  3835    	DEC	SP
                           A  3836    ;  406	
                           A  3837    ;  407		UINT32 little_long = 0;
                           A  3838    ;  408			
                           A  3839    ;  409		little_long += (UINT32)(b0 << 24);
                           A  3840    .LINE 409
                           A  3841    
040FDA DD7E06              A  3842    	LD	A,(IX+%6)
040FDD B7ED62              A  3843    	UEXT	HL
040FE0 6F                  A  3844    	LD	L,A
040FE1 3E18                A  3845    	LD	A,%18
040FE3 CD B0 3D 04         A  3846    	CALL	__ishl_b
040FE7 E5C1                A  3847    	LD	BC,HL
040FE9 CD A6 3C 04         A  3848    	CALL	__itol
040FED DD0FFC              A  3849    	LD	(IX+%FFFFFFFC),BC
040FF0 DD77FF              A  3850    	LD	(IX+%FFFFFFFF),A
                           A  3851    ;  410		little_long += (UINT32)(b1 << 16);
                           A  3852    .LINE 410
                           A  3853    
040FF3 DD7E09              A  3854    	LD	A,(IX+%9)
040FF6 B7ED62              A  3855    	UEXT	HL
040FF9 6F                  A  3856    	LD	L,A
040FFA E5                  A  3857    	PUSH	HL
040FFB B7ED62              A  3858    	UEXT	HL
040FFE E5                  A  3859    	PUSH	HL
040FFF 33                  A  3860    	INC	SP
041000 E1                  A  3861    	POP	HL
041001 33                  A  3862    	INC	SP
041002 33                  A  3863    	INC	SP
041003 E5C1                A  3864    	LD	BC,HL
041005 CD A6 3C 04         A  3865    	CALL	__itol
041009 5F                  A  3866    	LD	E,A
04100A C5E1                A  3867    	LD	HL,BC
04100C DD07FC              A  3868    	LD	BC,(IX+%FFFFFFFC)
04100F DD7EFF              A  3869    	LD	A,(IX+%FFFFFFFF)
041012 CD FF 35 04         A  3870    	CALL	__ladd
041016 DD2FFC              A  3871    	LD	(IX+%FFFFFFFC),HL
041019 DD73FF              A  3872    	LD	(IX+%FFFFFFFF),E
                           A  3873    ;  411		little_long += (UINT32)(b2 << 8);
                           A  3874    .LINE 411
                           A  3875    
04101C DD7E0C              A  3876    	LD	A,(IX+%C)
04101F B7ED62              A  3877    	UEXT	HL
041022 6F                  A  3878    	LD	L,A
041023 E5                  A  3879    	PUSH	HL
041024 B7ED62              A  3880    	UEXT	HL
041027 E5                  A  3881    	PUSH	HL
041028 33                  A  3882    	INC	SP
041029 33                  A  3883    	INC	SP
04102A E1                  A  3884    	POP	HL
04102B 33                  A  3885    	INC	SP
04102C E5C1                A  3886    	LD	BC,HL
04102E CD A6 3C 04         A  3887    	CALL	__itol
041032 5F                  A  3888    	LD	E,A
041033 C5E1                A  3889    	LD	HL,BC
041035 DD07FC              A  3890    	LD	BC,(IX+%FFFFFFFC)
041038 DD7EFF              A  3891    	LD	A,(IX+%FFFFFFFF)
04103B CD FF 35 04         A  3892    	CALL	__ladd
04103F DD2FFC              A  3893    	LD	(IX+%FFFFFFFC),HL
041042 DD73FF              A  3894    	LD	(IX+%FFFFFFFF),E
                           A  3895    ;  412		little_long += (UINT32)b3;
                           A  3896    .LINE 412
                           A  3897    
041045 B7ED62              A  3898    	UEXT	HL
041048 DD6E0F              A  3899    	LD	L,(IX+%F)
04104B E5C1                A  3900    	LD	BC,HL
04104D 7C                  A  3901    	LD	A,H
04104E DD27FC              A  3902    	LD	HL,(IX+%FFFFFFFC)
041051 DD5EFF              A  3903    	LD	E,(IX+%FFFFFFFF)
041054 CD FF 35 04         A  3904    	CALL	__ladd
041058 DD2FFC              A  3905    	LD	(IX+%FFFFFFFC),HL
04105B DD73FF              A  3906    	LD	(IX+%FFFFFFFF),E
                           A  3907    ;  413			
                           A  3908    ;  414		return little_long;
                           A  3909    .LINE 414
                           A  3910    
04105E DD27FC              A  3911    	LD	HL,(IX+%FFFFFFFC)
041061 DD5EFF              A  3912    	LD	E,(IX+%FFFFFFFF)
                           A  3913    ;  415			
                           A  3914    ;  416	}
                           A  3915    .LINE 416
                           A  3916    
041064 DDF9                A  3917    	LD	SP,IX
041066 DDE1                A  3918    	POP	IX
041068 C9                  A  3919    	RET	
                           A  3920    
                           A  3921    
                           A  3922    ;**************************** _little_long ****
                           A  3923    ;Name                         Addr/Register   S
                           A  3924    ;little_long                           IX-4    
                           A  3925    ;b3                                   IX+15    
                           A  3926    ;b2                                   IX+12    
                           A  3927    ;b1                                    IX+9    
                           A  3928    ;b0                                    IX+6    
                           A  3929    
                           A  3930    
                           A  3931    ; Stack Frame Size: 22 (bytes)
                           A  3932    ;       Spill Code: 0 (instruction)
                           A  3933    
                           A  3934    
                           A  3935    .ENDFUNC "little_long",416,"_little_long"
                           A  3936    ;  417	
                           A  3937    ;  418	uint32_t bigtolittle32(const uint8_t *b
041069                     A  3938    _bigtolittle32:
                           A  3939    .DEFINE "_bigtolittle32"
                           A  3940    
                           A  3941    .VALUE _bigtolittle32
                           A  3942    
                           A  3943    .CLASS 2
                           A  3944    
                           A  3945    .TYPE 79
                           A  3946    
                           A  3947    .ENDEF
                           A  3948    
                           A  3949    .BEGFUNC "bigtolittle32",418,"_bigtolittle32"
                           A  3950    
                           A  3951    .LINE 418
                           A  3952    
                           A  3953    .DEFINE "bytes"
                           A  3954    
                           A  3955    .CLASS 65
                           A  3956    
                           A  3957    .VALUE 6
                           A  3958    
                           A  3959    .TYPE 204
                           A  3960    
                           A  3961    .ENDEF
                           A  3962    
041069 DDE5                A  3963    	PUSH	IX
04106B DD210000 00         A  3964    	LD	IX,0
041070 DD39                A  3965    	ADD	IX,SP
041072 ED22F1              A  3966    	LEA	HL,IX+%FFFFFFF1
041075 F9                  A  3967    	LD	SP,HL
                           A  3968    ;  419	    return (bytes[0] << 24) | (bytes[1]
                           A  3969    .LINE 419
                           A  3970    
041076 DD3106              A  3971    	LD	IY,(IX+%6)
041079 B7ED62              A  3972    	UEXT	HL
04107C FD6E01              A  3973    	LD	L,(IY+%1)
04107F E5                  A  3974    	PUSH	HL
041080 E5                  A  3975    	PUSH	HL
041081 B7ED62              A  3976    	UEXT	HL
041084 E5                  A  3977    	PUSH	HL
041085 33                  A  3978    	INC	SP
041086 C1                  A  3979    	POP	BC
041087 DD0FFA              A  3980    	LD	(IX+%FFFFFFFA),BC	; spill
04108A D1                  A  3981    	POP	DE
04108B 33                  A  3982    	INC	SP
04108C 33                  A  3983    	INC	SP
04108D B7ED62              A  3984    	UEXT	HL
041090 FD6E00              A  3985    	LD	L,(IY)
041093 DD73F9              A  3986    	LD	(IX+%FFFFFFF9),E	; spill
041096 E5D1                A  3987    	LD	DE,HL
041098 DD73F8              A  3988    	LD	(IX+%FFFFFFF8),E	; spill
04109B DD5EF9              A  3989    	LD	E,(IX+%FFFFFFF9)	; unspill
04109E 01000000            A  3990    	LD	BC,0
0410A2 DD0FFD              A  3991    	LD	(IX+%FFFFFFFD),BC	; spill
0410A5 DD27FA              A  3992    	LD	HL,(IX+%FFFFFFFA)
0410A8 DD07FD              A  3993    	LD	BC,(IX+%FFFFFFFD)	; unspill
0410AB DD73F9              A  3994    	LD	(IX+%FFFFFFF9),E	; spill
0410AE DD5EF8              A  3995    	LD	E,(IX+%FFFFFFF8)	; unspill
0410B1 7B                  A  3996    	LD	A,E
0410B2 DD5EF9              A  3997    	LD	E,(IX+%FFFFFFF9)	; unspill
0410B5 CD 55 3C 04         A  3998    	CALL	__lor
0410B9 DD2FF5              A  3999    	LD	(IX+%FFFFFFF5),HL
0410BC B7ED62              A  4000    	UEXT	HL
0410BF FD6E02              A  4001    	LD	L,(IY+%2)
0410C2 E5                  A  4002    	PUSH	HL
0410C3 E5                  A  4003    	PUSH	HL
0410C4 B7ED62              A  4004    	UEXT	HL
0410C7 E5                  A  4005    	PUSH	HL
0410C8 33                  A  4006    	INC	SP
0410C9 33                  A  4007    	INC	SP
0410CA C1                  A  4008    	POP	BC
0410CB DD73F9              A  4009    	LD	(IX+%FFFFFFF9),E	; spill
0410CE D1                  A  4010    	POP	DE
0410CF DD73F4              A  4011    	LD	(IX+%FFFFFFF4),E	; spill
0410D2 DD5EF9              A  4012    	LD	E,(IX+%FFFFFFF9)	; unspill
0410D5 33                  A  4013    	INC	SP
0410D6 DD27F5              A  4014    	LD	HL,(IX+%FFFFFFF5)
0410D9 DD73F9              A  4015    	LD	(IX+%FFFFFFF9),E	; spill
0410DC DD5EF4              A  4016    	LD	E,(IX+%FFFFFFF4)	; unspill
0410DF 7B                  A  4017    	LD	A,E
0410E0 DD5EF9              A  4018    	LD	E,(IX+%FFFFFFF9)	; unspill
0410E3 CD 55 3C 04         A  4019    	CALL	__lor
0410E7 DD2FF1              A  4020    	LD	(IX+%FFFFFFF1),HL
0410EA B7ED62              A  4021    	UEXT	HL
0410ED FD6E03              A  4022    	LD	L,(IY+%3)
0410F0 E5C1                A  4023    	LD	BC,HL
0410F2 7C                  A  4024    	LD	A,H
0410F3 DD27F1              A  4025    	LD	HL,(IX+%FFFFFFF1)
0410F6 CD 55 3C 04         A  4026    	CALL	__lor
                           A  4027    ;  420	}
                           A  4028    .LINE 420
                           A  4029    
0410FA DDF9                A  4030    	LD	SP,IX
0410FC DDE1                A  4031    	POP	IX
0410FE C9                  A  4032    	RET	
                           A  4033    
                           A  4034    
                           A  4035    ;**************************** _bigtolittle32 **
                           A  4036    ;Name                         Addr/Register   S
                           A  4037    ;bytes                                 IX+6    
                           A  4038    
                           A  4039    
                           A  4040    ; Stack Frame Size: 24 (bytes)
                           A  4041    ;       Spill Code: -1 (instruction)
                           A  4042    
                           A  4043    
                           A  4044    .ENDFUNC "bigtolittle32",420,"_bigtolittle32"
                           A  4045    ;  421	
                           A  4046    ;  422	uint32_t littletobig32(const uint8_t *b
0410FF                     A  4047    _littletobig32:
                           A  4048    .DEFINE "_littletobig32"
                           A  4049    
                           A  4050    .VALUE _littletobig32
                           A  4051    
                           A  4052    .CLASS 2
                           A  4053    
                           A  4054    .TYPE 79
                           A  4055    
                           A  4056    .ENDEF
                           A  4057    
                           A  4058    .BEGFUNC "littletobig32",422,"_littletobig32"
                           A  4059    
                           A  4060    .LINE 422
                           A  4061    
                           A  4062    .DEFINE "bytes"
                           A  4063    
                           A  4064    .CLASS 65
                           A  4065    
                           A  4066    .VALUE 6
                           A  4067    
                           A  4068    .TYPE 204
                           A  4069    
                           A  4070    .ENDEF
                           A  4071    
0410FF DDE5                A  4072    	PUSH	IX
041101 DD210000 00         A  4073    	LD	IX,0
041106 DD39                A  4074    	ADD	IX,SP
041108 ED22F1              A  4075    	LEA	HL,IX+%FFFFFFF1
04110B F9                  A  4076    	LD	SP,HL
                           A  4077    ;  423	    return ((uint32_t)bytes[0]) |
                           A  4078    ;  424	           ((uint32_t)bytes[1] << 8) |
                           A  4079    ;  425	           ((uint32_t)bytes[2] << 16) |
                           A  4080    ;  426	           ((uint32_t)bytes[3] << 24);
                           A  4081    .LINE 426
                           A  4082    
04110C DD3106              A  4083    	LD	IY,(IX+%6)
04110F B7ED62              A  4084    	UEXT	HL
041112 FD6E01              A  4085    	LD	L,(IY+%1)
041115 E5                  A  4086    	PUSH	HL
041116 E5                  A  4087    	PUSH	HL
041117 B7ED62              A  4088    	UEXT	HL
04111A E5                  A  4089    	PUSH	HL
04111B 33                  A  4090    	INC	SP
04111C 33                  A  4091    	INC	SP
04111D C1                  A  4092    	POP	BC
04111E DD0FFA              A  4093    	LD	(IX+%FFFFFFFA),BC	; spill
041121 D1                  A  4094    	POP	DE
041122 33                  A  4095    	INC	SP
041123 B7ED62              A  4096    	UEXT	HL
041126 FD6E00              A  4097    	LD	L,(IY)
041129 7C                  A  4098    	LD	A,H
04112A DD2FFD              A  4099    	LD	(IX+%FFFFFFFD),HL	; spill
04112D DD27FA              A  4100    	LD	HL,(IX+%FFFFFFFA)
041130 DD07FD              A  4101    	LD	BC,(IX+%FFFFFFFD)	; unspill
041133 CD 55 3C 04         A  4102    	CALL	__lor
041137 DD2FF7              A  4103    	LD	(IX+%FFFFFFF7),HL
04113A B7ED62              A  4104    	UEXT	HL
04113D FD6E02              A  4105    	LD	L,(IY+%2)
041140 E5                  A  4106    	PUSH	HL
041141 E5                  A  4107    	PUSH	HL
041142 B7ED62              A  4108    	UEXT	HL
041145 E5                  A  4109    	PUSH	HL
041146 33                  A  4110    	INC	SP
041147 C1                  A  4111    	POP	BC
041148 DD73F6              A  4112    	LD	(IX+%FFFFFFF6),E	; spill
04114B D1                  A  4113    	POP	DE
04114C DD73F5              A  4114    	LD	(IX+%FFFFFFF5),E	; spill
04114F DD5EF6              A  4115    	LD	E,(IX+%FFFFFFF6)	; unspill
041152 33                  A  4116    	INC	SP
041153 33                  A  4117    	INC	SP
041154 DD27F7              A  4118    	LD	HL,(IX+%FFFFFFF7)
041157 DD73F6              A  4119    	LD	(IX+%FFFFFFF6),E	; spill
04115A DD5EF5              A  4120    	LD	E,(IX+%FFFFFFF5)	; unspill
04115D 7B                  A  4121    	LD	A,E
04115E DD5EF6              A  4122    	LD	E,(IX+%FFFFFFF6)	; unspill
041161 CD 55 3C 04         A  4123    	CALL	__lor
041165 DD2FF2              A  4124    	LD	(IX+%FFFFFFF2),HL
041168 B7ED62              A  4125    	UEXT	HL
04116B FD6E03              A  4126    	LD	L,(IY+%3)
04116E DD73F6              A  4127    	LD	(IX+%FFFFFFF6),E	; spill
041171 E5D1                A  4128    	LD	DE,HL
041173 DD73F1              A  4129    	LD	(IX+%FFFFFFF1),E	; spill
041176 DD5EF6              A  4130    	LD	E,(IX+%FFFFFFF6)	; unspill
041179 01000000            A  4131    	LD	BC,0
04117D DD27F2              A  4132    	LD	HL,(IX+%FFFFFFF2)
041180 DD73F6              A  4133    	LD	(IX+%FFFFFFF6),E	; spill
041183 DD5EF1              A  4134    	LD	E,(IX+%FFFFFFF1)	; unspill
041186 7B                  A  4135    	LD	A,E
041187 DD5EF6              A  4136    	LD	E,(IX+%FFFFFFF6)	; unspill
04118A CD 55 3C 04         A  4137    	CALL	__lor
                           A  4138    ;  427	}
                           A  4139    .LINE 427
                           A  4140    
04118E DDF9                A  4141    	LD	SP,IX
041190 DDE1                A  4142    	POP	IX
041192 C9                  A  4143    	RET	
                           A  4144    
                           A  4145    
                           A  4146    ;**************************** _littletobig32 **
                           A  4147    ;Name                         Addr/Register   S
                           A  4148    ;bytes                                 IX+6    
                           A  4149    
                           A  4150    
                           A  4151    ; Stack Frame Size: 24 (bytes)
                           A  4152    ;       Spill Code: -2 (instruction)
                           A  4153    
                           A  4154    
                           A  4155    .ENDFUNC "littletobig32",427,"_littletobig32"
                           A  4156    ;  428	
                           A  4157    ;  429	uint32_t l2b(uint8_t b0, uint8_t b1, ui
041193                     A  4158    _l2b:
                           A  4159    .DEFINE "_l2b"
                           A  4160    
                           A  4161    .VALUE _l2b
                           A  4162    
                           A  4163    .CLASS 2
                           A  4164    
                           A  4165    .TYPE 79
                           A  4166    
                           A  4167    .ENDEF
                           A  4168    
                           A  4169    .BEGFUNC "l2b",429,"_l2b"
                           A  4170    
                           A  4171    .LINE 429
                           A  4172    
                           A  4173    .DEFINE "b0"
                           A  4174    
                           A  4175    .CLASS 65
                           A  4176    
                           A  4177    .VALUE 6
                           A  4178    
                           A  4179    .TYPE 12
                           A  4180    
                           A  4181    .ENDEF
                           A  4182    
                           A  4183    .DEFINE "b1"
                           A  4184    
                           A  4185    .CLASS 65
                           A  4186    
                           A  4187    .VALUE 9
                           A  4188    
                           A  4189    .TYPE 12
                           A  4190    
                           A  4191    .ENDEF
                           A  4192    
                           A  4193    .DEFINE "b2"
                           A  4194    
                           A  4195    .CLASS 65
                           A  4196    
                           A  4197    .VALUE 12
                           A  4198    
                           A  4199    .TYPE 12
                           A  4200    
                           A  4201    .ENDEF
                           A  4202    
                           A  4203    .DEFINE "b3"
                           A  4204    
                           A  4205    .CLASS 65
                           A  4206    
                           A  4207    .VALUE 15
                           A  4208    
                           A  4209    .TYPE 12
                           A  4210    
                           A  4211    .ENDEF
                           A  4212    
041193 DDE5                A  4213    	PUSH	IX
041195 DD210000 00         A  4214    	LD	IX,0
04119A DD39                A  4215    	ADD	IX,SP
04119C ED22EF              A  4216    	LEA	HL,IX+%FFFFFFEF
04119F F9                  A  4217    	LD	SP,HL
                           A  4218    ;  430	    return ((uint32_t)b0 << 24) |
                           A  4219    ;  431	           ((uint32_t)b1 << 16) |
                           A  4220    ;  432	           ((uint32_t)b2 << 8) |
                           A  4221    ;  433	           (uint32_t)b3;
                           A  4222    .LINE 433
                           A  4223    
0411A0 B7ED62              A  4224    	UEXT	HL
0411A3 DD6E09              A  4225    	LD	L,(IX+%9)
0411A6 E5                  A  4226    	PUSH	HL
0411A7 E5                  A  4227    	PUSH	HL
0411A8 B7ED62              A  4228    	UEXT	HL
0411AB E5                  A  4229    	PUSH	HL
0411AC 33                  A  4230    	INC	SP
0411AD C1                  A  4231    	POP	BC
0411AE DD0FEF              A  4232    	LD	(IX+%FFFFFFEF),BC	; spill
0411B1 E1                  A  4233    	POP	HL
0411B2 DD75F5              A  4234    	LD	(IX+%FFFFFFF5),L	; spill
0411B5 33                  A  4235    	INC	SP
0411B6 33                  A  4236    	INC	SP
0411B7 B7ED62              A  4237    	UEXT	HL
0411BA DD6E06              A  4238    	LD	L,(IX+%6)
0411BD E5D1                A  4239    	LD	DE,HL
0411BF DD73F7              A  4240    	LD	(IX+%FFFFFFF7),E	; spill
0411C2 01000000            A  4241    	LD	BC,0
0411C6 DD6EF5              A  4242    	LD	L,(IX+%FFFFFFF5)	; unspill
0411C9 5D                  A  4243    	LD	E,L
0411CA DD0FF2              A  4244    	LD	(IX+%FFFFFFF2),BC	; spill
0411CD DD27EF              A  4245    	LD	HL,(IX+%FFFFFFEF)
0411D0 DD07F2              A  4246    	LD	BC,(IX+%FFFFFFF2)	; unspill
0411D3 DD73FC              A  4247    	LD	(IX+%FFFFFFFC),E	; spill
0411D6 DD5EF7              A  4248    	LD	E,(IX+%FFFFFFF7)	; unspill
0411D9 7B                  A  4249    	LD	A,E
0411DA DD5EFC              A  4250    	LD	E,(IX+%FFFFFFFC)	; unspill
0411DD CD 55 3C 04         A  4251    	CALL	__lor
0411E1 DD2FF8              A  4252    	LD	(IX+%FFFFFFF8),HL
0411E4 B7ED62              A  4253    	UEXT	HL
0411E7 DD6E0C              A  4254    	LD	L,(IX+%C)
0411EA E5                  A  4255    	PUSH	HL
0411EB E5                  A  4256    	PUSH	HL
0411EC B7ED62              A  4257    	UEXT	HL
0411EF E5                  A  4258    	PUSH	HL
0411F0 33                  A  4259    	INC	SP
0411F1 33                  A  4260    	INC	SP
0411F2 C1                  A  4261    	POP	BC
0411F3 DD73FC              A  4262    	LD	(IX+%FFFFFFFC),E	; spill
0411F6 D1                  A  4263    	POP	DE
0411F7 DD73FB              A  4264    	LD	(IX+%FFFFFFFB),E	; spill
0411FA DD5EFC              A  4265    	LD	E,(IX+%FFFFFFFC)	; unspill
0411FD 33                  A  4266    	INC	SP
0411FE DD27F8              A  4267    	LD	HL,(IX+%FFFFFFF8)
041201 DD73FC              A  4268    	LD	(IX+%FFFFFFFC),E	; spill
041204 DD5EFB              A  4269    	LD	E,(IX+%FFFFFFFB)	; unspill
041207 7B                  A  4270    	LD	A,E
041208 DD5EFC              A  4271    	LD	E,(IX+%FFFFFFFC)	; unspill
04120B CD 55 3C 04         A  4272    	CALL	__lor
04120F DD2FFD              A  4273    	LD	(IX+%FFFFFFFD),HL
041212 B7ED62              A  4274    	UEXT	HL
041215 DD6E0F              A  4275    	LD	L,(IX+%F)
041218 E5C1                A  4276    	LD	BC,HL
04121A 7C                  A  4277    	LD	A,H
04121B DD27FD              A  4278    	LD	HL,(IX+%FFFFFFFD)
04121E CD 55 3C 04         A  4279    	CALL	__lor
                           A  4280    ;  434	}
                           A  4281    .LINE 434
                           A  4282    
041222 DDF9                A  4283    	LD	SP,IX
041224 DDE1                A  4284    	POP	IX
041226 C9                  A  4285    	RET	
                           A  4286    
                           A  4287    
                           A  4288    ;**************************** _l2b ************
                           A  4289    ;Name                         Addr/Register   S
                           A  4290    ;b3                                   IX+15    
                           A  4291    ;b2                                   IX+12    
                           A  4292    ;b1                                    IX+9    
                           A  4293    ;b0                                    IX+6    
                           A  4294    
                           A  4295    
                           A  4296    ; Stack Frame Size: 35 (bytes)
                           A  4297    ;       Spill Code: -3 (instruction)
                           A  4298    
                           A  4299    
                           A  4300    .ENDFUNC "l2b",434,"_l2b"
                           A  4301    	SEGMENT DATA
0442EA                     A  4302    _state:
0442EA 0000                A  4303    	DW	0
0442EC 00                  A  4304    	DB	0
                           A  4305    .DEFINE "state"
                           A  4306    .ALIAS "_state"
                           A  4307    .CLASS 69
                           A  4308    .VALUE _state
                           A  4309    .TYPE 4
                           A  4310    .ENDEF
0442ED                     A  4311    _start_timer0:
0442ED 0000                A  4312    	DW	0
0442EF 00                  A  4313    	DB	0
                           A  4314    .DEFINE "start_timer0"
                           A  4315    .ALIAS "_start_timer0"
                           A  4316    .CLASS 69
                           A  4317    .VALUE _start_timer0
                           A  4318    .TYPE 14
                           A  4319    .ENDEF
0442F0                     A  4320    _target_timer0:
0442F0 0000                A  4321    	DW	0
0442F2 00                  A  4322    	DB	0
                           A  4323    .DEFINE "target_timer0"
                           A  4324    .ALIAS "_target_timer0"
                           A  4325    .CLASS 69
                           A  4326    .VALUE _target_timer0
                           A  4327    .TYPE 14
                           A  4328    .ENDEF
0442F3                     A  4329    _delay_length:
0442F3 0000                A  4330    	DW	0
0442F5 00                  A  4331    	DB	0
                           A  4332    .DEFINE "delay_length"
                           A  4333    .ALIAS "_delay_length"
                           A  4334    .CLASS 69
                           A  4335    .VALUE _delay_length
                           A  4336    .TYPE 14
                           A  4337    .ENDEF
0442F6                     A  4338    _samples_to_wait:
0442F6 0000                A  4339    	DW	0
0442F8 00                  A  4340    	DB	0
                           A  4341    .DEFINE "samples_to_wait"
                           A  4342    .ALIAS "_samples_to_wait"
                           A  4343    .CLASS 69
                           A  4344    .VALUE _samples_to_wait
                           A  4345    .TYPE 14
                           A  4346    .ENDEF
                           A  4347    ;  435	
                           A  4348    ;  436	enum VgmParserState {
                           A  4349    ;  437	    READ_COMMAND,
                           A  4350    ;  438	    WAIT_SAMPLES,
                           A  4351    ;  439	    WRITE_REGISTER,
                           A  4352    ;  440	    END_OF_SOUND_DATA
                           A  4353    ;  441	};
                           A  4354    ;  442	
                           A  4355    ;  443	enum VgmParserState state = READ_COMMAN
                           A  4356    ;  444	unsigned int start_timer0 = 0, target_t
                           A  4357    ;  445	uint24_t delay_length = 0;
                           A  4358    ;  446	uint24_t samples_to_wait = 0;
                           A  4359    	SEGMENT CODE
                           A  4360    ;  447	
                           A  4361    ;  448	UINT8 vgm_init(UINT8 fp) {
041227                     A  4362    _vgm_init:
                           A  4363    .DEFINE "_vgm_init"
                           A  4364    
                           A  4365    .VALUE _vgm_init
                           A  4366    
                           A  4367    .CLASS 2
                           A  4368    
                           A  4369    .TYPE 76
                           A  4370    
                           A  4371    .ENDEF
                           A  4372    
                           A  4373    .BEGFUNC "vgm_init",448,"_vgm_init"
                           A  4374    
                           A  4375    .LINE 448
                           A  4376    
                           A  4377    .DEFINE "fp"
                           A  4378    
                           A  4379    .CLASS 65
                           A  4380    
                           A  4381    .VALUE 6
                           A  4382    
                           A  4383    .TYPE 12
                           A  4384    
                           A  4385    .ENDEF
                           A  4386    
                           A  4387    .DEFINE "i"
                           A  4388    
                           A  4389    .CLASS 65
                           A  4390    
                           A  4391    .VALUE -13
                           A  4392    
                           A  4393    .TYPE 12
                           A  4394    
                           A  4395    .ENDEF
                           A  4396    
041227 DDE5                A  4397    	PUSH	IX
041229 DD210000 00         A  4398    	LD	IX,0
04122E DD39                A  4399    	ADD	IX,SP
041230 ED22C3              A  4400    	LEA	HL,IX+%FFFFFFC3
041233 F9                  A  4401    	LD	SP,HL
                           A  4402    ;  449	
                           A  4403    ;  450	    uint8_t vgm_min_header[64];
                           A  4404    ;  451	    uint8_t vgm_rem_header[192]; //Up t
                           A  4405    ;  452	    uint8_t i;
                           A  4406    ;  453	    uint32_t test_clock = 0;
                           A  4407    ;  454	    game.vgm_info.data_length = 0;
                           A  4408    .LINE 454
                           A  4409    
041234 01 CF 43 04         A  4410    	LD	BC,_game+1
041238 DD0FF4              A  4411    	LD	(IX+%FFFFFFF4),BC
04123B DD0FFD              A  4412    	LD	(IX+%FFFFFFFD),BC
04123E 01000000            A  4413    	LD	BC,0
041242 ED43 E0 43 04       A  4414    	LD	(_game+18),BC
                           A  4415    ;  455	    game.vgm_info.data_start = 0;
                           A  4416    .LINE 455
                           A  4417    
041247 DD31FD              A  4418    	LD	IY,(IX+%FFFFFFFD)
04124A FD0F0E              A  4419    	LD	(IY+%E),BC
                           A  4420    ;  456	
                           A  4421    ;  457	    game.vgm_info.data_pointer = 0;
                           A  4422    .LINE 457
                           A  4423    
04124D FD366500            A  4424    	LD	(IY+%65),%0
041251 FD366600            A  4425    	LD	(IY+%66),%0
                           A  4426    ;  458	    game.vgm_info.loop_start = 0;
                           A  4427    .LINE 458
                           A  4428    
041255 FD0F0A              A  4429    	LD	(IY+%A),BC
                           A  4430    ;  459	    game.vgm_info.gd3_location = 0;
                           A  4431    .LINE 459
                           A  4432    
041258 FD0F15              A  4433    	LD	(IY+%15),BC
04125B FD361800            A  4434    	LD	(IY+%18),%0
                           A  4435    ;  460	    game.vgm_info.header_size = 0;
                           A  4436    .LINE 460
                           A  4437    
04125F FD360D00            A  4438    	LD	(IY+%D),%0
                           A  4439    ;  461	
                           A  4440    ;  462	    game.vgm_info.pause = false;
                           A  4441    .LINE 462
                           A  4442    
041263 FD362100            A  4443    	LD	(IY+%21),%0
                           A  4444    ;  463	
                           A  4445    ;  464	    state = READ_COMMAND;
                           A  4446    .LINE 464
                           A  4447    
041267 ED43 EA 42 04       A  4448    	LD	(_state),BC
                           A  4449    ;  465	
                           A  4450    ;  466	    mos_fread(fp, game.vgm_info.header_
                           A  4451    .LINE 466
                           A  4452    
04126C 01400000            A  4453    	LD	BC,64
041270 C5                  A  4454    	PUSH	BC
041271 ED6622              A  4455    	PEA	IY+%22
041274 DD4E06              A  4456    	LD	C,(IX+%6)
041277 0600                A  4457    	LD	B,%0
041279 C5                  A  4458    	PUSH	BC
04127A CD 11 34 04         A  4459    	CALL	_mos_fread
04127E C1                  A  4460    	POP	BC
04127F C1                  A  4461    	POP	BC
041280 C1                  A  4462    	POP	BC
                           A  4463    ;  467	
                           A  4464    ;  468	    if (game.vgm_info.header_data[0] !=
                           A  4465    .LINE 468
                           A  4466    
041281 DD07F4              A  4467    	LD	BC,(IX+%FFFFFFF4)
041284 DD0FE1              A  4468    	LD	(IX+%FFFFFFE1),BC
041287 DD31F4              A  4469    	LD	IY,(IX+%FFFFFFF4)
04128A FD7E22              A  4470    	LD	A,(IY+%22)
04128D 47                  A  4471    	LD	B,A
04128E 17ED62              A  4472    	SEXT	HL
041291 68                  A  4473    	LD	L,B
041292 01560000            A  4474    	LD	BC,86
041296 B7                  A  4475    	OR	A,A
041297 ED42                A  4476    	SBC	HL,BC
041299 20 2B               A  4477    	JR	NZ,L_91
04129B DD31F4              A  4478    	LD	IY,(IX+%FFFFFFF4)
04129E ED2322              A  4479    	LEA	HL,IY+%22
0412A1 23                  A  4480    	INC	HL
0412A2 7E                  A  4481    	LD	A,(HL)
0412A3 47                  A  4482    	LD	B,A
0412A4 17ED62              A  4483    	SEXT	HL
0412A7 68                  A  4484    	LD	L,B
0412A8 01670000            A  4485    	LD	BC,103
0412AC B7                  A  4486    	OR	A,A
0412AD ED42                A  4487    	SBC	HL,BC
0412AF 20 15               A  4488    	JR	NZ,L_91
0412B1 DD31F4              A  4489    	LD	IY,(IX+%FFFFFFF4)
0412B4 ED2324              A  4490    	LEA	HL,IY+%24
0412B7 7E                  A  4491    	LD	A,(HL)
0412B8 47                  A  4492    	LD	B,A
0412B9 17ED62              A  4493    	SEXT	HL
0412BC 68                  A  4494    	LD	L,B
0412BD 016D0000            A  4495    	LD	BC,109
0412C1 B7                  A  4496    	OR	A,A
0412C2 ED42                A  4497    	SBC	HL,BC
0412C4 28 05               A  4498    	JR	Z,L_93
0412C6                     A  4499    L_91:
0412C6 AF                  A  4500    	XOR	A,A
0412C7 C3 B2 16 04         A  4501    	JR	L_124
0412CB                     A  4502    L_93:
                           A  4503    ;  469	
                           A  4504    ;  470	    if (game.vgm_info.header_data[0x34]
                           A  4505    .LINE 470
                           A  4506    
0412CB DD31F4              A  4507    	LD	IY,(IX+%FFFFFFF4)
0412CE ED0322              A  4508    	LEA	BC,IY+%22
0412D1 DD0FE4              A  4509    	LD	(IX+%FFFFFFE4),BC
0412D4 FD7E56              A  4510    	LD	A,(IY+%56)
0412D7 B7                  A  4511    	OR	A,A
0412D8 28 48               A  4512    	JR	Z,L_94
                           A  4513    ;  471	
                           A  4514    ;  472	        game.vgm_info.header_size = * (
                           A  4515    .LINE 472
                           A  4516    
0412DA DD07F4              A  4517    	LD	BC,(IX+%FFFFFFF4)
0412DD DD0FE1              A  4518    	LD	(IX+%FFFFFFE1),BC
0412E0 DD07F4              A  4519    	LD	BC,(IX+%FFFFFFF4)
0412E3 DD0FDB              A  4520    	LD	(IX+%FFFFFFDB),BC
0412E6 DD31F4              A  4521    	LD	IY,(IX+%FFFFFFF4)
0412E9 ED3322              A  4522    	LEA	IY,IY+%22
0412EC FD2734              A  4523    	LD	HL,(IY+%34)
0412EF FD5E37              A  4524    	LD	E,(IY+%37)
0412F2 010C0000            A  4525    	LD	BC,12
0412F6 AF                  A  4526    	XOR	A,A
0412F7 CD A4 3B 04         A  4527    	CALL	__lsub
0412FB E5C1                A  4528    	LD	BC,HL
0412FD DD31F4              A  4529    	LD	IY,(IX+%FFFFFFF4)
041300 FD710D              A  4530    	LD	(IY+%D),C
                           A  4531    ;  473	        mos_fread(fp, game.vgm_info.hea
                           A  4532    .LINE 473
                           A  4533    
041303 DD31DB              A  4534    	LD	IY,(IX+%FFFFFFDB)
041306 FD7E0D              A  4535    	LD	A,(IY+%D)
041309 B7ED62              A  4536    	UEXT	HL
04130C 6F                  A  4537    	LD	L,A
04130D E5                  A  4538    	PUSH	HL
04130E DD31F4              A  4539    	LD	IY,(IX+%FFFFFFF4)
041311 ED0362              A  4540    	LEA	BC,IY+%62
041314 C5                  A  4541    	PUSH	BC
041315 DD4E06              A  4542    	LD	C,(IX+%6)
041318 0600                A  4543    	LD	B,%0
04131A C5                  A  4544    	PUSH	BC
04131B CD 11 34 04         A  4545    	CALL	_mos_fread
04131F C1                  A  4546    	POP	BC
041320 C1                  A  4547    	POP	BC
041321 C1                  A  4548    	POP	BC
                           A  4549    ;  474	
                           A  4550    ;  475	    }
041322                     A  4551    L_94:
                           A  4552    .LINE 475
                           A  4553    
                           A  4554    ;  476	
                           A  4555    ;  477	    game.vgm_info.data_length = * (uint
                           A  4556    .LINE 477
                           A  4557    
041322 DD07E1              A  4558    	LD	BC,(IX+%FFFFFFE1)
041325 DD0FF7              A  4559    	LD	(IX+%FFFFFFF7),BC
041328 DD0FE7              A  4560    	LD	(IX+%FFFFFFE7),BC
04132B DD07F7              A  4561    	LD	BC,(IX+%FFFFFFF7)
04132E DD0FEA              A  4562    	LD	(IX+%FFFFFFEA),BC
041331 DD07F7              A  4563    	LD	BC,(IX+%FFFFFFF7)
041334 DD0FD8              A  4564    	LD	(IX+%FFFFFFD8),BC
041337 DD31F7              A  4565    	LD	IY,(IX+%FFFFFFF7)
04133A FD2726              A  4566    	LD	HL,(IY+%26)
04133D FD5E29              A  4567    	LD	E,(IY+%29)
041340 01040000            A  4568    	LD	BC,4
041344 AF                  A  4569    	XOR	A,A
041345 CD A4 3B 04         A  4570    	CALL	__lsub
041349 DD2FC3              A  4571    	LD	(IX+%FFFFFFC3),HL
04134C B7ED62              A  4572    	UEXT	HL
04134F FD6E0D              A  4573    	LD	L,(IY+%D)
041352 E5C1                A  4574    	LD	BC,HL
041354 7C                  A  4575    	LD	A,H
041355 DD27C3              A  4576    	LD	HL,(IX+%FFFFFFC3)
041358 CD A4 3B 04         A  4577    	CALL	__lsub
04135C 01400000            A  4578    	LD	BC,64
041360 AF                  A  4579    	XOR	A,A
041361 CD A4 3B 04         A  4580    	CALL	__lsub
041365 FD2F11              A  4581    	LD	(IY+%11),HL
                           A  4582    ;  478	    game.vgm_info.data_start = game.vgm
                           A  4583    .LINE 478
                           A  4584    
041368 DD31D8              A  4585    	LD	IY,(IX+%FFFFFFD8)
04136B FD7E0D              A  4586    	LD	A,(IY+%D)
04136E B7ED62              A  4587    	UEXT	HL
041371 6F                  A  4588    	LD	L,A
041372 E5FDE1              A  4589    	LD	IY,HL
041375 ED0340              A  4590    	LEA	BC,IY+%40
041378 DD31D8              A  4591    	LD	IY,(IX+%FFFFFFD8)
04137B FD0F0E              A  4592    	LD	(IY+%E),BC
                           A  4593    ;  479		
                           A  4594    ;  480		game.vgm_info.song_data = (char*)ma
                           A  4595    .LINE 480
                           A  4596    
04137E FD0711              A  4597    	LD	BC,(IY+%11)
041381 C5                  A  4598    	PUSH	BC
041382 CD 0A 37 04         A  4599    	CALL	_malloc
041386 C1                  A  4600    	POP	BC
041387 DD31D8              A  4601    	LD	IY,(IX+%FFFFFFD8)
04138A FD2F62              A  4602    	LD	(IY+%62),HL
                           A  4603    ;  481	
                           A  4604    ;  482	    if ( * (uint32_t * )(game.vgm_info.
                           A  4605    .LINE 482
                           A  4606    
04138D DD31F7              A  4607    	LD	IY,(IX+%FFFFFFF7)
041390 FD272E              A  4608    	LD	HL,(IY+%2E)
041393 FD5E31              A  4609    	LD	E,(IY+%31)
041396 01000000            A  4610    	LD	BC,0
04139A AF                  A  4611    	XOR	A,A
04139B CD D7 3C 04         A  4612    	CALL	__lcmpu
04139F 28 33               A  4613    	JR	Z,L_99
                           A  4614    ;  483	
                           A  4615    ;  484	        game.vgm_info.chip_type = 1;
                           A  4616    .LINE 484
                           A  4617    
0413A1 DD07F7              A  4618    	LD	BC,(IX+%FFFFFFF7)
0413A4 DD0FE7              A  4619    	LD	(IX+%FFFFFFE7),BC
0413A7 DD07F7              A  4620    	LD	BC,(IX+%FFFFFFF7)
0413AA DD0FEA              A  4621    	LD	(IX+%FFFFFFEA),BC
0413AD DD07F7              A  4622    	LD	BC,(IX+%FFFFFFF7)
0413B0 DD0FD5              A  4623    	LD	(IX+%FFFFFFD5),BC
0413B3 DD31F7              A  4624    	LD	IY,(IX+%FFFFFFF7)
0413B6 FD360001            A  4625    	LD	(IY+%0),%1
                           A  4626    ;  485	        game.vgm_info.clock = * (uint32
                           A  4627    .LINE 485
                           A  4628    
0413BA DD31D5              A  4629    	LD	IY,(IX+%FFFFFFD5)
0413BD ED232E              A  4630    	LEA	HL,IY+%2E
0413C0 ED07                A  4631    	LD	BC,(HL)
0413C2 23                  A  4632    	INC	HL
0413C3 23                  A  4633    	INC	HL
0413C4 23                  A  4634    	INC	HL
0413C5 7E                  A  4635    	LD	A,(HL)
0413C6 FD0F02              A  4636    	LD	(IY+%2),BC
0413C9 FD7705              A  4637    	LD	(IY+%5),A
                           A  4638    ;  486	        game.vgm_info.n_channels = 3;
                           A  4639    .LINE 486
                           A  4640    
0413CC FD360603            A  4641    	LD	(IY+%6),%3
                           A  4642    ;  487	
                           A  4643    ;  488	    } else if ( * (uint32_t * )(game.vg
                           A  4644    .LINE 488
                           A  4645    
0413D0 C3 8F 14 04         A  4646    	JR	L_102
0413D4                     A  4647    L_99:
0413D4 DD31F4              A  4648    	LD	IY,(IX+%FFFFFFF4)
0413D7 ED0322              A  4649    	LEA	BC,IY+%22
0413DA DD0FE4              A  4650    	LD	(IX+%FFFFFFE4),BC
0413DD ED3322              A  4651    	LEA	IY,IY+%22
0413E0 FD2774              A  4652    	LD	HL,(IY+%74)
0413E3 FD5E77              A  4653    	LD	E,(IY+%77)
0413E6 01000000            A  4654    	LD	BC,0
0413EA AF                  A  4655    	XOR	A,A
0413EB CD D7 3C 04         A  4656    	CALL	__lcmpu
0413EF 28 43               A  4657    	JR	Z,L_97
                           A  4658    ;  489	
                           A  4659    ;  490	        game.vgm_info.chip_type = 0;
                           A  4660    .LINE 490
                           A  4661    
0413F1 DD07F7              A  4662    	LD	BC,(IX+%FFFFFFF7)
0413F4 DD0FE7              A  4663    	LD	(IX+%FFFFFFE7),BC
0413F7 DD07F7              A  4664    	LD	BC,(IX+%FFFFFFF7)
0413FA DD0FEA              A  4665    	LD	(IX+%FFFFFFEA),BC
0413FD DD07F7              A  4666    	LD	BC,(IX+%FFFFFFF7)
041400 DD0FD2              A  4667    	LD	(IX+%FFFFFFD2),BC
041403 DD31F7              A  4668    	LD	IY,(IX+%FFFFFFF7)
041406 FD360000            A  4669    	LD	(IY+%0),%0
                           A  4670    ;  491	        game.vgm_info.clock = * (uint32
                           A  4671    .LINE 491
                           A  4672    
04140A DD31D2              A  4673    	LD	IY,(IX+%FFFFFFD2)
04140D ED3322              A  4674    	LEA	IY,IY+%22
041410 ED2374              A  4675    	LEA	HL,IY+%74
041413 ED07                A  4676    	LD	BC,(HL)
041415 23                  A  4677    	INC	HL
041416 23                  A  4678    	INC	HL
041417 23                  A  4679    	INC	HL
041418 7E                  A  4680    	LD	A,(HL)
041419 DD31D2              A  4681    	LD	IY,(IX+%FFFFFFD2)
04141C FD0F02              A  4682    	LD	(IY+%2),BC
04141F FD7705              A  4683    	LD	(IY+%5),A
                           A  4684    ;  492	
                           A  4685    ;  493	        game.vgm_info.chip_variant = ga
                           A  4686    .LINE 493
                           A  4687    
041422 ED3322              A  4688    	LEA	IY,IY+%22
041425 FD7E78              A  4689    	LD	A,(IY+%78)
041428 DD31D2              A  4690    	LD	IY,(IX+%FFFFFFD2)
04142B FD7701              A  4691    	LD	(IY+%1),A
                           A  4692    ;  494	
                           A  4693    ;  495	        game.vgm_info.n_channels = 3;
                           A  4694    .LINE 495
                           A  4695    
04142E FD360603            A  4696    	LD	(IY+%6),%3
                           A  4697    ;  496	
                           A  4698    ;  497	    } else if ( * (uint32_t * )(game.vg
                           A  4699    .LINE 497
                           A  4700    
041432 18 5B               A  4701    	JR	L_102
041434                     A  4702    L_97:
041434 DD31F4              A  4703    	LD	IY,(IX+%FFFFFFF4)
041437 ED0322              A  4704    	LEA	BC,IY+%22
04143A DD0FE4              A  4705    	LD	(IX+%FFFFFFE4),BC
04143D 01840000            A  4706    	LD	BC,132
041441 ED1322              A  4707    	LEA	DE,IY+%22
041444 D5E1                A  4708    	LD	HL,DE
041446 09                  A  4709    	ADD	HL,BC
041447 E5FDE1              A  4710    	LD	IY,HL
04144A FD2700              A  4711    	LD	HL,(IY)
04144D FD5E03              A  4712    	LD	E,(IY+%3)
041450 01000000            A  4713    	LD	BC,0
041454 AF                  A  4714    	XOR	A,A
041455 CD D7 3C 04         A  4715    	CALL	__lcmpu
041459 28 34               A  4716    	JR	Z,L_102
                           A  4717    ;  498	
                           A  4718    ;  499	        game.vgm_info.chip_type = 3;
                           A  4719    .LINE 499
                           A  4720    
04145B DD07F7              A  4721    	LD	BC,(IX+%FFFFFFF7)
04145E DD0FE7              A  4722    	LD	(IX+%FFFFFFE7),BC
041461 DD07F7              A  4723    	LD	BC,(IX+%FFFFFFF7)
041464 DD0FEA              A  4724    	LD	(IX+%FFFFFFEA),BC
041467 DD07F7              A  4725    	LD	BC,(IX+%FFFFFFF7)
04146A DD0FCF              A  4726    	LD	(IX+%FFFFFFCF),BC
04146D DD31F7              A  4727    	LD	IY,(IX+%FFFFFFF7)
041470 FD360003            A  4728    	LD	(IY+%0),%3
                           A  4729    ;  500	        game.vgm_info.clock = * (uint32
                           A  4730    .LINE 500
                           A  4731    
041474 01840000            A  4732    	LD	BC,132
041478 DD31CF              A  4733    	LD	IY,(IX+%FFFFFFCF)
04147B ED2322              A  4734    	LEA	HL,IY+%22
04147E 09                  A  4735    	ADD	HL,BC
04147F ED07                A  4736    	LD	BC,(HL)
041481 23                  A  4737    	INC	HL
041482 23                  A  4738    	INC	HL
041483 23                  A  4739    	INC	HL
041484 7E                  A  4740    	LD	A,(HL)
041485 FD0F02              A  4741    	LD	(IY+%2),BC
041488 FD7705              A  4742    	LD	(IY+%5),A
                           A  4743    ;  501	
                           A  4744    ;  502	        game.vgm_info.n_channels = 3;
                           A  4745    .LINE 502
                           A  4746    
04148B FD360603            A  4747    	LD	(IY+%6),%3
                           A  4748    ;  503	
                           A  4749    ;  504	    }
04148F                     A  4750    L_102:
                           A  4751    .LINE 504
                           A  4752    
                           A  4753    ;  505	
                           A  4754    ;  506	    if ( * (uint32_t * )(game.vgm_info.
                           A  4755    .LINE 506
                           A  4756    
04148F DD31E4              A  4757    	LD	IY,(IX+%FFFFFFE4)
041492 FD271C              A  4758    	LD	HL,(IY+%1C)
041495 FD5E1F              A  4759    	LD	E,(IY+%1F)
041498 01000000            A  4760    	LD	BC,0
04149C AF                  A  4761    	XOR	A,A
04149D CD D7 3C 04         A  4762    	CALL	__lcmpu
0414A1 28 13               A  4763    	JR	Z,L_101
                           A  4764    ;  507	
                           A  4765    ;  508	        game.vgm_info.loop_start = * (u
                           A  4766    .LINE 508
                           A  4767    
0414A3 DD07E7              A  4768    	LD	BC,(IX+%FFFFFFE7)
0414A6 DD0FED              A  4769    	LD	(IX+%FFFFFFED),BC
0414A9 DD31ED              A  4770    	LD	IY,(IX+%FFFFFFED)
0414AC ED233E              A  4771    	LEA	HL,IY+%3E
0414AF ED07                A  4772    	LD	BC,(HL)
0414B1 FD0F0A              A  4773    	LD	(IY+%A),BC
                           A  4774    ;  509	        //game.vgm_info.loop_enabled = 
                           A  4775    ;  510	
                           A  4776    ;  511	    } else game.vgm_info.loop_start = 0
                           A  4777    .LINE 511
                           A  4778    
0414B4 18 10               A  4779    	JR	L_104
0414B6                     A  4780    L_101:
0414B6 DD07EA              A  4781    	LD	BC,(IX+%FFFFFFEA)
0414B9 DD0FED              A  4782    	LD	(IX+%FFFFFFED),BC
0414BC 01000000            A  4783    	LD	BC,0
0414C0 DD31ED              A  4784    	LD	IY,(IX+%FFFFFFED)
0414C3 FD0F0A              A  4785    	LD	(IY+%A),BC
0414C6                     A  4786    L_104:
                           A  4787    ;  512	
                           A  4788    ;  513	    if (game.vgm_info.header_data[0x0C]
                           A  4789    .LINE 513
                           A  4790    
0414C6 DD07ED              A  4791    	LD	BC,(IX+%FFFFFFED)
0414C9 DD0FF0              A  4792    	LD	(IX+%FFFFFFF0),BC
0414CC DD0FDE              A  4793    	LD	(IX+%FFFFFFDE),BC
0414CF DD31F0              A  4794    	LD	IY,(IX+%FFFFFFF0)
0414D2 ED232E              A  4795    	LEA	HL,IY+%2E
0414D5 7E                  A  4796    	LD	A,(HL)
0414D6 47                  A  4797    	LD	B,A
0414D7 17ED62              A  4798    	SEXT	HL
0414DA 68                  A  4799    	LD	L,B
0414DB 01800000            A  4800    	LD	BC,128
0414DF B7                  A  4801    	OR	A,A
0414E0 ED42                A  4802    	SBC	HL,BC
0414E2 20 18               A  4803    	JR	NZ,L_106
                           A  4804    ;  514	
                           A  4805    ;  515	        printf("Detected a dual chip VG
                           A  4806    .LINE 515
                           A  4807    
0414E4 01 DD 3A 04         A  4808    	LD	BC,___print_uputch
0414E8 ED43 FC 42 04       A  4809    	LD	(___print_xputch),BC
0414ED 01 68 43 04         A  4810    	LD	BC,L__79
0414F1 C5                  A  4811    	PUSH	BC
0414F2 CD EE 37 04         A  4812    	CALL	___print_sendstring
0414F6 C1                  A  4813    	POP	BC
                           A  4814    ;  516	        return 0;
                           A  4815    .LINE 516
                           A  4816    
0414F7 AF                  A  4817    	XOR	A,A
0414F8 C3 B2 16 04         A  4818    	JR	L_124
                           A  4819    ;  517	
                           A  4820    ;  518	    }
0414FC                     A  4821    L_106:
                           A  4822    .LINE 518
                           A  4823    
                           A  4824    ;  519	
                           A  4825    ;  520	    if ( * (uint32_t * )(game.vgm_info.
                           A  4826    .LINE 520
                           A  4827    
0414FC DD31F0              A  4828    	LD	IY,(IX+%FFFFFFF0)
0414FF FD2736              A  4829    	LD	HL,(IY+%36)
041502 FD5E39              A  4830    	LD	E,(IY+%39)
041505 01000000            A  4831    	LD	BC,0
041509 AF                  A  4832    	XOR	A,A
04150A CD D7 3C 04         A  4833    	CALL	__lcmpu
04150E 28 1B               A  4834    	JR	Z,L_107
                           A  4835    ;  521	
                           A  4836    ;  522	        game.vgm_info.gd3_location = * 
                           A  4837    .LINE 522
                           A  4838    
041510 DD07F0              A  4839    	LD	BC,(IX+%FFFFFFF0)
041513 DD0FDE              A  4840    	LD	(IX+%FFFFFFDE),BC
041516 DD31F0              A  4841    	LD	IY,(IX+%FFFFFFF0)
041519 FD2736              A  4842    	LD	HL,(IY+%36)
04151C FD5E39              A  4843    	LD	E,(IY+%39)
04151F 3E14                A  4844    	LD	A,%14
041521 CD F0 35 04         A  4845    	CALL	__ladd_b
041525 FD2F15              A  4846    	LD	(IY+%15),HL
041528 FD7318              A  4847    	LD	(IY+%18),E
                           A  4848    ;  523	
                           A  4849    ;  524	    }
04152B                     A  4850    L_107:
                           A  4851    .LINE 524
                           A  4852    
                           A  4853    ;  525	
                           A  4854    ;  526	    mos_flseek(fp, game.vgm_info.data_s
                           A  4855    .LINE 526
                           A  4856    
04152B DD07DE              A  4857    	LD	BC,(IX+%FFFFFFDE)
04152E DD0FFA              A  4858    	LD	(IX+%FFFFFFFA),BC
041531 DD31FA              A  4859    	LD	IY,(IX+%FFFFFFFA)
041534 FD070E              A  4860    	LD	BC,(IY+%E)
041537 AF                  A  4861    	XOR	A,A
041538 C5D1                A  4862    	LD	DE,BC
04153A 4F                  A  4863    	LD	C,A
04153B 0600                A  4864    	LD	B,%0
04153D C5                  A  4865    	PUSH	BC
04153E D5                  A  4866    	PUSH	DE
04153F DD4E06              A  4867    	LD	C,(IX+%6)
041542 C5                  A  4868    	PUSH	BC
041543 CD 4B 34 04         A  4869    	CALL	_mos_flseek
041547 C1                  A  4870    	POP	BC
041548 C1                  A  4871    	POP	BC
041549 C1                  A  4872    	POP	BC
                           A  4873    ;  527	
                           A  4874    ;  528	    game.vgm_info.data_pointer = 0;
                           A  4875    .LINE 528
                           A  4876    
04154A DD07FA              A  4877    	LD	BC,(IX+%FFFFFFFA)
04154D DD0FCC              A  4878    	LD	(IX+%FFFFFFCC),BC
041550 DD31FA              A  4879    	LD	IY,(IX+%FFFFFFFA)
041553 FD366500            A  4880    	LD	(IY+%65),%0
041557 FD366600            A  4881    	LD	(IY+%66),%0
                           A  4882    ;  529		
                           A  4883    ;  530		mos_fread(fp, game.vgm_info.song_da
                           A  4884    .LINE 530
                           A  4885    
04155B DD31CC              A  4886    	LD	IY,(IX+%FFFFFFCC)
04155E FD0711              A  4887    	LD	BC,(IY+%11)
041561 C5                  A  4888    	PUSH	BC
041562 FD0762              A  4889    	LD	BC,(IY+%62)
041565 C5                  A  4890    	PUSH	BC
041566 DD4E06              A  4891    	LD	C,(IX+%6)
041569 0600                A  4892    	LD	B,%0
04156B C5                  A  4893    	PUSH	BC
04156C CD 11 34 04         A  4894    	CALL	_mos_fread
041570 C1                  A  4895    	POP	BC
041571 C1                  A  4896    	POP	BC
041572 C1                  A  4897    	POP	BC
                           A  4898    ;  531	
                           A  4899    ;  532	    //timer0_begin(104, 4); //44100Hz
                           A  4900    ;  533		//timer0_begin(1044, 4); //44100 / 
                           A  4901    ;  534	    timer0_begin(313, 4); //4410Hz / 3 
                           A  4902    .LINE 534
                           A  4903    
041573 01040000            A  4904    	LD	BC,4
041577 C5                  A  4905    	PUSH	BC
041578 01390100            A  4906    	LD	BC,313
04157C C5                  A  4907    	PUSH	BC
04157D CD 7F 34 04         A  4908    	CALL	_timer0_begin
041581 C1                  A  4909    	POP	BC
041582 C1                  A  4910    	POP	BC
                           A  4911    ;  535	    //timer0_begin(1567, 4); //44100Hz 
                           A  4912    ;  536	    //timer0_begin(2089, 4); //44100Hz 
                           A  4913    ;  537		//timer0_begin(3134, 4); //44100Hz 
                           A  4914    ;  538	
                           A  4915    ;  539	    if (game.vgm_info.chip_type == 0) {
                           A  4916    .LINE 539
                           A  4917    
041583 DD31FA              A  4918    	LD	IY,(IX+%FFFFFFFA)
041586 FD7E00              A  4919    	LD	A,(IY+%0)
041589 B7                  A  4920    	OR	A,A
04158A C2 22 16 04         A  4921    	JR	NZ,L_122
                           A  4922    ;  540	
                           A  4923    ;  541	        for (i = 0; i < game.vgm_info.n
                           A  4924    .LINE 541
                           A  4925    
04158E DD36F300            A  4926    	LD	(IX+%FFFFFFF3),%0
041592 18 4D               A  4927    	JR	L_111
041594                     A  4928    L_109:
                           A  4929    ;  542	
                           A  4930    ;  543	            ay_states[i].volume = 0xFF;
                           A  4931    .LINE 543
                           A  4932    
041594 DD7EF3              A  4933    	LD	A,(IX+%FFFFFFF3)
041597 B7ED62              A  4934    	UEXT	HL
04159A 6F                  A  4935    	LD	L,A
04159B 3E07                A  4936    	LD	A,%7
04159D CD 5E 3C 04         A  4937    	CALL	__imul_b
0415A1 01 37 44 04         A  4938    	LD	BC,_ay_states
0415A5 09                  A  4939    	ADD	HL,BC
0415A6 DD2FC9              A  4940    	LD	(IX+%FFFFFFC9),HL
0415A9 3EFF                A  4941    	LD	A,%FF
0415AB DD31C9              A  4942    	LD	IY,(IX+%FFFFFFC9)
0415AE FD7700              A  4943    	LD	(IY+%0),A
                           A  4944    ;  544	            ay_states[i].frequency_coar
                           A  4945    .LINE 544
                           A  4946    
0415B1 FD7701              A  4947    	LD	(IY+%1),A
                           A  4948    ;  545	            ay_states[i].frequency_fine
                           A  4949    .LINE 545
                           A  4950    
0415B4 FD3602FF            A  4951    	LD	(IY+%2),%FF
                           A  4952    ;  546	            ay_states[i].frequency_hz =
                           A  4953    .LINE 546
                           A  4954    
0415B8 01000000            A  4955    	LD	BC,0
0415BC FD0F03              A  4956    	LD	(IY+%3),BC
                           A  4957    ;  547	            ay_states[i].enabled = 0;
                           A  4958    .LINE 547
                           A  4959    
0415BF FD360600            A  4960    	LD	(IY+%6),%0
                           A  4961    ;  548	
                           A  4962    ;  549				//reset_channel(i);
                           A  4963    ;  550	            play_simple(i, 0, 10, 0); /
                           A  4964    .LINE 550
                           A  4965    
0415C3 C5                  A  4966    	PUSH	BC
0415C4 010A0000            A  4967    	LD	BC,10
0415C8 C5                  A  4968    	PUSH	BC
0415C9 01000000            A  4969    	LD	BC,0
0415CD C5                  A  4970    	PUSH	BC
0415CE DD7EF3              A  4971    	LD	A,(IX+%FFFFFFF3)
0415D1 B7ED62              A  4972    	UEXT	HL
0415D4 6F                  A  4973    	LD	L,A
0415D5 E5                  A  4974    	PUSH	HL
0415D6 CD 40 02 04         A  4975    	CALL	_play_simple
0415DA C1                  A  4976    	POP	BC
0415DB C1                  A  4977    	POP	BC
0415DC C1                  A  4978    	POP	BC
0415DD C1                  A  4979    	POP	BC
0415DE DD34F3              A  4980    	INC	(IX+%FFFFFFF3)
                           A  4981    ;  551	
                           A  4982    ;  552	        }
0415E1                     A  4983    L_111:
                           A  4984    .LINE 552
                           A  4985    
0415E1 DD7EF3              A  4986    	LD	A,(IX+%FFFFFFF3)
0415E4 DD31FA              A  4987    	LD	IY,(IX+%FFFFFFFA)
0415E7 FDBE06              A  4988    	CP	A,(IY+%6)
0415EA 38 A8               A  4989    	JR	C,L_109
                           A  4990    ;  553	
                           A  4991    ;  554	        if (game.vgm_info.chip_variant 
                           A  4992    .LINE 554
                           A  4993    
0415EC DD31FA              A  4994    	LD	IY,(IX+%FFFFFFFA)
0415EF FD7E01              A  4995    	LD	A,(IY+%1)
0415F2 FE10                A  4996    	CP	A,%10
0415F4 20 16               A  4997    	JR	NZ,L_113
0415F6 DD31FA              A  4998    	LD	IY,(IX+%FFFFFFFA)
0415F9 FD0702              A  4999    	LD	BC,(IY+%2)
0415FC FD7E05              A  5000    	LD	A,(IY+%5)
0415FF 2E05                A  5001    	LD	L,%5
041601 CD 82 3B 04         A  5002    	CALL	__lshru
041605 FD0F07              A  5003    	LD	(IY+%7),BC
                           A  5004    ;  555	        else game.vgm_info.f_scale = ga
                           A  5005    .LINE 555
                           A  5006    
041608 C3 A5 16 04         A  5007    	JR	L_123
04160C                     A  5008    L_113:
04160C DD31FA              A  5009    	LD	IY,(IX+%FFFFFFFA)
04160F FD0702              A  5010    	LD	BC,(IY+%2)
041612 FD7E05              A  5011    	LD	A,(IY+%5)
041615 2E04                A  5012    	LD	L,%4
041617 CD 82 3B 04         A  5013    	CALL	__lshru
04161B FD0F07              A  5014    	LD	(IY+%7),BC
                           A  5015    ;  556	    } else if (game.vgm_info.chip_type 
                           A  5016    .LINE 556
                           A  5017    
04161E C3 A5 16 04         A  5018    	JR	L_123
041622                     A  5019    L_122:
041622 DD31FA              A  5020    	LD	IY,(IX+%FFFFFFFA)
041625 FD7E00              A  5021    	LD	A,(IY+%0)
041628 FE01                A  5022    	CP	A,%1
04162A 20 79               A  5023    	JR	NZ,L_123
                           A  5024    ;  557	
                           A  5025    ;  558	        for (i = 0; i < game.vgm_info.n
                           A  5026    .LINE 558
                           A  5027    
04162C DD36F300            A  5028    	LD	(IX+%FFFFFFF3),%0
041630 18 56               A  5029    	JR	L_118
041632                     A  5030    L_116:
                           A  5031    ;  559	
                           A  5032    ;  560	            sn_channels[i].volume = 0;
                           A  5033    .LINE 560
                           A  5034    
041632 DD7EF3              A  5035    	LD	A,(IX+%FFFFFFF3)
041635 B7ED62              A  5036    	UEXT	HL
041638 6F                  A  5037    	LD	L,A
041639 3E09                A  5038    	LD	A,%9
04163B CD 5E 3C 04         A  5039    	CALL	__imul_b
04163F 01 4E 44 04         A  5040    	LD	BC,_sn_channels
041643 09                  A  5041    	ADD	HL,BC
041644 DD2FC6              A  5042    	LD	(IX+%FFFFFFC6),HL
041647 DD31C6              A  5043    	LD	IY,(IX+%FFFFFFC6)
04164A FD360000            A  5044    	LD	(IY+%0),%0
04164E FD360100            A  5045    	LD	(IY+%1),%0
                           A  5046    ;  561	            sn_channels[i].frequency_hi
                           A  5047    .LINE 561
                           A  5048    
041652 FD360200            A  5049    	LD	(IY+%2),%0
                           A  5050    ;  562	            sn_channels[i].frequency_lo
                           A  5051    .LINE 562
                           A  5052    
041656 FD360300            A  5053    	LD	(IY+%3),%0
                           A  5054    ;  563	            sn_channels[i].frequency_hz
                           A  5055    .LINE 563
                           A  5056    
04165A FD360600            A  5057    	LD	(IY+%6),%0
04165E FD360700            A  5058    	LD	(IY+%7),%0
                           A  5059    ;  564	            sn_channels[i].enabled = 0;
                           A  5060    .LINE 564
                           A  5061    
041662 FD360800            A  5062    	LD	(IY+%8),%0
                           A  5063    ;  565	
                           A  5064    ;  566	            //reset_channel(i);
                           A  5065    ;  567				play_simple(i, 0, 10, 0); /
                           A  5066    .LINE 567
                           A  5067    
041666 01000000            A  5068    	LD	BC,0
04166A C5                  A  5069    	PUSH	BC
04166B 010A0000            A  5070    	LD	BC,10
04166F C5                  A  5071    	PUSH	BC
041670 01000000            A  5072    	LD	BC,0
041674 C5                  A  5073    	PUSH	BC
041675 DD7EF3              A  5074    	LD	A,(IX+%FFFFFFF3)
041678 B7ED62              A  5075    	UEXT	HL
04167B 6F                  A  5076    	LD	L,A
04167C E5                  A  5077    	PUSH	HL
04167D CD 40 02 04         A  5078    	CALL	_play_simple
041681 C1                  A  5079    	POP	BC
041682 C1                  A  5080    	POP	BC
041683 C1                  A  5081    	POP	BC
041684 C1                  A  5082    	POP	BC
041685 DD34F3              A  5083    	INC	(IX+%FFFFFFF3)
                           A  5084    ;  568	
                           A  5085    ;  569	        }
041688                     A  5086    L_118:
                           A  5087    .LINE 569
                           A  5088    
041688 DD7EF3              A  5089    	LD	A,(IX+%FFFFFFF3)
04168B DD31FA              A  5090    	LD	IY,(IX+%FFFFFFFA)
04168E FDBE06              A  5091    	CP	A,(IY+%6)
041691 38 9F               A  5092    	JR	C,L_116
                           A  5093    ;  570	        game.vgm_info.f_scale = game.vg
                           A  5094    .LINE 570
                           A  5095    
041693 DD31FA              A  5096    	LD	IY,(IX+%FFFFFFFA)
041696 FD0702              A  5097    	LD	BC,(IY+%2)
041699 FD7E05              A  5098    	LD	A,(IY+%5)
04169C 2E05                A  5099    	LD	L,%5
04169E CD 82 3B 04         A  5100    	CALL	__lshru
0416A2 FD0F07              A  5101    	LD	(IY+%7),BC
                           A  5102    ;  571	    }
0416A5                     A  5103    L_123:
                           A  5104    .LINE 571
                           A  5105    
                           A  5106    ;  572	
                           A  5107    ;  573	    mos_fclose(fp);
                           A  5108    .LINE 573
                           A  5109    
0416A5 DD4E06              A  5110    	LD	C,(IX+%6)
0416A8 0600                A  5111    	LD	B,%0
0416AA C5                  A  5112    	PUSH	BC
0416AB CD FC 32 04         A  5113    	CALL	_mos_fclose
0416AF C1                  A  5114    	POP	BC
                           A  5115    ;  574		return 1;
                           A  5116    .LINE 574
                           A  5117    
0416B0 3E01                A  5118    	LD	A,%1
                           A  5119    ;  575	
                           A  5120    ;  576	}
0416B2                     A  5121    L_124:
                           A  5122    .LINE 576
                           A  5123    
0416B2 DDF9                A  5124    	LD	SP,IX
0416B4 DDE1                A  5125    	POP	IX
0416B6 C9                  A  5126    	RET	
                           A  5127    
                           A  5128    
                           A  5129    ;**************************** _vgm_init *******
                           A  5130    ;Name                         Addr/Register   S
                           A  5131    ;_mos_fclose                         IMPORT  --
                           A  5132    ;_sn_channels                        STATIC    
                           A  5133    ;_ay_states                          STATIC    
                           A  5134    ;_timer0_begin                       IMPORT  --
                           A  5135    ;_mos_flseek                         IMPORT  --
                           A  5136    ;___print_sendstring                 IMPORT  --
                           A  5137    ;___print_xputch                     IMPORT    
                           A  5138    ;___print_uputch                     IMPORT  --
                           A  5139    ;_malloc                             IMPORT  --
                           A  5140    ;_mos_fread                          IMPORT  --
                           A  5141    ;_state                              STATIC    
                           A  5142    ;_game                               STATIC    
                           A  5143    ;G_22                                 IX-34    
                           A  5144    ;G_10                                 IX-31    
                           A  5145    ;G_16                                 IX-28    
                           A  5146    ;G_17                                 IX-25    
                           A  5147    ;G_18                                 IX-22    
                           A  5148    ;G_19                                 IX-19    
                           A  5149    ;G_21                                 IX-16    
                           A  5150    ;i                                    IX-13    
                           A  5151    ;G_5                                  IX-12    
                           A  5152    ;G_11                                  IX-9    
                           A  5153    ;G_23                                  IX-6    
                           A  5154    ;fp                                    IX+6    
                           A  5155    
                           A  5156    
                           A  5157    ; Stack Frame Size: 70 (bytes)
                           A  5158    ;       Spill Code: -3 (instruction)
                           A  5159    
                           A  5160    
                           A  5161    .ENDFUNC "vgm_init",576,"_vgm_init"
                           A  5162    	SEGMENT STRSECT
044368                     A  5163    L__79:
044368 44657465 63746564   A  5164    	DB	"Detected a dual chip VGM, exiting."
044370 20612064 75616C20 
044378 63686970 2056474D 
044380 2C206578 6974696E 
044388 672E 
04438A 0D0A00              A  5165    	DB	13,10,0
                           A  5166    	SEGMENT CODE
                           A  5167    ;  577	
                           A  5168    ;  578	void vgm_loop_init() {
0416B7                     A  5169    _vgm_loop_init:
                           A  5170    .DEFINE "_vgm_loop_init"
                           A  5171    
                           A  5172    .VALUE _vgm_loop_init
                           A  5173    
                           A  5174    .CLASS 2
                           A  5175    
                           A  5176    .TYPE 65
                           A  5177    
                           A  5178    .ENDEF
                           A  5179    
                           A  5180    .BEGFUNC "vgm_loop_init",578,"_vgm_loop_init"
                           A  5181    
                           A  5182    .LINE 578
                           A  5183    
                           A  5184    .DEFINE "i"
                           A  5185    
                           A  5186    .CLASS 65
                           A  5187    
                           A  5188    .VALUE -1
                           A  5189    
                           A  5190    .TYPE 12
                           A  5191    
                           A  5192    .ENDEF
                           A  5193    
0416B7 DDE5                A  5194    	PUSH	IX
0416B9 DD210000 00         A  5195    	LD	IX,0
0416BE DD39                A  5196    	ADD	IX,SP
0416C0 C5                  A  5197    	PUSH	BC
0416C1 3B                  A  5198    	DEC	SP
                           A  5199    ;  579	
                           A  5200    ;  580	    uint8_t i;
                           A  5201    ;  581	
                           A  5202    ;  582	    timer0_end();
                           A  5203    .LINE 582
                           A  5204    
0416C2 CD 37 35 04         A  5205    	CALL	_timer0_end
                           A  5206    ;  583	    timer0_begin(313, 4); //4410Hz / 3 
                           A  5207    .LINE 583
                           A  5208    
0416C6 01040000            A  5209    	LD	BC,4
0416CA C5                  A  5210    	PUSH	BC
0416CB 01390100            A  5211    	LD	BC,313
0416CF C5                  A  5212    	PUSH	BC
0416D0 CD 7F 34 04         A  5213    	CALL	_timer0_begin
0416D4 C1                  A  5214    	POP	BC
0416D5 C1                  A  5215    	POP	BC
                           A  5216    ;  584	
                           A  5217    ;  585	    for (i = 0; i < game.vgm_info.n_cha
                           A  5218    .LINE 585
                           A  5219    
0416D6 DD36FF00            A  5220    	LD	(IX+%FFFFFFFF),%0
0416DA C3 68 17 04         A  5221    	JR	L_128
0416DE                     A  5222    L_126:
                           A  5223    ;  586	
                           A  5224    ;  587	        printf("Setting up channel %u\r
                           A  5225    .LINE 587
                           A  5226    
0416DE 01 DD 3A 04         A  5227    	LD	BC,___print_uputch
0416E2 ED43 FC 42 04       A  5228    	LD	(___print_xputch),BC
0416E7 01 8D 43 04         A  5229    	LD	BC,L__87
0416EB C5                  A  5230    	PUSH	BC
0416EC CD EE 37 04         A  5231    	CALL	___print_sendstring
0416F0 C1                  A  5232    	POP	BC
0416F1 3E75                A  5233    	LD	A,%75
0416F3 32 9F 44 04         A  5234    	LD	(___print_fmt+4),A
0416F7 DD7EFF              A  5235    	LD	A,(IX+%FFFFFFFF)
0416FA B7ED62              A  5236    	UEXT	HL
0416FD 6F                  A  5237    	LD	L,A
0416FE E5C1                A  5238    	LD	BC,HL
041700 CD A6 3C 04         A  5239    	CALL	__itol
041704 C5D1                A  5240    	LD	DE,BC
041706 4F                  A  5241    	LD	C,A
041707 0600                A  5242    	LD	B,%0
041709 C5                  A  5243    	PUSH	BC
04170A D5                  A  5244    	PUSH	DE
04170B CD 63 3B 04         A  5245    	CALL	__u_uitoa
04170F C1                  A  5246    	POP	BC
041710 C1                  A  5247    	POP	BC
041711 01 A1 43 04         A  5248    	LD	BC,L__88
041715 C5                  A  5249    	PUSH	BC
041716 CD EE 37 04         A  5250    	CALL	___print_sendstring
04171A C1                  A  5251    	POP	BC
                           A  5252    ;  588	
                           A  5253    ;  589	        ay_states[i].volume = 0xFF;
                           A  5254    .LINE 589
                           A  5255    
04171B DD7EFF              A  5256    	LD	A,(IX+%FFFFFFFF)
04171E B7ED62              A  5257    	UEXT	HL
041721 6F                  A  5258    	LD	L,A
041722 3E07                A  5259    	LD	A,%7
041724 CD 5E 3C 04         A  5260    	CALL	__imul_b
041728 01 37 44 04         A  5261    	LD	BC,_ay_states
04172C 09                  A  5262    	ADD	HL,BC
04172D DD2FFC              A  5263    	LD	(IX+%FFFFFFFC),HL
041730 3EFF                A  5264    	LD	A,%FF
041732 DD31FC              A  5265    	LD	IY,(IX+%FFFFFFFC)
041735 FD7700              A  5266    	LD	(IY+%0),A
                           A  5267    ;  590	        ay_states[i].frequency_coarse =
                           A  5268    .LINE 590
                           A  5269    
041738 FD7701              A  5270    	LD	(IY+%1),A
                           A  5271    ;  591	        ay_states[i].frequency_fine = 0
                           A  5272    .LINE 591
                           A  5273    
04173B FD3602FF            A  5274    	LD	(IY+%2),%FF
                           A  5275    ;  592	        ay_states[i].frequency_hz = 0;
                           A  5276    .LINE 592
                           A  5277    
04173F 01000000            A  5278    	LD	BC,0
041743 FD0F03              A  5279    	LD	(IY+%3),BC
                           A  5280    ;  593	        ay_states[i].enabled = 0;
                           A  5281    .LINE 593
                           A  5282    
041746 FD360600            A  5283    	LD	(IY+%6),%0
                           A  5284    ;  594	
                           A  5285    ;  595	        //reset_channel(i);
                           A  5286    ;  596			play_simple(i, 0, 10, 0); //Mut
                           A  5287    .LINE 596
                           A  5288    
04174A C5                  A  5289    	PUSH	BC
04174B 010A0000            A  5290    	LD	BC,10
04174F C5                  A  5291    	PUSH	BC
041750 01000000            A  5292    	LD	BC,0
041754 C5                  A  5293    	PUSH	BC
041755 DD7EFF              A  5294    	LD	A,(IX+%FFFFFFFF)
041758 B7ED62              A  5295    	UEXT	HL
04175B 6F                  A  5296    	LD	L,A
04175C E5                  A  5297    	PUSH	HL
04175D CD 40 02 04         A  5298    	CALL	_play_simple
041761 C1                  A  5299    	POP	BC
041762 C1                  A  5300    	POP	BC
041763 C1                  A  5301    	POP	BC
041764 C1                  A  5302    	POP	BC
041765 DD34FF              A  5303    	INC	(IX+%FFFFFFFF)
                           A  5304    ;  597	
                           A  5305    ;  598	    }
041768                     A  5306    L_128:
                           A  5307    .LINE 598
                           A  5308    
041768 3A D5 43 04         A  5309    	LD	A,(_game+7)
04176C B7ED62              A  5310    	UEXT	HL
04176F 6F                  A  5311    	LD	L,A
041770 E5C1                A  5312    	LD	BC,HL
041772 03                  A  5313    	INC	BC
041773 DD7EFF              A  5314    	LD	A,(IX+%FFFFFFFF)
041776 B7ED62              A  5315    	UEXT	HL
041779 6F                  A  5316    	LD	L,A
04177A B7                  A  5317    	OR	A,A
04177B ED42                A  5318    	SBC	HL,BC
04177D FA DE 16 04         A  5319    	JP	M,L_126
                           A  5320    ;  599	
                           A  5321    ;  600	}
                           A  5322    .LINE 600
                           A  5323    
041781 DDF9                A  5324    	LD	SP,IX
041783 DDE1                A  5325    	POP	IX
041785 C9                  A  5326    	RET	
                           A  5327    
                           A  5328    
                           A  5329    ;**************************** _vgm_loop_init **
                           A  5330    ;Name                         Addr/Register   S
                           A  5331    ;_game                               STATIC    
                           A  5332    ;_ay_states                          STATIC    
                           A  5333    ;__u_uitoa                           IMPORT  --
                           A  5334    ;___print_fmt                        IMPORT    
                           A  5335    ;___print_sendstring                 IMPORT  --
                           A  5336    ;___print_xputch                     IMPORT    
                           A  5337    ;___print_uputch                     IMPORT  --
                           A  5338    ;_timer0_begin                       IMPORT  --
                           A  5339    ;_timer0_end                         IMPORT  --
                           A  5340    ;i                                     IX-1    
                           A  5341    
                           A  5342    
                           A  5343    ; Stack Frame Size: 10 (bytes)
                           A  5344    ;       Spill Code: -3 (instruction)
                           A  5345    
                           A  5346    
                           A  5347    .ENDFUNC "vgm_loop_init",600,"_vgm_loop_init"
                           A  5348    	SEGMENT STRSECT
04438D                     A  5349    L__87:
04438D 53657474 696E6720   A  5350    	DB	"Setting up channel "
044395 75702063 68616E6E 
04439D 656C20 
0443A0 00                  A  5351    	DB	0
0443A1                     A  5352    L__88:
0443A1 0D0A00              A  5353    	DB	13,10,0
                           A  5354    	SEGMENT CODE
                           A  5355    ;  601	
                           A  5356    ;  602	void vgm_cleanup(UINT8 fp) {
041786                     A  5357    _vgm_cleanup:
                           A  5358    .DEFINE "_vgm_cleanup"
                           A  5359    
                           A  5360    .VALUE _vgm_cleanup
                           A  5361    
                           A  5362    .CLASS 2
                           A  5363    
                           A  5364    .TYPE 65
                           A  5365    
                           A  5366    .ENDEF
                           A  5367    
                           A  5368    .BEGFUNC "vgm_cleanup",602,"_vgm_cleanup"
                           A  5369    
                           A  5370    .LINE 602
                           A  5371    
                           A  5372    .DEFINE "fp"
                           A  5373    
                           A  5374    .CLASS 65
                           A  5375    
                           A  5376    .VALUE 6
                           A  5377    
                           A  5378    .TYPE 12
                           A  5379    
                           A  5380    .ENDEF
                           A  5381    
                           A  5382    .DEFINE "i"
                           A  5383    
                           A  5384    .CLASS 65
                           A  5385    
                           A  5386    .VALUE -1
                           A  5387    
                           A  5388    .TYPE 12
                           A  5389    
                           A  5390    .ENDEF
                           A  5391    
041786 DDE5                A  5392    	PUSH	IX
041788 DD210000 00         A  5393    	LD	IX,0
04178D DD39                A  5394    	ADD	IX,SP
04178F C5                  A  5395    	PUSH	BC
041790 3B                  A  5396    	DEC	SP
                           A  5397    ;  603	    uint8_t i;
                           A  5398    ;  604	
                           A  5399    ;  605		free(game.vgm_info.song_data);
                           A  5400    .LINE 605
                           A  5401    
041791 01 CF 43 04         A  5402    	LD	BC,_game+1
041795 DD0FFC              A  5403    	LD	(IX+%FFFFFFFC),BC
041798 ED4B 31 44 04       A  5404    	LD	BC,(_game+99)
04179D C5                  A  5405    	PUSH	BC
04179E CD 05 36 04         A  5406    	CALL	_free
0417A2 C1                  A  5407    	POP	BC
                           A  5408    ;  606	    mos_fclose(fp);
                           A  5409    .LINE 606
                           A  5410    
0417A3 DD4E06              A  5411    	LD	C,(IX+%6)
0417A6 0600                A  5412    	LD	B,%0
0417A8 C5                  A  5413    	PUSH	BC
0417A9 CD FC 32 04         A  5414    	CALL	_mos_fclose
0417AD C1                  A  5415    	POP	BC
                           A  5416    ;  607	    for (i = 0; i < game.vgm_info.n_cha
                           A  5417    .LINE 607
                           A  5418    
0417AE DD36FF00            A  5419    	LD	(IX+%FFFFFFFF),%0
0417B2 18 61               A  5420    	JR	L_135
0417B4                     A  5421    L_133:
                           A  5422    ;  608	        play_simple(i, 0, 1, 0); //Mute
                           A  5423    .LINE 608
                           A  5424    
0417B4 01000000            A  5425    	LD	BC,0
0417B8 C5                  A  5426    	PUSH	BC
0417B9 01010000            A  5427    	LD	BC,1
0417BD C5                  A  5428    	PUSH	BC
0417BE 01000000            A  5429    	LD	BC,0
0417C2 C5                  A  5430    	PUSH	BC
0417C3 DD7EFF              A  5431    	LD	A,(IX+%FFFFFFFF)
0417C6 B7ED62              A  5432    	UEXT	HL
0417C9 6F                  A  5433    	LD	L,A
0417CA E5                  A  5434    	PUSH	HL
0417CB CD 40 02 04         A  5435    	CALL	_play_simple
0417CF C1                  A  5436    	POP	BC
0417D0 C1                  A  5437    	POP	BC
0417D1 C1                  A  5438    	POP	BC
0417D2 C1                  A  5439    	POP	BC
                           A  5440    ;  609			change_volume(i, 0);
                           A  5441    .LINE 609
                           A  5442    
0417D3 01170000            A  5443    	LD	BC,23
0417D7 C5                  A  5444    	PUSH	BC
0417D8 CD 8C 30 04         A  5445    	CALL	_putch
0417DC C1                  A  5446    	POP	BC
0417DD 01000000            A  5447    	LD	BC,0
0417E1 C5                  A  5448    	PUSH	BC
0417E2 CD 8C 30 04         A  5449    	CALL	_putch
0417E6 C1                  A  5450    	POP	BC
0417E7 01850000            A  5451    	LD	BC,133
0417EB C5                  A  5452    	PUSH	BC
0417EC CD 8C 30 04         A  5453    	CALL	_putch
0417F0 C1                  A  5454    	POP	BC
0417F1 DD7EFF              A  5455    	LD	A,(IX+%FFFFFFFF)
0417F4 B7ED62              A  5456    	UEXT	HL
0417F7 6F                  A  5457    	LD	L,A
0417F8 E5                  A  5458    	PUSH	HL
0417F9 CD 8C 30 04         A  5459    	CALL	_putch
0417FD C1                  A  5460    	POP	BC
0417FE 01020000            A  5461    	LD	BC,2
041802 C5                  A  5462    	PUSH	BC
041803 CD 8C 30 04         A  5463    	CALL	_putch
041807 C1                  A  5464    	POP	BC
041808 01000000            A  5465    	LD	BC,0
04180C C5                  A  5466    	PUSH	BC
04180D CD 8C 30 04         A  5467    	CALL	_putch
041811 C1                  A  5468    	POP	BC
041812 DD34FF              A  5469    	INC	(IX+%FFFFFFFF)
                           A  5470    ;  610			//reset_channel(i);
                           A  5471    ;  611	    }
041815                     A  5472    L_135:
                           A  5473    .LINE 611
                           A  5474    
041815 DD7EFF              A  5475    	LD	A,(IX+%FFFFFFFF)
041818 DD31FC              A  5476    	LD	IY,(IX+%FFFFFFFC)
04181B FDBE06              A  5477    	CP	A,(IY+%6)
04181E 38 94               A  5478    	JR	C,L_133
                           A  5479    ;  612	
                           A  5480    ;  613	    start_timer0 = 0;
                           A  5481    .LINE 613
                           A  5482    
041820 01000000            A  5483    	LD	BC,0
041824 ED43 ED 42 04       A  5484    	LD	(_start_timer0),BC
                           A  5485    ;  614	    target_timer0 = 0;
                           A  5486    .LINE 614
                           A  5487    
041829 ED43 F0 42 04       A  5488    	LD	(_target_timer0),BC
                           A  5489    ;  615	    delay_length = 0;
                           A  5490    .LINE 615
                           A  5491    
04182E ED43 F3 42 04       A  5492    	LD	(_delay_length),BC
                           A  5493    ;  616	    samples_to_wait = 0;
                           A  5494    .LINE 616
                           A  5495    
041833 ED43 F6 42 04       A  5496    	LD	(_samples_to_wait),BC
                           A  5497    ;  617	    timer0_end();
                           A  5498    .LINE 617
                           A  5499    
041838 CD 37 35 04         A  5500    	CALL	_timer0_end
                           A  5501    ;  618	
                           A  5502    ;  619	}
                           A  5503    .LINE 619
                           A  5504    
04183C DDF9                A  5505    	LD	SP,IX
04183E DDE1                A  5506    	POP	IX
041840 C9                  A  5507    	RET	
                           A  5508    
                           A  5509    
                           A  5510    ;**************************** _vgm_cleanup ****
                           A  5511    ;Name                         Addr/Register   S
                           A  5512    ;_timer0_end                         IMPORT  --
                           A  5513    ;_samples_to_wait                    STATIC    
                           A  5514    ;_delay_length                       STATIC    
                           A  5515    ;_target_timer0                      STATIC    
                           A  5516    ;_start_timer0                       STATIC    
                           A  5517    ;_putch                              IMPORT  --
                           A  5518    ;_mos_fclose                         IMPORT  --
                           A  5519    ;_free                               IMPORT  --
                           A  5520    ;_game                               STATIC    
                           A  5521    ;G_32                                  IX-4    
                           A  5522    ;i                                     IX-1    
                           A  5523    ;fp                                    IX+6    
                           A  5524    
                           A  5525    
                           A  5526    ; Stack Frame Size: 13 (bytes)
                           A  5527    ;       Spill Code: -3 (instruction)
                           A  5528    
                           A  5529    
                           A  5530    .ENDFUNC "vgm_cleanup",619,"_vgm_cleanup"
                           A  5531    ;  620	
                           A  5532    ;  621	/* UINT8 parse_vgm_file(UINT8 fp) {  //
                           A  5533    ;  622	    unsigned char byte, firstbyte, seco
                           A  5534    ;  623	    unsigned short reg = 0;
                           A  5535    ;  624	    unsigned char value = 0;
                           A  5536    ;  625		
                           A  5537    ;  626	    //enum VgmParserState state = READ_
                           A  5538    ;  627	
                           A  5539    ;  628	    //while (state != END_OF_SOUND_DATA
                           A  5540    ;  629	        switch (state) {
                           A  5541    ;  630				printf("State: %u", state);
                           A  5542    ;  631	            case READ_COMMAND:
                           A  5543    ;  632					//byte = mos_fgetc(fp);
                           A  5544    ;  633	                if (byte != EOF) {
                           A  5545    ;  634	                    switch (byte) {
                           A  5546    ;  635	                        case 0x61: // w
                           A  5547    ;  636	                            firstbyte =
                           A  5548    ;  637								secondbyte 
                           A  5549    ;  638								//samples_t
                           A  5550    ;  639								samples_to_
                           A  5551    ;  640								start_timer
                           A  5552    ;  641	                            state = WAI
                           A  5553    ;  642								//printf("D
                           A  5554    ;  643								//printf("D
                           A  5555    ;  644								//printf("D
                           A  5556    ;  645								return 0;
                           A  5557    ;  646	                            break;
                           A  5558    ;  647	                        case 0x62: // w
                           A  5559    ;  648	                            samples_to_
                           A  5560    ;  649								start_timer
                           A  5561    ;  650	                            state = WAI
                           A  5562    ;  651								//printf("D
                           A  5563    ;  652								//printf("D
                           A  5564    ;  653								//printf("D
                           A  5565    ;  654	                            return 0;
                           A  5566    ;  655								break;
                           A  5567    ;  656	                        case 0x63: // w
                           A  5568    ;  657	                            samples_to_
                           A  5569    ;  658								start_timer
                           A  5570    ;  659	                            state = WAI
                           A  5571    ;  660								//printf("D
                           A  5572    ;  661								//printf("D
                           A  5573    ;  662								//printf("D
                           A  5574    ;  663	                            return 0;
                           A  5575    ;  664								break;
                           A  5576    ;  665	                        case 0x70: // d
                           A  5577    ;  666	                        case 0x71:
                           A  5578    ;  667	                        case 0x72:
                           A  5579    ;  668	                        case 0x73:
                           A  5580    ;  669	                        case 0x74:
                           A  5581    ;  670	                        case 0x75:
                           A  5582    ;  671	                        case 0x76:
                           A  5583    ;  672	                        case 0x77:
                           A  5584    ;  673	                        case 0x78:
                           A  5585    ;  674	                        case 0x79:
                           A  5586    ;  675	                        case 0x7A:
                           A  5587    ;  676	                        case 0x7B:
                           A  5588    ;  677	                        case 0x7C:
                           A  5589    ;  678	                        case 0x7D:
                           A  5590    ;  679	                        case 0x7E:
                           A  5591    ;  680	                        case 0x7F:
                           A  5592    ;  681	                            samples_to_
                           A  5593    ;  682								start_timer
                           A  5594    ;  683	                            state = WAI
                           A  5595    ;  684								//printf("D
                           A  5596    ;  685								//printf("D
                           A  5597    ;  686	                            return 0;
                           A  5598    ;  687								break;
                           A  5599    ;  688	                        case 0x50:
                           A  5600    ;  689								value = mos
                           A  5601    ;  690								//process_0
                           A  5602    ;  691								return 0;
                           A  5603    ;  692							case 0xA0: // w
                           A  5604    ;  693	                            //reg = fre
                           A  5605    ;  694								reg = mos_f
                           A  5606    ;  695	                            value = mos
                           A  5607    ;  696	                            //ay_write_
                           A  5608    ;  697								//printf("W
                           A  5609    ;  698								//printf("W
                           A  5610    ;  699								//updateAY3
                           A  5611    ;  700								process_0xA
                           A  5612    ;  701	                            return 0;
                           A  5613    ;  702								break;
                           A  5614    ;  703	                        case 0x66: // e
                           A  5615    ;  704	                            state = END
                           A  5616    ;  705	                            printf("\r\
                           A  5617    ;  706								// if (vgm_
                           A  5618    ;  707									// 
                           A  5619    ;  708									// stat
                           A  5620    ;  709									// vgm_
                           A  5621    ;  710									// vgm_
                           A  5622    ;  711									// 
                           A  5623    ;  712									// 
                           A  5624    ;  713								// } else r
                           A  5625    ;  714						
                           A  5626    ;  715								return 1;
                           A  5627    ;  716	                        default:
                           A  5628    ;  717	                            // unsuppor
                           A  5629    ;  718	                            return 0;
                           A  5630    ;  719								break;
                           A  5631    ;  720	                    }
                           A  5632    ;  721	                }
                           A  5633    ;  722	                break;
                           A  5634    ;  723	            case WAIT_SAMPLES:
                           A  5635    ;  724					target_timer0 = start_t
                           A  5636    ;  725					if (timer0 >= target_ti
                           A  5637    ;  726	                    state = READ_COMMAN
                           A  5638    ;  727	                    samples_to_wait = 0
                           A  5639    ;  728	                }
                           A  5640    ;  729	                return 0;
                           A  5641    ;  730					break;
                           A  5642    ;  731	            default:
                           A  5643    ;  732	                // invalid state, exit 
                           A  5644    ;  733	                state = END_OF_SOUND_DA
                           A  5645    ;  734	                return 1;
                           A  5646    ;  735	        }
                           A  5647    ;  736		//}
                           A  5648    ;  737	} */
                           A  5649    ;  738	
                           A  5650    ;  739	UINT8 parse_vgm_file() {
041841                     A  5651    _parse_vgm_file:
                           A  5652    .DEFINE "_parse_vgm_file"
                           A  5653    
                           A  5654    .VALUE _parse_vgm_file
                           A  5655    
                           A  5656    .CLASS 2
                           A  5657    
                           A  5658    .TYPE 76
                           A  5659    
                           A  5660    .ENDEF
                           A  5661    
                           A  5662    .BEGFUNC "parse_vgm_file",739,"_parse_vgm_file"
                           A  5663    
                           A  5664    .LINE 739
                           A  5665    
                           A  5666    .DEFINE "value"
                           A  5667    
                           A  5668    .CLASS 65
                           A  5669    
                           A  5670    .VALUE -1
                           A  5671    
                           A  5672    .TYPE 12
                           A  5673    
                           A  5674    .ENDEF
                           A  5675    
                           A  5676    .DEFINE "byte"
                           A  5677    
                           A  5678    .CLASS 65
                           A  5679    
                           A  5680    .VALUE -2
                           A  5681    
                           A  5682    .TYPE 12
                           A  5683    
                           A  5684    .ENDEF
                           A  5685    
                           A  5686    .DEFINE "firstbyte"
                           A  5687    
                           A  5688    .CLASS 65
                           A  5689    
                           A  5690    .VALUE -3
                           A  5691    
                           A  5692    .TYPE 12
                           A  5693    
                           A  5694    .ENDEF
                           A  5695    
                           A  5696    .DEFINE "secondbyte"
                           A  5697    
                           A  5698    .CLASS 65
                           A  5699    
                           A  5700    .VALUE -7
                           A  5701    
                           A  5702    .TYPE 12
                           A  5703    
                           A  5704    .ENDEF
                           A  5705    
041841 DDE5                A  5706    	PUSH	IX
041843 DD210000 00         A  5707    	LD	IX,0
041848 DD39                A  5708    	ADD	IX,SP
04184A ED2298              A  5709    	LEA	HL,IX+%FFFFFF98
04184D F9                  A  5710    	LD	SP,HL
                           A  5711    ;  740	    uint8_t byte, firstbyte, secondbyte
                           A  5712    ;  741	    uint8_t reg = 0;
                           A  5713    ;  742	    uint8_t value = 0;
                           A  5714    ;  743	
                           A  5715    ;  744	    //printf("%u\r\n", fo->fptr);
                           A  5716    ;  745	    if (game.vgm_file == NULL) return 1
                           A  5717    .LINE 745
                           A  5718    
04184E 3A CE 43 04         A  5719    	LD	A,(_game)
041852 B7                  A  5720    	OR	A,A
041853 20 06               A  5721    	JR	NZ,L_270
041855 3E01                A  5722    	LD	A,%1
041857 C3 DB 23 04         A  5723    	JR	L_272
04185B                     A  5724    L_270:
                           A  5725    ;  746		
                           A  5726    ;  747		switch (state) {
                           A  5727    .LINE 747
                           A  5728    
04185B ED4B EA 42 04       A  5729    	LD	BC,(_state)
041860                     A  5730    L__95:
041860 21010000            A  5731    	LD	HL,1
041864 B7                  A  5732    	OR	A,A
041865 ED42                A  5733    	SBC	HL,BC
041867 DA D0 23 04         A  5734    	JR	C,L_269
04186B C5E1                A  5735    	LD	HL,BC
04186D E5C1                A  5736    	LD	BC,HL
04186F 29                  A  5737    	ADD	HL,HL
041870 09                  A  5738    	ADD	HL,BC
041871 01 79 18 04         A  5739    	LD	BC,L__94
041875 09                  A  5740    	ADD	HL,BC
041876 ED27                A  5741    	LD	HL,(HL)
041878 E9                  A  5742    	JP	(HL)
041879                     A  5743    L__94:
041879 A01804              A  5744    	DW24	L_142	
                           A  5745    
04187C 7F1804              A  5746    	DW24	L_139	
                           A  5747    
                           A  5748    ;  748	
                           A  5749    ;  749	    case WAIT_SAMPLES:
04187F                     A  5750    L_139:
                           A  5751    .LINE 749
                           A  5752    
                           A  5753    ;  750	        //target_timer0 = start_timer0 
                           A  5754    ;  751	        if (timer0 >= target_timer0) {
                           A  5755    .LINE 751
                           A  5756    
04187F ED4B F0 42 04       A  5757    	LD	BC,(_target_timer0)
041884 2A F9 42 04         A  5758    	LD	HL,(_timer0)
041888 B7                  A  5759    	OR	A,A
041889 ED42                A  5760    	SBC	HL,BC
04188B 38 0E               A  5761    	JR	C,L_141
                           A  5762    ;  752	            state = READ_COMMAND;
                           A  5763    .LINE 752
                           A  5764    
04188D 01000000            A  5765    	LD	BC,0
041891 ED43 EA 42 04       A  5766    	LD	(_state),BC
                           A  5767    ;  753	            samples_to_wait = 0;
                           A  5768    .LINE 753
                           A  5769    
041896 ED43 F6 42 04       A  5770    	LD	(_samples_to_wait),BC
                           A  5771    ;  754	        }
04189B                     A  5772    L_141:
                           A  5773    .LINE 754
                           A  5774    
                           A  5775    ;  755	        return 0;
                           A  5776    .LINE 755
                           A  5777    
04189B AF                  A  5778    	XOR	A,A
04189C C3 DB 23 04         A  5779    	JR	L_272
                           A  5780    ;  756	
                           A  5781    ;  757	    case READ_COMMAND:
0418A0                     A  5782    L_142:
                           A  5783    .LINE 757
                           A  5784    
                           A  5785    ;  758	        //byte = mos_fgetc(fp);
                           A  5786    ;  759			byte = game.vgm_info.song_data[
                           A  5787    .LINE 759
                           A  5788    
0418A0 01 CF 43 04         A  5789    	LD	BC,_game+1
0418A4 DD0FDB              A  5790    	LD	(IX+%FFFFFFDB),BC
0418A7 DD31DB              A  5791    	LD	IY,(IX+%FFFFFFDB)
0418AA FD0765              A  5792    	LD	BC,(IY+%65)
0418AD CD 60 3A 04         A  5793    	CALL	__stoiu
0418B1 FD0762              A  5794    	LD	BC,(IY+%62)
0418B4 09                  A  5795    	ADD	HL,BC
0418B5 7E                  A  5796    	LD	A,(HL)
0418B6 DD77FE              A  5797    	LD	(IX+%FFFFFFFE),A
0418B9 FD0765              A  5798    	LD	BC,(IY+%65)
0418BC 03                  A  5799    	INC	BC
0418BD FD7165              A  5800    	LD	(IY+%65),C
0418C0 FD7066              A  5801    	LD	(IY+%66),B
                           A  5802    ;  760	        if (byte != EOF) {
                           A  5803    .LINE 760
                           A  5804    
0418C3 DD7EFE              A  5805    	LD	A,(IX+%FFFFFFFE)
0418C6 B7ED62              A  5806    	UEXT	HL
0418C9 6F                  A  5807    	LD	L,A
0418CA 01FFFFFF            A  5808    	LD	BC,16777215
0418CE B7                  A  5809    	OR	A,A
0418CF ED42                A  5810    	SBC	HL,BC
0418D1 CA CD 23 04         A  5811    	JR	Z,L_268
                           A  5812    ;  761	            switch (byte) {
                           A  5813    .LINE 761
                           A  5814    
0418D5 DD7EFE              A  5815    	LD	A,(IX+%FFFFFFFE)
0418D8 B7ED62              A  5816    	UEXT	HL
0418DB 6F                  A  5817    	LD	L,A
0418DC E5C1                A  5818    	LD	BC,HL
0418DE                     A  5819    L__100:
0418DE 11610000            A  5820    	LD	DE,97
0418E2 B7                  A  5821    	OR	A,A
0418E3 ED52                A  5822    	SBC	HL,DE
0418E5 38 74               A  5823    	JR	C,L__101
0418E7 217F0000            A  5824    	LD	HL,127
0418EB B7                  A  5825    	OR	A,A
0418EC ED42                A  5826    	SBC	HL,BC
0418EE 38 7C               A  5827    	JR	C,L__103
0418F0 C5E1                A  5828    	LD	HL,BC
0418F2 E5D1                A  5829    	LD	DE,HL
0418F4 29                  A  5830    	ADD	HL,HL
0418F5 19                  A  5831    	ADD	HL,DE
0418F6 11 DB 17 04         A  5832    	LD	DE,L__99-291
0418FA 19                  A  5833    	ADD	HL,DE
0418FB ED27                A  5834    	LD	HL,(HL)
0418FD E9                  A  5835    	JP	(HL)
0418FE                     A  5836    L__99:
0418FE 7D1904              A  5837    	DW24	L_144	
                           A  5838    
041901 041A04              A  5839    	DW24	L_147	
                           A  5840    
041904 1F1A04              A  5841    	DW24	L_148	
                           A  5842    
041907 CA2304              A  5843    	DW24	L_266	
                           A  5844    
04190A CA2304              A  5845    	DW24	L_266	
                           A  5846    
04190D 692304              A  5847    	DW24	L_261	
                           A  5848    
041910 CA2304              A  5849    	DW24	L_266	
                           A  5850    
041913 CA2304              A  5851    	DW24	L_266	
                           A  5852    
041916 CA2304              A  5853    	DW24	L_266	
                           A  5854    
041919 CA2304              A  5855    	DW24	L_266	
                           A  5856    
04191C CA2304              A  5857    	DW24	L_266	
                           A  5858    
04191F CA2304              A  5859    	DW24	L_266	
                           A  5860    
041922 CA2304              A  5861    	DW24	L_266	
                           A  5862    
041925 CA2304              A  5863    	DW24	L_266	
                           A  5864    
041928 CA2304              A  5865    	DW24	L_266	
                           A  5866    
04192B 3A1A04              A  5867    	DW24	L_149	
                           A  5868    
04192E 3A1A04              A  5869    	DW24	L_150	
                           A  5870    
041931 3A1A04              A  5871    	DW24	L_151	
                           A  5872    
041934 3A1A04              A  5873    	DW24	L_152	
                           A  5874    
041937 3A1A04              A  5875    	DW24	L_153	
                           A  5876    
04193A 3A1A04              A  5877    	DW24	L_154	
                           A  5878    
04193D 3A1A04              A  5879    	DW24	L_155	
                           A  5880    
041940 3A1A04              A  5881    	DW24	L_156	
                           A  5882    
041943 3A1A04              A  5883    	DW24	L_157	
                           A  5884    
041946 3A1A04              A  5885    	DW24	L_158	
                           A  5886    
041949 3A1A04              A  5887    	DW24	L_159	
                           A  5888    
04194C 3A1A04              A  5889    	DW24	L_160	
                           A  5890    
04194F 3A1A04              A  5891    	DW24	L_161	
                           A  5892    
041952 3A1A04              A  5893    	DW24	L_162	
                           A  5894    
041955 3A1A04              A  5895    	DW24	L_163	
                           A  5896    
041958 3A1A04              A  5897    	DW24	L_164	
                           A  5898    
04195B                     A  5899    L__101:
04195B 11500000            A  5900    	LD	DE,80
04195F C5E1                A  5901    	LD	HL,BC
041961 B7                  A  5902    	OR	A,A
041962 ED52                A  5903    	SBC	HL,DE
041964 CA 5E 1A 04         A  5904    	JR	Z,L_165
041968 C3 CA 23 04         A  5905    	JR	L_266
04196C                     A  5906    L__103:
04196C 11A00000            A  5907    	LD	DE,160
041970 C5E1                A  5908    	LD	HL,BC
041972 B7                  A  5909    	OR	A,A
041973 ED52                A  5910    	SBC	HL,DE
041975 CA 91 1A 04         A  5911    	JR	Z,L_167
041979 C3 CA 23 04         A  5912    	JR	L_266
                           A  5913    ;  762	            case 0x61: // wait n sample
04197D                     A  5914    L_144:
                           A  5915    .LINE 762
                           A  5916    
                           A  5917    ;  763	                //firstbyte = mos_fgetc
                           A  5918    ;  764					firstbyte = game.vgm_in
                           A  5919    .LINE 764
                           A  5920    
04197D 01 CF 43 04         A  5921    	LD	BC,_game+1
041981 DD0FD8              A  5922    	LD	(IX+%FFFFFFD8),BC
041984 DD31D8              A  5923    	LD	IY,(IX+%FFFFFFD8)
041987 FD0765              A  5924    	LD	BC,(IY+%65)
04198A CD 60 3A 04         A  5925    	CALL	__stoiu
04198E FD0762              A  5926    	LD	BC,(IY+%62)
041991 09                  A  5927    	ADD	HL,BC
041992 7E                  A  5928    	LD	A,(HL)
041993 DD77FD              A  5929    	LD	(IX+%FFFFFFFD),A
041996 FD0765              A  5930    	LD	BC,(IY+%65)
041999 03                  A  5931    	INC	BC
04199A FD7165              A  5932    	LD	(IY+%65),C
04199D FD7066              A  5933    	LD	(IY+%66),B
                           A  5934    ;  765	                //secondbyte = mos_fget
                           A  5935    ;  766					secondbyte = game.vgm_i
                           A  5936    .LINE 766
                           A  5937    
0419A0 FD1765              A  5938    	LD	DE,(IY+%65)
0419A3 D5C1                A  5939    	LD	BC,DE
0419A5 CD 60 3A 04         A  5940    	CALL	__stoiu
0419A9 DD0F9C              A  5941    	LD	(IX+%FFFFFF9C),BC	; spill
0419AC FD0762              A  5942    	LD	BC,(IY+%62)
0419AF DD0F99              A  5943    	LD	(IX+%FFFFFF99),BC	; spill
0419B2 DD079C              A  5944    	LD	BC,(IX+%FFFFFF9C)	; unspill
0419B5 DD0F9C              A  5945    	LD	(IX+%FFFFFF9C),BC	; spill
0419B8 DD0799              A  5946    	LD	BC,(IX+%FFFFFF99)	; unspill
0419BB 09                  A  5947    	ADD	HL,BC
0419BC 7E                  A  5948    	LD	A,(HL)
0419BD DD77F9              A  5949    	LD	(IX+%FFFFFFF9),A
0419C0 D5C1                A  5950    	LD	BC,DE
0419C2 03                  A  5951    	INC	BC
0419C3 FD7165              A  5952    	LD	(IY+%65),C
0419C6 FD7066              A  5953    	LD	(IY+%66),B
                           A  5954    ;  767	                target_timer0 = timer0 
                           A  5955    .LINE 767
                           A  5956    
0419C9 DD7EF9              A  5957    	LD	A,(IX+%FFFFFFF9)
0419CC B7ED62              A  5958    	UEXT	HL
0419CF 6F                  A  5959    	LD	L,A
0419D0 E5                  A  5960    	PUSH	HL
0419D1 B7ED62              A  5961    	UEXT	HL
0419D4 E5                  A  5962    	PUSH	HL
0419D5 33                  A  5963    	INC	SP
0419D6 33                  A  5964    	INC	SP
0419D7 E1                  A  5965    	POP	HL
0419D8 33                  A  5966    	INC	SP
0419D9 ED4B F9 42 04       A  5967    	LD	BC,(_timer0)
0419DE 09                  A  5968    	ADD	HL,BC
0419DF E5D1                A  5969    	LD	DE,HL
0419E1 DD7EFD              A  5970    	LD	A,(IX+%FFFFFFFD)
0419E4 B7ED62              A  5971    	UEXT	HL
0419E7 6F                  A  5972    	LD	L,A
0419E8 E5C1                A  5973    	LD	BC,HL
0419EA D5E1                A  5974    	LD	HL,DE
0419EC D5E1                A  5975    	LD	HL,DE
0419EE CD 85 39 04         A  5976    	CALL	__ior
0419F2 22 F0 42 04         A  5977    	LD	(_target_timer0),HL
                           A  5978    ;  768	                //samples_to_wait = (se
                           A  5979    ;  769	                //start_timer0 = timer0
                           A  5980    ;  770	                state = WAIT_SAMPLES;
                           A  5981    .LINE 770
                           A  5982    
0419F6 01010000            A  5983    	LD	BC,1
0419FA ED43 EA 42 04       A  5984    	LD	(_state),BC
                           A  5985    ;  771	                return 0;
                           A  5986    .LINE 771
                           A  5987    
0419FF AF                  A  5988    	XOR	A,A
041A00 C3 DB 23 04         A  5989    	JR	L_272
                           A  5990    ;  772	            case 0x62: // wait 735 samp
041A04                     A  5991    L_147:
                           A  5992    .LINE 772
                           A  5993    
                           A  5994    ;  773	                target_timer0 = timer0 
                           A  5995    .LINE 773
                           A  5996    
041A04 01DF0200            A  5997    	LD	BC,735
041A08 2A F9 42 04         A  5998    	LD	HL,(_timer0)
041A0C 09                  A  5999    	ADD	HL,BC
041A0D 22 F0 42 04         A  6000    	LD	(_target_timer0),HL
                           A  6001    ;  774	                state = WAIT_SAMPLES;
                           A  6002    .LINE 774
                           A  6003    
041A11 01010000            A  6004    	LD	BC,1
041A15 ED43 EA 42 04       A  6005    	LD	(_state),BC
                           A  6006    ;  775	                return 0;
                           A  6007    .LINE 775
                           A  6008    
041A1A AF                  A  6009    	XOR	A,A
041A1B C3 DB 23 04         A  6010    	JR	L_272
                           A  6011    ;  776	            case 0x63: // wait 882 samp
041A1F                     A  6012    L_148:
                           A  6013    .LINE 776
                           A  6014    
                           A  6015    ;  777	                target_timer0 = timer0 
                           A  6016    .LINE 777
                           A  6017    
041A1F 01720300            A  6018    	LD	BC,882
041A23 2A F9 42 04         A  6019    	LD	HL,(_timer0)
041A27 09                  A  6020    	ADD	HL,BC
041A28 22 F0 42 04         A  6021    	LD	(_target_timer0),HL
                           A  6022    ;  778	                state = WAIT_SAMPLES;
                           A  6023    .LINE 778
                           A  6024    
041A2C 01010000            A  6025    	LD	BC,1
041A30 ED43 EA 42 04       A  6026    	LD	(_state),BC
                           A  6027    ;  779	                return 0;
                           A  6028    .LINE 779
                           A  6029    
041A35 AF                  A  6030    	XOR	A,A
041A36 C3 DB 23 04         A  6031    	JR	L_272
                           A  6032    ;  780	            case 0x70: // delay n+1 sam
041A3A                     A  6033    L_149:
                           A  6034    .LINE 780
                           A  6035    
                           A  6036    ;  781	            case 0x71:
041A3A                     A  6037    L_150:
                           A  6038    .LINE 781
                           A  6039    
                           A  6040    ;  782	            case 0x72:
041A3A                     A  6041    L_151:
                           A  6042    .LINE 782
                           A  6043    
                           A  6044    ;  783	            case 0x73:
041A3A                     A  6045    L_152:
                           A  6046    .LINE 783
                           A  6047    
                           A  6048    ;  784	            case 0x74:
041A3A                     A  6049    L_153:
                           A  6050    .LINE 784
                           A  6051    
                           A  6052    ;  785	            case 0x75:
041A3A                     A  6053    L_154:
                           A  6054    .LINE 785
                           A  6055    
                           A  6056    ;  786	            case 0x76:
041A3A                     A  6057    L_155:
                           A  6058    .LINE 786
                           A  6059    
                           A  6060    ;  787	            case 0x77:
041A3A                     A  6061    L_156:
                           A  6062    .LINE 787
                           A  6063    
                           A  6064    ;  788	            case 0x78:
041A3A                     A  6065    L_157:
                           A  6066    .LINE 788
                           A  6067    
                           A  6068    ;  789	            case 0x79:
041A3A                     A  6069    L_158:
                           A  6070    .LINE 789
                           A  6071    
                           A  6072    ;  790	            case 0x7A:
041A3A                     A  6073    L_159:
                           A  6074    .LINE 790
                           A  6075    
                           A  6076    ;  791	            case 0x7B:
041A3A                     A  6077    L_160:
                           A  6078    .LINE 791
                           A  6079    
                           A  6080    ;  792	            case 0x7C:
041A3A                     A  6081    L_161:
                           A  6082    .LINE 792
                           A  6083    
                           A  6084    ;  793	            case 0x7D:
041A3A                     A  6085    L_162:
                           A  6086    .LINE 793
                           A  6087    
                           A  6088    ;  794	            case 0x7E:
041A3A                     A  6089    L_163:
                           A  6090    .LINE 794
                           A  6091    
                           A  6092    ;  795	            case 0x7F:
041A3A                     A  6093    L_164:
                           A  6094    .LINE 795
                           A  6095    
                           A  6096    ;  796	                target_timer0 = timer0 
                           A  6097    .LINE 796
                           A  6098    
041A3A DD7EFE              A  6099    	LD	A,(IX+%FFFFFFFE)
041A3D E60F                A  6100    	AND	A,%F
041A3F B7ED62              A  6101    	UEXT	HL
041A42 6F                  A  6102    	LD	L,A
041A43 ED4B F9 42 04       A  6103    	LD	BC,(_timer0)
041A48 09                  A  6104    	ADD	HL,BC
041A49 E5C1                A  6105    	LD	BC,HL
041A4B 23                  A  6106    	INC	HL
041A4C 22 F0 42 04         A  6107    	LD	(_target_timer0),HL
                           A  6108    ;  797	                state = WAIT_SAMPLES;
                           A  6109    .LINE 797
                           A  6110    
041A50 01010000            A  6111    	LD	BC,1
041A54 ED43 EA 42 04       A  6112    	LD	(_state),BC
                           A  6113    ;  798	                return 0;
                           A  6114    .LINE 798
                           A  6115    
041A59 AF                  A  6116    	XOR	A,A
041A5A C3 DB 23 04         A  6117    	JR	L_272
                           A  6118    ;  799	            // case 0xB4:
                           A  6119    ;  800	                // reg = mos_fgetc(fp);
                           A  6120    ;  801					// value = mos_fgetc(fp
                           A  6121    ;  802	                // process_0xB4_command
                           A  6122    ;  803	                // return 0;           
                           A  6123    ;  804				case 0x50:
041A5E                     A  6124    L_165:
                           A  6125    .LINE 804
                           A  6126    
                           A  6127    ;  805	                //value = mos_fgetc(fp)
                           A  6128    ;  806					value = game.vgm_info.s
                           A  6129    .LINE 806
                           A  6130    
041A5E 01 CF 43 04         A  6131    	LD	BC,_game+1
041A62 DD0FD5              A  6132    	LD	(IX+%FFFFFFD5),BC
041A65 DD31D5              A  6133    	LD	IY,(IX+%FFFFFFD5)
041A68 FD0765              A  6134    	LD	BC,(IY+%65)
041A6B CD 60 3A 04         A  6135    	CALL	__stoiu
041A6F FD0762              A  6136    	LD	BC,(IY+%62)
041A72 09                  A  6137    	ADD	HL,BC
041A73 7E                  A  6138    	LD	A,(HL)
041A74 DD77FF              A  6139    	LD	(IX+%FFFFFFFF),A
041A77 FD0765              A  6140    	LD	BC,(IY+%65)
041A7A 03                  A  6141    	INC	BC
041A7B FD7165              A  6142    	LD	(IY+%65),C
041A7E FD7066              A  6143    	LD	(IY+%66),B
                           A  6144    ;  807	                process_0x50_command(va
                           A  6145    .LINE 807
                           A  6146    
041A81 DD4EFF              A  6147    	LD	C,(IX+%FFFFFFFF)
041A84 0600                A  6148    	LD	B,%0
041A86 C5                  A  6149    	PUSH	BC
041A87 CD 7F 0D 04         A  6150    	CALL	_process_0x50_command
041A8B C1                  A  6151    	POP	BC
                           A  6152    ;  808	                return 0;
                           A  6153    .LINE 808
                           A  6154    
041A8C AF                  A  6155    	XOR	A,A
041A8D C3 DB 23 04         A  6156    	JR	L_272
                           A  6157    ;  809	            case 0xA0: // AY_3_8910 com
041A91                     A  6158    L_167:
                           A  6159    .LINE 809
                           A  6160    
                           A  6161    ;  810	                //process_0xA0_command(
                           A  6162    ;  811	                //switch (mos_fgetc(fp)
                           A  6163    ;  812					switch (game.vgm_info.s
                           A  6164    .LINE 812
                           A  6165    
041A91 01 CF 43 04         A  6166    	LD	BC,_game+1
041A95 DD0FD2              A  6167    	LD	(IX+%FFFFFFD2),BC
041A98 DD31D2              A  6168    	LD	IY,(IX+%FFFFFFD2)
041A9B FD1765              A  6169    	LD	DE,(IY+%65)
041A9E FD0765              A  6170    	LD	BC,(IY+%65)
041AA1 03                  A  6171    	INC	BC
041AA2 FD7165              A  6172    	LD	(IY+%65),C
041AA5 FD7066              A  6173    	LD	(IY+%66),B
041AA8 D5C1                A  6174    	LD	BC,DE
041AAA CD 60 3A 04         A  6175    	CALL	__stoiu
041AAE FD0762              A  6176    	LD	BC,(IY+%62)
041AB1 09                  A  6177    	ADD	HL,BC
041AB2 7E                  A  6178    	LD	A,(HL)
041AB3 47                  A  6179    	LD	B,A
041AB4 17ED62              A  6180    	SEXT	HL
041AB7 68                  A  6181    	LD	L,B
041AB8 E5C1                A  6182    	LD	BC,HL
041ABA                     A  6183    L__106:
041ABA 210A0000            A  6184    	LD	HL,10
041ABE B7                  A  6185    	OR	A,A
041ABF ED42                A  6186    	SBC	HL,BC
041AC1 DA 66 23 04         A  6187    	JR	C,L_259
041AC5 C5E1                A  6188    	LD	HL,BC
041AC7 E5C1                A  6189    	LD	BC,HL
041AC9 29                  A  6190    	ADD	HL,HL
041ACA 09                  A  6191    	ADD	HL,BC
041ACB 01 D3 1A 04         A  6192    	LD	BC,L__105
041ACF 09                  A  6193    	ADD	HL,BC
041AD0 ED27                A  6194    	LD	HL,(HL)
041AD2 E9                  A  6195    	JP	(HL)
041AD3                     A  6196    L__105:
041AD3 F91A04              A  6197    	DW24	L_170	
                           A  6198    
041AD6 A61B04              A  6199    	DW24	L_176	
                           A  6200    
041AD9 961E04              A  6201    	DW24	L_200	
                           A  6202    
041ADC 491F04              A  6203    	DW24	L_206	
                           A  6204    
041ADF FC1F04              A  6205    	DW24	L_212	
                           A  6206    
041AE2 AF2004              A  6207    	DW24	L_218	
                           A  6208    
041AE5 F41A04              A  6209    	DW24	L_169	
                           A  6210    
041AE8 622104              A  6211    	DW24	L_224	
                           A  6212    
041AEB 531C04              A  6213    	DW24	L_182	
                           A  6214    
041AEE 101D04              A  6215    	DW24	L_188	
                           A  6216    
041AF1 D31D04              A  6217    	DW24	L_194	
                           A  6218    
                           A  6219    ;  813	                case 0x06:
041AF4                     A  6220    L_169:
                           A  6221    .LINE 813
                           A  6222    
                           A  6223    ;  814	                    return 0; //We're n
                           A  6224    .LINE 814
                           A  6225    
041AF4 AF                  A  6226    	XOR	A,A
041AF5 C3 DB 23 04         A  6227    	JR	L_272
                           A  6228    ;  815	                case 0x00:
041AF9                     A  6229    L_170:
                           A  6230    .LINE 815
                           A  6231    
                           A  6232    ;  816	                    //ay_states[0].freq
                           A  6233    ;  817						ay_states[0].freque
                           A  6234    .LINE 817
                           A  6235    
041AF9 01 CF 43 04         A  6236    	LD	BC,_game+1
041AFD DD0FCC              A  6237    	LD	(IX+%FFFFFFCC),BC
041B00 DD31CC              A  6238    	LD	IY,(IX+%FFFFFFCC)
041B03 FD0765              A  6239    	LD	BC,(IY+%65)
041B06 11 37 44 04         A  6240    	LD	DE,_ay_states
041B0A DD1FDE              A  6241    	LD	(IX+%FFFFFFDE),DE
041B0D DD1FCF              A  6242    	LD	(IX+%FFFFFFCF),DE
041B10 CD 60 3A 04         A  6243    	CALL	__stoiu
041B14 FD0762              A  6244    	LD	BC,(IY+%62)
041B17 09                  A  6245    	ADD	HL,BC
041B18 7E                  A  6246    	LD	A,(HL)
041B19 32 39 44 04         A  6247    	LD	(_ay_states+2),A
041B1D FD0765              A  6248    	LD	BC,(IY+%65)
041B20 03                  A  6249    	INC	BC
041B21 FD7165              A  6250    	LD	(IY+%65),C
041B24 FD7066              A  6251    	LD	(IY+%66),B
                           A  6252    ;  818	                    ay_states[0].freque
                           A  6253    .LINE 818
                           A  6254    
041B27 DD31CF              A  6255    	LD	IY,(IX+%FFFFFFCF)
041B2A FD7E01              A  6256    	LD	A,(IY+%1)
041B2D B7ED62              A  6257    	UEXT	HL
041B30 6F                  A  6258    	LD	L,A
041B31 E5                  A  6259    	PUSH	HL
041B32 B7ED62              A  6260    	UEXT	HL
041B35 E5                  A  6261    	PUSH	HL
041B36 33                  A  6262    	INC	SP
041B37 33                  A  6263    	INC	SP
041B38 E1                  A  6264    	POP	HL
041B39 33                  A  6265    	INC	SP
041B3A E5D1                A  6266    	LD	DE,HL
041B3C FD7E02              A  6267    	LD	A,(IY+%2)
041B3F B7ED62              A  6268    	UEXT	HL
041B42 6F                  A  6269    	LD	L,A
041B43 E5C1                A  6270    	LD	BC,HL
041B45 D5E1                A  6271    	LD	HL,DE
041B47 CD 85 39 04         A  6272    	CALL	__ior
041B4B E5C1                A  6273    	LD	BC,HL
041B4D DD31CC              A  6274    	LD	IY,(IX+%FFFFFFCC)
041B50 FD2707              A  6275    	LD	HL,(IY+%7)
041B53 CD AD 3C 04         A  6276    	CALL	__idivu
041B57 DD31CF              A  6277    	LD	IY,(IX+%FFFFFFCF)
041B5A FD2F03              A  6278    	LD	(IY+%3),HL
                           A  6279    ;  819	                    if (ay_states[0].en
                           A  6280    .LINE 819
                           A  6281    
041B5D FD7E06              A  6282    	LD	A,(IY+%6)
041B60 B7                  A  6283    	OR	A,A
041B61 28 3E               A  6284    	JR	Z,L_175
041B63 01170000            A  6285    	LD	BC,23
041B67 C5                  A  6286    	PUSH	BC
041B68 CD 8C 30 04         A  6287    	CALL	_putch
041B6C C1                  A  6288    	POP	BC
041B6D 01000000            A  6289    	LD	BC,0
041B71 C5                  A  6290    	PUSH	BC
041B72 CD 8C 30 04         A  6291    	CALL	_putch
041B76 C1                  A  6292    	POP	BC
041B77 01850000            A  6293    	LD	BC,133
041B7B C5                  A  6294    	PUSH	BC
041B7C CD 8C 30 04         A  6295    	CALL	_putch
041B80 C1                  A  6296    	POP	BC
041B81 01000000            A  6297    	LD	BC,0
041B85 C5                  A  6298    	PUSH	BC
041B86 CD 8C 30 04         A  6299    	CALL	_putch
041B8A C1                  A  6300    	POP	BC
041B8B 01030000            A  6301    	LD	BC,3
041B8F C5                  A  6302    	PUSH	BC
041B90 CD 8C 30 04         A  6303    	CALL	_putch
041B94 C1                  A  6304    	POP	BC
041B95 DD31DE              A  6305    	LD	IY,(IX+%FFFFFFDE)
041B98 FD0703              A  6306    	LD	BC,(IY+%3)
041B9B C5                  A  6307    	PUSH	BC
041B9C CD BC 24 04         A  6308    	CALL	_write16bit
041BA0 C1                  A  6309    	POP	BC
041BA1                     A  6310    L_175:
                           A  6311    ;  820	                    return 0;
                           A  6312    .LINE 820
                           A  6313    
041BA1 AF                  A  6314    	XOR	A,A
041BA2 C3 DB 23 04         A  6315    	JR	L_272
                           A  6316    ;  821	                case 0x01:
041BA6                     A  6317    L_176:
                           A  6318    .LINE 821
                           A  6319    
                           A  6320    ;  822	                    ay_states[0].freque
                           A  6321    .LINE 822
                           A  6322    
041BA6 01 CF 43 04         A  6323    	LD	BC,_game+1
041BAA DD0FC6              A  6324    	LD	(IX+%FFFFFFC6),BC
041BAD DD31C6              A  6325    	LD	IY,(IX+%FFFFFFC6)
041BB0 FD0765              A  6326    	LD	BC,(IY+%65)
041BB3 11 37 44 04         A  6327    	LD	DE,_ay_states
041BB7 DD1FE4              A  6328    	LD	(IX+%FFFFFFE4),DE
041BBA DD1FC9              A  6329    	LD	(IX+%FFFFFFC9),DE
041BBD CD 60 3A 04         A  6330    	CALL	__stoiu
041BC1 FD0762              A  6331    	LD	BC,(IY+%62)
041BC4 09                  A  6332    	ADD	HL,BC
041BC5 7E                  A  6333    	LD	A,(HL)
041BC6 32 38 44 04         A  6334    	LD	(_ay_states+1),A
041BCA FD0765              A  6335    	LD	BC,(IY+%65)
041BCD 03                  A  6336    	INC	BC
041BCE FD7165              A  6337    	LD	(IY+%65),C
041BD1 FD7066              A  6338    	LD	(IY+%66),B
                           A  6339    ;  823	                    ay_states[0].freque
                           A  6340    .LINE 823
                           A  6341    
041BD4 DD31C9              A  6342    	LD	IY,(IX+%FFFFFFC9)
041BD7 FD7E01              A  6343    	LD	A,(IY+%1)
041BDA B7ED62              A  6344    	UEXT	HL
041BDD 6F                  A  6345    	LD	L,A
041BDE E5                  A  6346    	PUSH	HL
041BDF B7ED62              A  6347    	UEXT	HL
041BE2 E5                  A  6348    	PUSH	HL
041BE3 33                  A  6349    	INC	SP
041BE4 33                  A  6350    	INC	SP
041BE5 E1                  A  6351    	POP	HL
041BE6 33                  A  6352    	INC	SP
041BE7 E5D1                A  6353    	LD	DE,HL
041BE9 FD7E02              A  6354    	LD	A,(IY+%2)
041BEC B7ED62              A  6355    	UEXT	HL
041BEF 6F                  A  6356    	LD	L,A
041BF0 E5C1                A  6357    	LD	BC,HL
041BF2 D5E1                A  6358    	LD	HL,DE
041BF4 CD 85 39 04         A  6359    	CALL	__ior
041BF8 E5C1                A  6360    	LD	BC,HL
041BFA DD31C6              A  6361    	LD	IY,(IX+%FFFFFFC6)
041BFD FD2707              A  6362    	LD	HL,(IY+%7)
041C00 CD AD 3C 04         A  6363    	CALL	__idivu
041C04 DD31C9              A  6364    	LD	IY,(IX+%FFFFFFC9)
041C07 FD2F03              A  6365    	LD	(IY+%3),HL
                           A  6366    ;  824	                    if (ay_states[0].en
                           A  6367    .LINE 824
                           A  6368    
041C0A FD7E06              A  6369    	LD	A,(IY+%6)
041C0D B7                  A  6370    	OR	A,A
041C0E 28 3E               A  6371    	JR	Z,L_181
041C10 01170000            A  6372    	LD	BC,23
041C14 C5                  A  6373    	PUSH	BC
041C15 CD 8C 30 04         A  6374    	CALL	_putch
041C19 C1                  A  6375    	POP	BC
041C1A 01000000            A  6376    	LD	BC,0
041C1E C5                  A  6377    	PUSH	BC
041C1F CD 8C 30 04         A  6378    	CALL	_putch
041C23 C1                  A  6379    	POP	BC
041C24 01850000            A  6380    	LD	BC,133
041C28 C5                  A  6381    	PUSH	BC
041C29 CD 8C 30 04         A  6382    	CALL	_putch
041C2D C1                  A  6383    	POP	BC
041C2E 01000000            A  6384    	LD	BC,0
041C32 C5                  A  6385    	PUSH	BC
041C33 CD 8C 30 04         A  6386    	CALL	_putch
041C37 C1                  A  6387    	POP	BC
041C38 01030000            A  6388    	LD	BC,3
041C3C C5                  A  6389    	PUSH	BC
041C3D CD 8C 30 04         A  6390    	CALL	_putch
041C41 C1                  A  6391    	POP	BC
041C42 DD31E4              A  6392    	LD	IY,(IX+%FFFFFFE4)
041C45 FD0703              A  6393    	LD	BC,(IY+%3)
041C48 C5                  A  6394    	PUSH	BC
041C49 CD BC 24 04         A  6395    	CALL	_write16bit
041C4D C1                  A  6396    	POP	BC
041C4E                     A  6397    L_181:
                           A  6398    ;  825	                    return 0;
                           A  6399    .LINE 825
                           A  6400    
041C4E AF                  A  6401    	XOR	A,A
041C4F C3 DB 23 04         A  6402    	JR	L_272
                           A  6403    ;  826	                case 0x08:
041C53                     A  6404    L_182:
                           A  6405    .LINE 826
                           A  6406    
                           A  6407    ;  827	                    ay_states[0].volume
                           A  6408    .LINE 827
                           A  6409    
041C53 01 CF 43 04         A  6410    	LD	BC,_game+1
041C57 DD0FC3              A  6411    	LD	(IX+%FFFFFFC3),BC
041C5A DD31C3              A  6412    	LD	IY,(IX+%FFFFFFC3)
041C5D FD0765              A  6413    	LD	BC,(IY+%65)
041C60 11 37 44 04         A  6414    	LD	DE,_ay_states
041C64 DD1FE1              A  6415    	LD	(IX+%FFFFFFE1),DE
041C67 CD 60 3A 04         A  6416    	CALL	__stoiu
041C6B FD0762              A  6417    	LD	BC,(IY+%62)
041C6E 09                  A  6418    	ADD	HL,BC
041C6F 7E                  A  6419    	LD	A,(HL)
041C70 E60F                A  6420    	AND	A,%F
041C72 B7ED62              A  6421    	UEXT	HL
041C75 6F                  A  6422    	LD	L,A
041C76 01 BA 42 04         A  6423    	LD	BC,_ay_vol_table
041C7A 09                  A  6424    	ADD	HL,BC
041C7B 7E                  A  6425    	LD	A,(HL)
041C7C 32 37 44 04         A  6426    	LD	(_ay_states),A
041C80 FD0765              A  6427    	LD	BC,(IY+%65)
041C83 03                  A  6428    	INC	BC
041C84 FD7165              A  6429    	LD	(IY+%65),C
041C87 FD7066              A  6430    	LD	(IY+%66),B
                           A  6431    ;  828	                    if (ay_states[0].en
                           A  6432    .LINE 828
                           A  6433    
041C8A 3A 3D 44 04         A  6434    	LD	A,(_ay_states+6)
041C8E B7                  A  6435    	OR	A,A
041C8F 28 7A               A  6436    	JR	Z,L_187
041C91 01170000            A  6437    	LD	BC,23
041C95 C5                  A  6438    	PUSH	BC
041C96 DD7798              A  6439    	LD	(IX+%FFFFFF98),A
041C99 CD 8C 30 04         A  6440    	CALL	_putch
041C9D DD7E98              A  6441    	LD	A,(IX+%FFFFFF98)
041CA0 C1                  A  6442    	POP	BC
041CA1 01000000            A  6443    	LD	BC,0
041CA5 C5                  A  6444    	PUSH	BC
041CA6 DD7798              A  6445    	LD	(IX+%FFFFFF98),A
041CA9 CD 8C 30 04         A  6446    	CALL	_putch
041CAD DD7E98              A  6447    	LD	A,(IX+%FFFFFF98)
041CB0 C1                  A  6448    	POP	BC
041CB1 01850000            A  6449    	LD	BC,133
041CB5 C5                  A  6450    	PUSH	BC
041CB6 DD7798              A  6451    	LD	(IX+%FFFFFF98),A
041CB9 CD 8C 30 04         A  6452    	CALL	_putch
041CBD DD7E98              A  6453    	LD	A,(IX+%FFFFFF98)
041CC0 C1                  A  6454    	POP	BC
041CC1 01000000            A  6455    	LD	BC,0
041CC5 C5                  A  6456    	PUSH	BC
041CC6 DD7798              A  6457    	LD	(IX+%FFFFFF98),A
041CC9 CD 8C 30 04         A  6458    	CALL	_putch
041CCD DD7E98              A  6459    	LD	A,(IX+%FFFFFF98)
041CD0 C1                  A  6460    	POP	BC
041CD1 01020000            A  6461    	LD	BC,2
041CD5 C5                  A  6462    	PUSH	BC
041CD6 DD7798              A  6463    	LD	(IX+%FFFFFF98),A
041CD9 CD 8C 30 04         A  6464    	CALL	_putch
041CDD DD7E98              A  6465    	LD	A,(IX+%FFFFFF98)
041CE0 C1                  A  6466    	POP	BC
041CE1 B7ED62              A  6467    	UEXT	HL
041CE4 DD31E1              A  6468    	LD	IY,(IX+%FFFFFFE1)
041CE7 FD6E00              A  6469    	LD	L,(IY+%0)
041CEA 7C                  A  6470    	LD	A,H
041CEB E5C1                A  6471    	LD	BC,HL
041CED CD B0 3B 04         A  6472    	CALL	__ultof
041CF1 5F                  A  6473    	LD	E,A
041CF2 C5E1                A  6474    	LD	HL,BC
041CF4 ED4B E8 43 04       A  6475    	LD	BC,(_game+26)
041CF9 3A EB 43 04         A  6476    	LD	A,(_game+29)
041CFD CD A0 39 04         A  6477    	CALL	__fmul
041D01 CD ED 3C 04         A  6478    	CALL	__ftol
041D05 C5                  A  6479    	PUSH	BC
041D06 CD 8C 30 04         A  6480    	CALL	_putch
041D0A C1                  A  6481    	POP	BC
041D0B                     A  6482    L_187:
                           A  6483    ;  829	                    return 0;
                           A  6484    .LINE 829
                           A  6485    
041D0B AF                  A  6486    	XOR	A,A
041D0C C3 DB 23 04         A  6487    	JR	L_272
                           A  6488    ;  830	                case 0x09:
041D10                     A  6489    L_188:
                           A  6490    .LINE 830
                           A  6491    
                           A  6492    ;  831	                    ay_states[1].volume
                           A  6493    .LINE 831
                           A  6494    
041D10 01 CF 43 04         A  6495    	LD	BC,_game+1
041D14 DD0FC0              A  6496    	LD	(IX+%FFFFFFC0),BC
041D17 DD31C0              A  6497    	LD	IY,(IX+%FFFFFFC0)
041D1A FD0765              A  6498    	LD	BC,(IY+%65)
041D1D CD 60 3A 04         A  6499    	CALL	__stoiu
041D21 FD0762              A  6500    	LD	BC,(IY+%62)
041D24 09                  A  6501    	ADD	HL,BC
041D25 7E                  A  6502    	LD	A,(HL)
041D26 E60F                A  6503    	AND	A,%F
041D28 B7ED62              A  6504    	UEXT	HL
041D2B 6F                  A  6505    	LD	L,A
041D2C 01 BA 42 04         A  6506    	LD	BC,_ay_vol_table
041D30 09                  A  6507    	ADD	HL,BC
041D31 FD21 37 44 04       A  6508    	LD	IY,_ay_states
041D36 7E                  A  6509    	LD	A,(HL)
041D37 FD7707              A  6510    	LD	(IY+%7),A
041D3A DD31C0              A  6511    	LD	IY,(IX+%FFFFFFC0)
041D3D FD0765              A  6512    	LD	BC,(IY+%65)
041D40 03                  A  6513    	INC	BC
041D41 FD7165              A  6514    	LD	(IY+%65),C
041D44 FD7066              A  6515    	LD	(IY+%66),B
                           A  6516    ;  832	                    if (ay_states[1].en
                           A  6517    .LINE 832
                           A  6518    
041D47 FD21 37 44 04       A  6519    	LD	IY,_ay_states
041D4C FD7E0D              A  6520    	LD	A,(IY+%D)
041D4F B7                  A  6521    	OR	A,A
041D50 28 7C               A  6522    	JR	Z,L_193
041D52 01170000            A  6523    	LD	BC,23
041D56 C5                  A  6524    	PUSH	BC
041D57 DD7798              A  6525    	LD	(IX+%FFFFFF98),A
041D5A CD 8C 30 04         A  6526    	CALL	_putch
041D5E DD7E98              A  6527    	LD	A,(IX+%FFFFFF98)
041D61 C1                  A  6528    	POP	BC
041D62 01000000            A  6529    	LD	BC,0
041D66 C5                  A  6530    	PUSH	BC
041D67 DD7798              A  6531    	LD	(IX+%FFFFFF98),A
041D6A CD 8C 30 04         A  6532    	CALL	_putch
041D6E DD7E98              A  6533    	LD	A,(IX+%FFFFFF98)
041D71 C1                  A  6534    	POP	BC
041D72 01850000            A  6535    	LD	BC,133
041D76 C5                  A  6536    	PUSH	BC
041D77 DD7798              A  6537    	LD	(IX+%FFFFFF98),A
041D7A CD 8C 30 04         A  6538    	CALL	_putch
041D7E DD7E98              A  6539    	LD	A,(IX+%FFFFFF98)
041D81 C1                  A  6540    	POP	BC
041D82 01010000            A  6541    	LD	BC,1
041D86 C5                  A  6542    	PUSH	BC
041D87 DD7798              A  6543    	LD	(IX+%FFFFFF98),A
041D8A CD 8C 30 04         A  6544    	CALL	_putch
041D8E DD7E98              A  6545    	LD	A,(IX+%FFFFFF98)
041D91 C1                  A  6546    	POP	BC
041D92 01020000            A  6547    	LD	BC,2
041D96 C5                  A  6548    	PUSH	BC
041D97 DD7798              A  6549    	LD	(IX+%FFFFFF98),A
041D9A CD 8C 30 04         A  6550    	CALL	_putch
041D9E DD7E98              A  6551    	LD	A,(IX+%FFFFFF98)
041DA1 C1                  A  6552    	POP	BC
041DA2 FD21 37 44 04       A  6553    	LD	IY,_ay_states
041DA7 B7ED62              A  6554    	UEXT	HL
041DAA FD6E07              A  6555    	LD	L,(IY+%7)
041DAD 7C                  A  6556    	LD	A,H
041DAE E5C1                A  6557    	LD	BC,HL
041DB0 CD B0 3B 04         A  6558    	CALL	__ultof
041DB4 5F                  A  6559    	LD	E,A
041DB5 C5E1                A  6560    	LD	HL,BC
041DB7 ED4B E8 43 04       A  6561    	LD	BC,(_game+26)
041DBC 3A EB 43 04         A  6562    	LD	A,(_game+29)
041DC0 CD A0 39 04         A  6563    	CALL	__fmul
041DC4 CD ED 3C 04         A  6564    	CALL	__ftol
041DC8 C5                  A  6565    	PUSH	BC
041DC9 CD 8C 30 04         A  6566    	CALL	_putch
041DCD C1                  A  6567    	POP	BC
041DCE                     A  6568    L_193:
                           A  6569    ;  833	                    return 0;
                           A  6570    .LINE 833
                           A  6571    
041DCE AF                  A  6572    	XOR	A,A
041DCF C3 DB 23 04         A  6573    	JR	L_272
                           A  6574    ;  834	                case 0x0A:
041DD3                     A  6575    L_194:
                           A  6576    .LINE 834
                           A  6577    
                           A  6578    ;  835	                    ay_states[2].volume
                           A  6579    .LINE 835
                           A  6580    
041DD3 01 CF 43 04         A  6581    	LD	BC,_game+1
041DD7 DD0FBD              A  6582    	LD	(IX+%FFFFFFBD),BC
041DDA DD31BD              A  6583    	LD	IY,(IX+%FFFFFFBD)
041DDD FD0765              A  6584    	LD	BC,(IY+%65)
041DE0 CD 60 3A 04         A  6585    	CALL	__stoiu
041DE4 FD0762              A  6586    	LD	BC,(IY+%62)
041DE7 09                  A  6587    	ADD	HL,BC
041DE8 7E                  A  6588    	LD	A,(HL)
041DE9 E60F                A  6589    	AND	A,%F
041DEB B7ED62              A  6590    	UEXT	HL
041DEE 6F                  A  6591    	LD	L,A
041DEF 01 BA 42 04         A  6592    	LD	BC,_ay_vol_table
041DF3 09                  A  6593    	ADD	HL,BC
041DF4 FD21 37 44 04       A  6594    	LD	IY,_ay_states
041DF9 7E                  A  6595    	LD	A,(HL)
041DFA FD770E              A  6596    	LD	(IY+%E),A
041DFD DD31BD              A  6597    	LD	IY,(IX+%FFFFFFBD)
041E00 FD0765              A  6598    	LD	BC,(IY+%65)
041E03 03                  A  6599    	INC	BC
041E04 FD7165              A  6600    	LD	(IY+%65),C
041E07 FD7066              A  6601    	LD	(IY+%66),B
                           A  6602    ;  836	                    if (ay_states[2].en
                           A  6603    .LINE 836
                           A  6604    
041E0A FD21 37 44 04       A  6605    	LD	IY,_ay_states
041E0F FD7E14              A  6606    	LD	A,(IY+%14)
041E12 B7                  A  6607    	OR	A,A
041E13 28 7C               A  6608    	JR	Z,L_199
041E15 01170000            A  6609    	LD	BC,23
041E19 C5                  A  6610    	PUSH	BC
041E1A DD7798              A  6611    	LD	(IX+%FFFFFF98),A
041E1D CD 8C 30 04         A  6612    	CALL	_putch
041E21 DD7E98              A  6613    	LD	A,(IX+%FFFFFF98)
041E24 C1                  A  6614    	POP	BC
041E25 01000000            A  6615    	LD	BC,0
041E29 C5                  A  6616    	PUSH	BC
041E2A DD7798              A  6617    	LD	(IX+%FFFFFF98),A
041E2D CD 8C 30 04         A  6618    	CALL	_putch
041E31 DD7E98              A  6619    	LD	A,(IX+%FFFFFF98)
041E34 C1                  A  6620    	POP	BC
041E35 01850000            A  6621    	LD	BC,133
041E39 C5                  A  6622    	PUSH	BC
041E3A DD7798              A  6623    	LD	(IX+%FFFFFF98),A
041E3D CD 8C 30 04         A  6624    	CALL	_putch
041E41 DD7E98              A  6625    	LD	A,(IX+%FFFFFF98)
041E44 C1                  A  6626    	POP	BC
041E45 01020000            A  6627    	LD	BC,2
041E49 C5                  A  6628    	PUSH	BC
041E4A DD7798              A  6629    	LD	(IX+%FFFFFF98),A
041E4D CD 8C 30 04         A  6630    	CALL	_putch
041E51 DD7E98              A  6631    	LD	A,(IX+%FFFFFF98)
041E54 C1                  A  6632    	POP	BC
041E55 01020000            A  6633    	LD	BC,2
041E59 C5                  A  6634    	PUSH	BC
041E5A DD7798              A  6635    	LD	(IX+%FFFFFF98),A
041E5D CD 8C 30 04         A  6636    	CALL	_putch
041E61 DD7E98              A  6637    	LD	A,(IX+%FFFFFF98)
041E64 C1                  A  6638    	POP	BC
041E65 FD21 37 44 04       A  6639    	LD	IY,_ay_states
041E6A B7ED62              A  6640    	UEXT	HL
041E6D FD6E0E              A  6641    	LD	L,(IY+%E)
041E70 7C                  A  6642    	LD	A,H
041E71 E5C1                A  6643    	LD	BC,HL
041E73 CD B0 3B 04         A  6644    	CALL	__ultof
041E77 5F                  A  6645    	LD	E,A
041E78 C5E1                A  6646    	LD	HL,BC
041E7A ED4B E8 43 04       A  6647    	LD	BC,(_game+26)
041E7F 3A EB 43 04         A  6648    	LD	A,(_game+29)
041E83 CD A0 39 04         A  6649    	CALL	__fmul
041E87 CD ED 3C 04         A  6650    	CALL	__ftol
041E8B C5                  A  6651    	PUSH	BC
041E8C CD 8C 30 04         A  6652    	CALL	_putch
041E90 C1                  A  6653    	POP	BC
041E91                     A  6654    L_199:
                           A  6655    ;  837	                    return 0;
                           A  6656    .LINE 837
                           A  6657    
041E91 AF                  A  6658    	XOR	A,A
041E92 C3 DB 23 04         A  6659    	JR	L_272
                           A  6660    ;  838	                case 0x02:
041E96                     A  6661    L_200:
                           A  6662    .LINE 838
                           A  6663    
                           A  6664    ;  839	                    ay_states[1].freque
                           A  6665    .LINE 839
                           A  6666    
041E96 01 CF 43 04         A  6667    	LD	BC,_game+1
041E9A DD0FB7              A  6668    	LD	(IX+%FFFFFFB7),BC
041E9D DD31B7              A  6669    	LD	IY,(IX+%FFFFFFB7)
041EA0 FD0765              A  6670    	LD	BC,(IY+%65)
041EA3 11 3E 44 04         A  6671    	LD	DE,_ay_states+7
041EA7 DD1FBA              A  6672    	LD	(IX+%FFFFFFBA),DE
041EAA CD 60 3A 04         A  6673    	CALL	__stoiu
041EAE FD0762              A  6674    	LD	BC,(IY+%62)
041EB1 09                  A  6675    	ADD	HL,BC
041EB2 FD21 37 44 04       A  6676    	LD	IY,_ay_states
041EB7 7E                  A  6677    	LD	A,(HL)
041EB8 FD7709              A  6678    	LD	(IY+%9),A
041EBB DD31B7              A  6679    	LD	IY,(IX+%FFFFFFB7)
041EBE FD0765              A  6680    	LD	BC,(IY+%65)
041EC1 03                  A  6681    	INC	BC
041EC2 FD7165              A  6682    	LD	(IY+%65),C
041EC5 FD7066              A  6683    	LD	(IY+%66),B
                           A  6684    ;  840	                    ay_states[1].freque
                           A  6685    .LINE 840
                           A  6686    
041EC8 DD31BA              A  6687    	LD	IY,(IX+%FFFFFFBA)
041ECB FD7E01              A  6688    	LD	A,(IY+%1)
041ECE B7ED62              A  6689    	UEXT	HL
041ED1 6F                  A  6690    	LD	L,A
041ED2 E5                  A  6691    	PUSH	HL
041ED3 B7ED62              A  6692    	UEXT	HL
041ED6 E5                  A  6693    	PUSH	HL
041ED7 33                  A  6694    	INC	SP
041ED8 33                  A  6695    	INC	SP
041ED9 E1                  A  6696    	POP	HL
041EDA 33                  A  6697    	INC	SP
041EDB E5D1                A  6698    	LD	DE,HL
041EDD FD7E02              A  6699    	LD	A,(IY+%2)
041EE0 B7ED62              A  6700    	UEXT	HL
041EE3 6F                  A  6701    	LD	L,A
041EE4 E5C1                A  6702    	LD	BC,HL
041EE6 D5E1                A  6703    	LD	HL,DE
041EE8 CD 85 39 04         A  6704    	CALL	__ior
041EEC E5C1                A  6705    	LD	BC,HL
041EEE DD31B7              A  6706    	LD	IY,(IX+%FFFFFFB7)
041EF1 FD2707              A  6707    	LD	HL,(IY+%7)
041EF4 CD AD 3C 04         A  6708    	CALL	__idivu
041EF8 DD31BA              A  6709    	LD	IY,(IX+%FFFFFFBA)
041EFB FD2F03              A  6710    	LD	(IY+%3),HL
                           A  6711    ;  841	                    if (ay_states[1].en
                           A  6712    .LINE 841
                           A  6713    
041EFE FD7E06              A  6714    	LD	A,(IY+%6)
041F01 B7                  A  6715    	OR	A,A
041F02 28 40               A  6716    	JR	Z,L_205
041F04 01170000            A  6717    	LD	BC,23
041F08 C5                  A  6718    	PUSH	BC
041F09 CD 8C 30 04         A  6719    	CALL	_putch
041F0D C1                  A  6720    	POP	BC
041F0E 01000000            A  6721    	LD	BC,0
041F12 C5                  A  6722    	PUSH	BC
041F13 CD 8C 30 04         A  6723    	CALL	_putch
041F17 C1                  A  6724    	POP	BC
041F18 01850000            A  6725    	LD	BC,133
041F1C C5                  A  6726    	PUSH	BC
041F1D CD 8C 30 04         A  6727    	CALL	_putch
041F21 C1                  A  6728    	POP	BC
041F22 01010000            A  6729    	LD	BC,1
041F26 C5                  A  6730    	PUSH	BC
041F27 CD 8C 30 04         A  6731    	CALL	_putch
041F2B C1                  A  6732    	POP	BC
041F2C 01030000            A  6733    	LD	BC,3
041F30 C5                  A  6734    	PUSH	BC
041F31 CD 8C 30 04         A  6735    	CALL	_putch
041F35 C1                  A  6736    	POP	BC
041F36 FD21 37 44 04       A  6737    	LD	IY,_ay_states
041F3B FD070A              A  6738    	LD	BC,(IY+%A)
041F3E C5                  A  6739    	PUSH	BC
041F3F CD BC 24 04         A  6740    	CALL	_write16bit
041F43 C1                  A  6741    	POP	BC
041F44                     A  6742    L_205:
                           A  6743    ;  842	                    return 0;
                           A  6744    .LINE 842
                           A  6745    
041F44 AF                  A  6746    	XOR	A,A
041F45 C3 DB 23 04         A  6747    	JR	L_272
                           A  6748    ;  843	                case 0x03:
041F49                     A  6749    L_206:
                           A  6750    .LINE 843
                           A  6751    
                           A  6752    ;  844	                    ay_states[1].freque
                           A  6753    .LINE 844
                           A  6754    
041F49 01 CF 43 04         A  6755    	LD	BC,_game+1
041F4D DD0FB1              A  6756    	LD	(IX+%FFFFFFB1),BC
041F50 DD31B1              A  6757    	LD	IY,(IX+%FFFFFFB1)
041F53 FD0765              A  6758    	LD	BC,(IY+%65)
041F56 11 3E 44 04         A  6759    	LD	DE,_ay_states+7
041F5A DD1FB4              A  6760    	LD	(IX+%FFFFFFB4),DE
041F5D CD 60 3A 04         A  6761    	CALL	__stoiu
041F61 FD0762              A  6762    	LD	BC,(IY+%62)
041F64 09                  A  6763    	ADD	HL,BC
041F65 FD21 37 44 04       A  6764    	LD	IY,_ay_states
041F6A 7E                  A  6765    	LD	A,(HL)
041F6B FD7708              A  6766    	LD	(IY+%8),A
041F6E DD31B1              A  6767    	LD	IY,(IX+%FFFFFFB1)
041F71 FD0765              A  6768    	LD	BC,(IY+%65)
041F74 03                  A  6769    	INC	BC
041F75 FD7165              A  6770    	LD	(IY+%65),C
041F78 FD7066              A  6771    	LD	(IY+%66),B
                           A  6772    ;  845	                    ay_states[1].freque
                           A  6773    .LINE 845
                           A  6774    
041F7B DD31B4              A  6775    	LD	IY,(IX+%FFFFFFB4)
041F7E FD7E01              A  6776    	LD	A,(IY+%1)
041F81 B7ED62              A  6777    	UEXT	HL
041F84 6F                  A  6778    	LD	L,A
041F85 E5                  A  6779    	PUSH	HL
041F86 B7ED62              A  6780    	UEXT	HL
041F89 E5                  A  6781    	PUSH	HL
041F8A 33                  A  6782    	INC	SP
041F8B 33                  A  6783    	INC	SP
041F8C E1                  A  6784    	POP	HL
041F8D 33                  A  6785    	INC	SP
041F8E E5D1                A  6786    	LD	DE,HL
041F90 FD7E02              A  6787    	LD	A,(IY+%2)
041F93 B7ED62              A  6788    	UEXT	HL
041F96 6F                  A  6789    	LD	L,A
041F97 E5C1                A  6790    	LD	BC,HL
041F99 D5E1                A  6791    	LD	HL,DE
041F9B CD 85 39 04         A  6792    	CALL	__ior
041F9F E5C1                A  6793    	LD	BC,HL
041FA1 DD31B1              A  6794    	LD	IY,(IX+%FFFFFFB1)
041FA4 FD2707              A  6795    	LD	HL,(IY+%7)
041FA7 CD AD 3C 04         A  6796    	CALL	__idivu
041FAB DD31B4              A  6797    	LD	IY,(IX+%FFFFFFB4)
041FAE FD2F03              A  6798    	LD	(IY+%3),HL
                           A  6799    ;  846	                    if (ay_states[1].en
                           A  6800    .LINE 846
                           A  6801    
041FB1 FD7E06              A  6802    	LD	A,(IY+%6)
041FB4 B7                  A  6803    	OR	A,A
041FB5 28 40               A  6804    	JR	Z,L_211
041FB7 01170000            A  6805    	LD	BC,23
041FBB C5                  A  6806    	PUSH	BC
041FBC CD 8C 30 04         A  6807    	CALL	_putch
041FC0 C1                  A  6808    	POP	BC
041FC1 01000000            A  6809    	LD	BC,0
041FC5 C5                  A  6810    	PUSH	BC
041FC6 CD 8C 30 04         A  6811    	CALL	_putch
041FCA C1                  A  6812    	POP	BC
041FCB 01850000            A  6813    	LD	BC,133
041FCF C5                  A  6814    	PUSH	BC
041FD0 CD 8C 30 04         A  6815    	CALL	_putch
041FD4 C1                  A  6816    	POP	BC
041FD5 01010000            A  6817    	LD	BC,1
041FD9 C5                  A  6818    	PUSH	BC
041FDA CD 8C 30 04         A  6819    	CALL	_putch
041FDE C1                  A  6820    	POP	BC
041FDF 01030000            A  6821    	LD	BC,3
041FE3 C5                  A  6822    	PUSH	BC
041FE4 CD 8C 30 04         A  6823    	CALL	_putch
041FE8 C1                  A  6824    	POP	BC
041FE9 FD21 37 44 04       A  6825    	LD	IY,_ay_states
041FEE FD070A              A  6826    	LD	BC,(IY+%A)
041FF1 C5                  A  6827    	PUSH	BC
041FF2 CD BC 24 04         A  6828    	CALL	_write16bit
041FF6 C1                  A  6829    	POP	BC
041FF7                     A  6830    L_211:
                           A  6831    ;  847	                    return 0;
                           A  6832    .LINE 847
                           A  6833    
041FF7 AF                  A  6834    	XOR	A,A
041FF8 C3 DB 23 04         A  6835    	JR	L_272
                           A  6836    ;  848	                case 0x04:
041FFC                     A  6837    L_212:
                           A  6838    .LINE 848
                           A  6839    
                           A  6840    ;  849	                    ay_states[2].freque
                           A  6841    .LINE 849
                           A  6842    
041FFC 01 CF 43 04         A  6843    	LD	BC,_game+1
042000 DD0FAB              A  6844    	LD	(IX+%FFFFFFAB),BC
042003 DD31AB              A  6845    	LD	IY,(IX+%FFFFFFAB)
042006 FD0765              A  6846    	LD	BC,(IY+%65)
042009 11 45 44 04         A  6847    	LD	DE,_ay_states+14
04200D DD1FAE              A  6848    	LD	(IX+%FFFFFFAE),DE
042010 CD 60 3A 04         A  6849    	CALL	__stoiu
042014 FD0762              A  6850    	LD	BC,(IY+%62)
042017 09                  A  6851    	ADD	HL,BC
042018 FD21 37 44 04       A  6852    	LD	IY,_ay_states
04201D 7E                  A  6853    	LD	A,(HL)
04201E FD7710              A  6854    	LD	(IY+%10),A
042021 DD31AB              A  6855    	LD	IY,(IX+%FFFFFFAB)
042024 FD0765              A  6856    	LD	BC,(IY+%65)
042027 03                  A  6857    	INC	BC
042028 FD7165              A  6858    	LD	(IY+%65),C
04202B FD7066              A  6859    	LD	(IY+%66),B
                           A  6860    ;  850	                    ay_states[2].freque
                           A  6861    .LINE 850
                           A  6862    
04202E DD31AE              A  6863    	LD	IY,(IX+%FFFFFFAE)
042031 FD7E01              A  6864    	LD	A,(IY+%1)
042034 B7ED62              A  6865    	UEXT	HL
042037 6F                  A  6866    	LD	L,A
042038 E5                  A  6867    	PUSH	HL
042039 B7ED62              A  6868    	UEXT	HL
04203C E5                  A  6869    	PUSH	HL
04203D 33                  A  6870    	INC	SP
04203E 33                  A  6871    	INC	SP
04203F E1                  A  6872    	POP	HL
042040 33                  A  6873    	INC	SP
042041 E5D1                A  6874    	LD	DE,HL
042043 FD7E02              A  6875    	LD	A,(IY+%2)
042046 B7ED62              A  6876    	UEXT	HL
042049 6F                  A  6877    	LD	L,A
04204A E5C1                A  6878    	LD	BC,HL
04204C D5E1                A  6879    	LD	HL,DE
04204E CD 85 39 04         A  6880    	CALL	__ior
042052 E5C1                A  6881    	LD	BC,HL
042054 DD31AB              A  6882    	LD	IY,(IX+%FFFFFFAB)
042057 FD2707              A  6883    	LD	HL,(IY+%7)
04205A CD AD 3C 04         A  6884    	CALL	__idivu
04205E DD31AE              A  6885    	LD	IY,(IX+%FFFFFFAE)
042061 FD2F03              A  6886    	LD	(IY+%3),HL
                           A  6887    ;  851	                    if (ay_states[2].en
                           A  6888    .LINE 851
                           A  6889    
042064 FD7E06              A  6890    	LD	A,(IY+%6)
042067 B7                  A  6891    	OR	A,A
042068 28 40               A  6892    	JR	Z,L_217
04206A 01170000            A  6893    	LD	BC,23
04206E C5                  A  6894    	PUSH	BC
04206F CD 8C 30 04         A  6895    	CALL	_putch
042073 C1                  A  6896    	POP	BC
042074 01000000            A  6897    	LD	BC,0
042078 C5                  A  6898    	PUSH	BC
042079 CD 8C 30 04         A  6899    	CALL	_putch
04207D C1                  A  6900    	POP	BC
04207E 01850000            A  6901    	LD	BC,133
042082 C5                  A  6902    	PUSH	BC
042083 CD 8C 30 04         A  6903    	CALL	_putch
042087 C1                  A  6904    	POP	BC
042088 01020000            A  6905    	LD	BC,2
04208C C5                  A  6906    	PUSH	BC
04208D CD 8C 30 04         A  6907    	CALL	_putch
042091 C1                  A  6908    	POP	BC
042092 01030000            A  6909    	LD	BC,3
042096 C5                  A  6910    	PUSH	BC
042097 CD 8C 30 04         A  6911    	CALL	_putch
04209B C1                  A  6912    	POP	BC
04209C FD21 37 44 04       A  6913    	LD	IY,_ay_states
0420A1 FD0711              A  6914    	LD	BC,(IY+%11)
0420A4 C5                  A  6915    	PUSH	BC
0420A5 CD BC 24 04         A  6916    	CALL	_write16bit
0420A9 C1                  A  6917    	POP	BC
0420AA                     A  6918    L_217:
                           A  6919    ;  852	                    return 0;
                           A  6920    .LINE 852
                           A  6921    
0420AA AF                  A  6922    	XOR	A,A
0420AB C3 DB 23 04         A  6923    	JR	L_272
                           A  6924    ;  853	                case 0x05:
0420AF                     A  6925    L_218:
                           A  6926    .LINE 853
                           A  6927    
                           A  6928    ;  854	                    ay_states[2].freque
                           A  6929    .LINE 854
                           A  6930    
0420AF 01 CF 43 04         A  6931    	LD	BC,_game+1
0420B3 DD0FA5              A  6932    	LD	(IX+%FFFFFFA5),BC
0420B6 DD31A5              A  6933    	LD	IY,(IX+%FFFFFFA5)
0420B9 FD0765              A  6934    	LD	BC,(IY+%65)
0420BC 11 45 44 04         A  6935    	LD	DE,_ay_states+14
0420C0 DD1FA8              A  6936    	LD	(IX+%FFFFFFA8),DE
0420C3 CD 60 3A 04         A  6937    	CALL	__stoiu
0420C7 FD0762              A  6938    	LD	BC,(IY+%62)
0420CA 09                  A  6939    	ADD	HL,BC
0420CB FD21 37 44 04       A  6940    	LD	IY,_ay_states
0420D0 7E                  A  6941    	LD	A,(HL)
0420D1 FD770F              A  6942    	LD	(IY+%F),A
0420D4 DD31A5              A  6943    	LD	IY,(IX+%FFFFFFA5)
0420D7 FD0765              A  6944    	LD	BC,(IY+%65)
0420DA 03                  A  6945    	INC	BC
0420DB FD7165              A  6946    	LD	(IY+%65),C
0420DE FD7066              A  6947    	LD	(IY+%66),B
                           A  6948    ;  855	                    ay_states[2].freque
                           A  6949    .LINE 855
                           A  6950    
0420E1 DD31A8              A  6951    	LD	IY,(IX+%FFFFFFA8)
0420E4 FD7E01              A  6952    	LD	A,(IY+%1)
0420E7 B7ED62              A  6953    	UEXT	HL
0420EA 6F                  A  6954    	LD	L,A
0420EB E5                  A  6955    	PUSH	HL
0420EC B7ED62              A  6956    	UEXT	HL
0420EF E5                  A  6957    	PUSH	HL
0420F0 33                  A  6958    	INC	SP
0420F1 33                  A  6959    	INC	SP
0420F2 E1                  A  6960    	POP	HL
0420F3 33                  A  6961    	INC	SP
0420F4 E5D1                A  6962    	LD	DE,HL
0420F6 FD7E02              A  6963    	LD	A,(IY+%2)
0420F9 B7ED62              A  6964    	UEXT	HL
0420FC 6F                  A  6965    	LD	L,A
0420FD E5C1                A  6966    	LD	BC,HL
0420FF D5E1                A  6967    	LD	HL,DE
042101 CD 85 39 04         A  6968    	CALL	__ior
042105 E5C1                A  6969    	LD	BC,HL
042107 DD31A5              A  6970    	LD	IY,(IX+%FFFFFFA5)
04210A FD2707              A  6971    	LD	HL,(IY+%7)
04210D CD AD 3C 04         A  6972    	CALL	__idivu
042111 DD31A8              A  6973    	LD	IY,(IX+%FFFFFFA8)
042114 FD2F03              A  6974    	LD	(IY+%3),HL
                           A  6975    ;  856	                    if (ay_states[2].en
                           A  6976    .LINE 856
                           A  6977    
042117 FD7E06              A  6978    	LD	A,(IY+%6)
04211A B7                  A  6979    	OR	A,A
04211B 28 40               A  6980    	JR	Z,L_223
04211D 01170000            A  6981    	LD	BC,23
042121 C5                  A  6982    	PUSH	BC
042122 CD 8C 30 04         A  6983    	CALL	_putch
042126 C1                  A  6984    	POP	BC
042127 01000000            A  6985    	LD	BC,0
04212B C5                  A  6986    	PUSH	BC
04212C CD 8C 30 04         A  6987    	CALL	_putch
042130 C1                  A  6988    	POP	BC
042131 01850000            A  6989    	LD	BC,133
042135 C5                  A  6990    	PUSH	BC
042136 CD 8C 30 04         A  6991    	CALL	_putch
04213A C1                  A  6992    	POP	BC
04213B 01020000            A  6993    	LD	BC,2
04213F C5                  A  6994    	PUSH	BC
042140 CD 8C 30 04         A  6995    	CALL	_putch
042144 C1                  A  6996    	POP	BC
042145 01030000            A  6997    	LD	BC,3
042149 C5                  A  6998    	PUSH	BC
04214A CD 8C 30 04         A  6999    	CALL	_putch
04214E C1                  A  7000    	POP	BC
04214F FD21 37 44 04       A  7001    	LD	IY,_ay_states
042154 FD0711              A  7002    	LD	BC,(IY+%11)
042157 C5                  A  7003    	PUSH	BC
042158 CD BC 24 04         A  7004    	CALL	_write16bit
04215C C1                  A  7005    	POP	BC
04215D                     A  7006    L_223:
                           A  7007    ;  857	                    return 0;
                           A  7008    .LINE 857
                           A  7009    
04215D AF                  A  7010    	XOR	A,A
04215E C3 DB 23 04         A  7011    	JR	L_272
                           A  7012    ;  858	                case 0x07:
042162                     A  7013    L_224:
                           A  7014    .LINE 858
                           A  7015    
                           A  7016    ;  859	                    value = game.vgm_in
                           A  7017    .LINE 859
                           A  7018    
042162 01 CF 43 04         A  7019    	LD	BC,_game+1
042166 DD0FA2              A  7020    	LD	(IX+%FFFFFFA2),BC
042169 DD31A2              A  7021    	LD	IY,(IX+%FFFFFFA2)
04216C FD0765              A  7022    	LD	BC,(IY+%65)
04216F CD 60 3A 04         A  7023    	CALL	__stoiu
042173 FD0762              A  7024    	LD	BC,(IY+%62)
042176 09                  A  7025    	ADD	HL,BC
042177 7E                  A  7026    	LD	A,(HL)
042178 DD77FF              A  7027    	LD	(IX+%FFFFFFFF),A
04217B FD0765              A  7028    	LD	BC,(IY+%65)
04217E 03                  A  7029    	INC	BC
04217F FD7165              A  7030    	LD	(IY+%65),C
042182 FD7066              A  7031    	LD	(IY+%66),B
                           A  7032    ;  860	                    ay_states[0].enable
                           A  7033    .LINE 860
                           A  7034    
042185 DD7EFF              A  7035    	LD	A,(IX+%FFFFFFFF)
042188 E601                A  7036    	AND	A,%1
04218A 20 09               A  7037    	JR	NZ,L_227
04218C 01010000            A  7038    	LD	BC,1
042190 DD0FED              A  7039    	LD	(IX+%FFFFFFED),BC
042193 18 07               A  7040    	JR	L_228
042195                     A  7041    L_227:
042195 01000000            A  7042    	LD	BC,0
042199 DD0FED              A  7043    	LD	(IX+%FFFFFFED),BC
04219C                     A  7044    L_228:
04219C DD7EED              A  7045    	LD	A,(IX+%FFFFFFED)
04219F 32 3D 44 04         A  7046    	LD	(_ay_states+6),A
                           A  7047    ;  861	                    ay_states[1].enable
                           A  7048    .LINE 861
                           A  7049    
0421A3 DD7EFF              A  7050    	LD	A,(IX+%FFFFFFFF)
0421A6 E602                A  7051    	AND	A,%2
0421A8 20 09               A  7052    	JR	NZ,L_231
0421AA 01010000            A  7053    	LD	BC,1
0421AE DD0FEA              A  7054    	LD	(IX+%FFFFFFEA),BC
0421B1 18 07               A  7055    	JR	L_232
0421B3                     A  7056    L_231:
0421B3 01000000            A  7057    	LD	BC,0
0421B7 DD0FEA              A  7058    	LD	(IX+%FFFFFFEA),BC
0421BA                     A  7059    L_232:
0421BA DD7EEA              A  7060    	LD	A,(IX+%FFFFFFEA)
0421BD FD21 37 44 04       A  7061    	LD	IY,_ay_states
0421C2 FD770D              A  7062    	LD	(IY+%D),A
                           A  7063    ;  862	                    ay_states[2].enable
                           A  7064    .LINE 862
                           A  7065    
0421C5 DD7EFF              A  7066    	LD	A,(IX+%FFFFFFFF)
0421C8 E604                A  7067    	AND	A,%4
0421CA 20 09               A  7068    	JR	NZ,L_235
0421CC 01010000            A  7069    	LD	BC,1
0421D0 DD0FE7              A  7070    	LD	(IX+%FFFFFFE7),BC
0421D3 18 07               A  7071    	JR	L_236
0421D5                     A  7072    L_235:
0421D5 01000000            A  7073    	LD	BC,0
0421D9 DD0FE7              A  7074    	LD	(IX+%FFFFFFE7),BC
0421DC                     A  7075    L_236:
0421DC ED030E              A  7076    	LEA	BC,IY+%E
0421DF DD0FFA              A  7077    	LD	(IX+%FFFFFFFA),BC
0421E2 DD7EE7              A  7078    	LD	A,(IX+%FFFFFFE7)
0421E5 FD7714              A  7079    	LD	(IY+%14),A
                           A  7080    ;  863	
                           A  7081    ;  864	                    change_volume(0, !!
                           A  7082    .LINE 864
                           A  7083    
0421E8 01170000            A  7084    	LD	BC,23
0421EC C5                  A  7085    	PUSH	BC
0421ED CD 8C 30 04         A  7086    	CALL	_putch
0421F1 C1                  A  7087    	POP	BC
0421F2 01000000            A  7088    	LD	BC,0
0421F6 C5                  A  7089    	PUSH	BC
0421F7 CD 8C 30 04         A  7090    	CALL	_putch
0421FB C1                  A  7091    	POP	BC
0421FC 01850000            A  7092    	LD	BC,133
042200 C5                  A  7093    	PUSH	BC
042201 CD 8C 30 04         A  7094    	CALL	_putch
042205 C1                  A  7095    	POP	BC
042206 01000000            A  7096    	LD	BC,0
04220A C5                  A  7097    	PUSH	BC
04220B CD 8C 30 04         A  7098    	CALL	_putch
04220F C1                  A  7099    	POP	BC
042210 01020000            A  7100    	LD	BC,2
042214 C5                  A  7101    	PUSH	BC
042215 CD 8C 30 04         A  7102    	CALL	_putch
042219 C1                  A  7103    	POP	BC
04221A 3A 3D 44 04         A  7104    	LD	A,(_ay_states+6)
04221E B7                  A  7105    	OR	A,A
04221F 28 09               A  7106    	JR	Z,L_239
042221 01010000            A  7107    	LD	BC,1
042225 DD0FF6              A  7108    	LD	(IX+%FFFFFFF6),BC
042228 18 07               A  7109    	JR	L_240
04222A                     A  7110    L_239:
04222A 01000000            A  7111    	LD	BC,0
04222E DD0FF6              A  7112    	LD	(IX+%FFFFFFF6),BC
042231                     A  7113    L_240:
042231 3A 37 44 04         A  7114    	LD	A,(_ay_states)
042235 B7ED62              A  7115    	UEXT	HL
042238 6F                  A  7116    	LD	L,A
042239 DD07F6              A  7117    	LD	BC,(IX+%FFFFFFF6)
04223C CD 6A 3C 04         A  7118    	CALL	__imuls
042240 E5C1                A  7119    	LD	BC,HL
042242 CD A6 3C 04         A  7120    	CALL	__itol
042246 CD E0 3B 04         A  7121    	CALL	__ltof
04224A 5F                  A  7122    	LD	E,A
04224B C5E1                A  7123    	LD	HL,BC
04224D ED4B E8 43 04       A  7124    	LD	BC,(_game+26)
042252 3A EB 43 04         A  7125    	LD	A,(_game+29)
042256 CD A0 39 04         A  7126    	CALL	__fmul
04225A CD ED 3C 04         A  7127    	CALL	__ftol
04225E C5                  A  7128    	PUSH	BC
04225F CD 8C 30 04         A  7129    	CALL	_putch
042263 C1                  A  7130    	POP	BC
                           A  7131    ;  865	                    change_volume(1, !!
                           A  7132    .LINE 865
                           A  7133    
042264 01170000            A  7134    	LD	BC,23
042268 C5                  A  7135    	PUSH	BC
042269 CD 8C 30 04         A  7136    	CALL	_putch
04226D C1                  A  7137    	POP	BC
04226E 01000000            A  7138    	LD	BC,0
042272 C5                  A  7139    	PUSH	BC
042273 CD 8C 30 04         A  7140    	CALL	_putch
042277 C1                  A  7141    	POP	BC
042278 01850000            A  7142    	LD	BC,133
04227C C5                  A  7143    	PUSH	BC
04227D CD 8C 30 04         A  7144    	CALL	_putch
042281 C1                  A  7145    	POP	BC
042282 01010000            A  7146    	LD	BC,1
042286 C5                  A  7147    	PUSH	BC
042287 CD 8C 30 04         A  7148    	CALL	_putch
04228B C1                  A  7149    	POP	BC
04228C 01020000            A  7150    	LD	BC,2
042290 C5                  A  7151    	PUSH	BC
042291 CD 8C 30 04         A  7152    	CALL	_putch
042295 C1                  A  7153    	POP	BC
042296 FD21 37 44 04       A  7154    	LD	IY,_ay_states
04229B FD7E0D              A  7155    	LD	A,(IY+%D)
04229E B7                  A  7156    	OR	A,A
04229F 28 09               A  7157    	JR	Z,L_245
0422A1 01010000            A  7158    	LD	BC,1
0422A5 DD0FF3              A  7159    	LD	(IX+%FFFFFFF3),BC
0422A8 18 07               A  7160    	JR	L_246
0422AA                     A  7161    L_245:
0422AA 01000000            A  7162    	LD	BC,0
0422AE DD0FF3              A  7163    	LD	(IX+%FFFFFFF3),BC
0422B1                     A  7164    L_246:
0422B1 FD7E07              A  7165    	LD	A,(IY+%7)
0422B4 B7ED62              A  7166    	UEXT	HL
0422B7 6F                  A  7167    	LD	L,A
0422B8 DD07F3              A  7168    	LD	BC,(IX+%FFFFFFF3)
0422BB CD 6A 3C 04         A  7169    	CALL	__imuls
0422BF E5C1                A  7170    	LD	BC,HL
0422C1 CD A6 3C 04         A  7171    	CALL	__itol
0422C5 CD E0 3B 04         A  7172    	CALL	__ltof
0422C9 5F                  A  7173    	LD	E,A
0422CA C5E1                A  7174    	LD	HL,BC
0422CC ED4B E8 43 04       A  7175    	LD	BC,(_game+26)
0422D1 3A EB 43 04         A  7176    	LD	A,(_game+29)
0422D5 CD A0 39 04         A  7177    	CALL	__fmul
0422D9 CD ED 3C 04         A  7178    	CALL	__ftol
0422DD C5                  A  7179    	PUSH	BC
0422DE CD 8C 30 04         A  7180    	CALL	_putch
0422E2 C1                  A  7181    	POP	BC
                           A  7182    ;  866	                    change_volume(2, !!
                           A  7183    .LINE 866
                           A  7184    
0422E3 01170000            A  7185    	LD	BC,23
0422E7 C5                  A  7186    	PUSH	BC
0422E8 CD 8C 30 04         A  7187    	CALL	_putch
0422EC C1                  A  7188    	POP	BC
0422ED 01000000            A  7189    	LD	BC,0
0422F1 C5                  A  7190    	PUSH	BC
0422F2 CD 8C 30 04         A  7191    	CALL	_putch
0422F6 C1                  A  7192    	POP	BC
0422F7 01850000            A  7193    	LD	BC,133
0422FB C5                  A  7194    	PUSH	BC
0422FC CD 8C 30 04         A  7195    	CALL	_putch
042300 C1                  A  7196    	POP	BC
042301 01020000            A  7197    	LD	BC,2
042305 C5                  A  7198    	PUSH	BC
042306 CD 8C 30 04         A  7199    	CALL	_putch
04230A C1                  A  7200    	POP	BC
04230B 01020000            A  7201    	LD	BC,2
04230F C5                  A  7202    	PUSH	BC
042310 CD 8C 30 04         A  7203    	CALL	_putch
042314 C1                  A  7204    	POP	BC
042315 DD31FA              A  7205    	LD	IY,(IX+%FFFFFFFA)
042318 FD7E06              A  7206    	LD	A,(IY+%6)
04231B B7                  A  7207    	OR	A,A
04231C 28 09               A  7208    	JR	Z,L_252
04231E 01010000            A  7209    	LD	BC,1
042322 DD0FF0              A  7210    	LD	(IX+%FFFFFFF0),BC
042325 18 07               A  7211    	JR	L_253
042327                     A  7212    L_252:
042327 01000000            A  7213    	LD	BC,0
04232B DD0FF0              A  7214    	LD	(IX+%FFFFFFF0),BC
04232E                     A  7215    L_253:
04232E DD31FA              A  7216    	LD	IY,(IX+%FFFFFFFA)
042331 FD7E00              A  7217    	LD	A,(IY+%0)
042334 B7ED62              A  7218    	UEXT	HL
042337 6F                  A  7219    	LD	L,A
042338 DD07F0              A  7220    	LD	BC,(IX+%FFFFFFF0)
04233B CD 6A 3C 04         A  7221    	CALL	__imuls
04233F E5C1                A  7222    	LD	BC,HL
042341 CD A6 3C 04         A  7223    	CALL	__itol
042345 CD E0 3B 04         A  7224    	CALL	__ltof
042349 5F                  A  7225    	LD	E,A
04234A C5E1                A  7226    	LD	HL,BC
04234C ED4B E8 43 04       A  7227    	LD	BC,(_game+26)
042351 3A EB 43 04         A  7228    	LD	A,(_game+29)
042355 CD A0 39 04         A  7229    	CALL	__fmul
042359 CD ED 3C 04         A  7230    	CALL	__ftol
04235D C5                  A  7231    	PUSH	BC
04235E CD 8C 30 04         A  7232    	CALL	_putch
042362 C1                  A  7233    	POP	BC
                           A  7234    ;  867	                    return 0;
                           A  7235    .LINE 867
                           A  7236    
042363 AF                  A  7237    	XOR	A,A
042364 18 75               A  7238    	JR	L_272
                           A  7239    ;  868	
                           A  7240    ;  869	                default:
042366                     A  7241    L_259:
                           A  7242    .LINE 869
                           A  7243    
                           A  7244    ;  870	                    // Invalid register
                           A  7245    ;  871	                    return 0;
                           A  7246    .LINE 871
                           A  7247    
042366 AF                  A  7248    	XOR	A,A
042367 18 72               A  7249    	JR	L_272
                           A  7250    ;  872	                }
                           A  7251    ;  873	                return 0;
                           A  7252    ;  874	            case 0x66: // end of sound 
042369                     A  7253    L_261:
                           A  7254    .LINE 874
                           A  7255    
                           A  7256    ;  875	                state = END_OF_SOUND_DA
                           A  7257    .LINE 875
                           A  7258    
042369 01030000            A  7259    	LD	BC,3
04236D ED43 EA 42 04       A  7260    	LD	(_state),BC
                           A  7261    ;  876	
                           A  7262    ;  877	                if (game.vgm_info.loop_
                           A  7263    .LINE 877
                           A  7264    
042372 01000000            A  7265    	LD	BC,0
042376 2A D9 43 04         A  7266    	LD	HL,(_game+11)
04237A B7                  A  7267    	OR	A,A
04237B ED42                A  7268    	SBC	HL,BC
04237D 28 3A               A  7269    	JR	Z,L_264
04237F 3A E3 43 04         A  7270    	LD	A,(_game+21)
042383 B7                  A  7271    	OR	A,A
042384 28 33               A  7272    	JR	Z,L_264
                           A  7273    ;  878	
                           A  7274    ;  879	                    //mos_flseek(fp, ga
                           A  7275    ;  880	                    game.vgm_info.data_
                           A  7276    .LINE 880
                           A  7277    
042386 01 CF 43 04         A  7278    	LD	BC,_game+1
04238A DD0F9F              A  7279    	LD	(IX+%FFFFFF9F),BC
04238D DD319F              A  7280    	LD	IY,(IX+%FFFFFF9F)
042390 FD070A              A  7281    	LD	BC,(IY+%A)
042393 FD7165              A  7282    	LD	(IY+%65),C
042396 FD7066              A  7283    	LD	(IY+%66),B
                           A  7284    ;  881						timer0_end();
                           A  7285    .LINE 881
                           A  7286    
042399 CD 37 35 04         A  7287    	CALL	_timer0_end
                           A  7288    ;  882						timer0_begin(313, 4
                           A  7289    .LINE 882
                           A  7290    
04239D 01040000            A  7291    	LD	BC,4
0423A1 C5                  A  7292    	PUSH	BC
0423A2 01390100            A  7293    	LD	BC,313
0423A6 C5                  A  7294    	PUSH	BC
0423A7 CD 7F 34 04         A  7295    	CALL	_timer0_begin
0423AB C1                  A  7296    	POP	BC
0423AC C1                  A  7297    	POP	BC
                           A  7298    ;  883	                    state = READ_COMMAN
                           A  7299    .LINE 883
                           A  7300    
0423AD 01000000            A  7301    	LD	BC,0
0423B1 ED43 EA 42 04       A  7302    	LD	(_state),BC
                           A  7303    ;  884	                    return 0;
                           A  7304    .LINE 884
                           A  7305    
0423B6 AF                  A  7306    	XOR	A,A
0423B7 18 22               A  7307    	JR	L_272
                           A  7308    ;  885	
                           A  7309    ;  886	                } else vgm_cleanup(game
0423B9                     A  7310    L_264:
                           A  7311    .LINE 886
                           A  7312    
0423B9 3A CE 43 04         A  7313    	LD	A,(_game)
0423BD 4F                  A  7314    	LD	C,A
0423BE 0600                A  7315    	LD	B,%0
0423C0 C5                  A  7316    	PUSH	BC
0423C1 CD 86 17 04         A  7317    	CALL	_vgm_cleanup
0423C5 C1                  A  7318    	POP	BC
                           A  7319    ;  887	
                           A  7320    ;  888	                return 1;
                           A  7321    .LINE 888
                           A  7322    
0423C6 3E01                A  7323    	LD	A,%1
0423C8 18 11               A  7324    	JR	L_272
                           A  7325    ;  889	            default:
0423CA                     A  7326    L_266:
                           A  7327    .LINE 889
                           A  7328    
                           A  7329    ;  890	                // unsupported command,
                           A  7330    ;  891	                return 0;
                           A  7331    .LINE 891
                           A  7332    
0423CA AF                  A  7333    	XOR	A,A
0423CB 18 0E               A  7334    	JR	L_272
                           A  7335    ;  892	                break;
                           A  7336    ;  893	            }
                           A  7337    ;  894	        }
0423CD                     A  7338    L_268:
                           A  7339    .LINE 894
                           A  7340    
                           A  7341    ;  895	        return 0;
                           A  7342    .LINE 895
                           A  7343    
0423CD AF                  A  7344    	XOR	A,A
0423CE 18 0B               A  7345    	JR	L_272
                           A  7346    ;  896	    default:
0423D0                     A  7347    L_269:
                           A  7348    .LINE 896
                           A  7349    
                           A  7350    ;  897	        // invalid state, exit loop
                           A  7351    ;  898	        state = END_OF_SOUND_DATA;
                           A  7352    .LINE 898
                           A  7353    
0423D0 01030000            A  7354    	LD	BC,3
0423D4 ED43 EA 42 04       A  7355    	LD	(_state),BC
                           A  7356    ;  899	        return 1;
                           A  7357    .LINE 899
                           A  7358    
0423D9 3E01                A  7359    	LD	A,%1
                           A  7360    ;  900	    }
                           A  7361    ;  901	    return 0;
                           A  7362    ;  902	}
0423DB                     A  7363    L_272:
                           A  7364    .LINE 902
                           A  7365    
0423DB DDF9                A  7366    	LD	SP,IX
0423DD DDE1                A  7367    	POP	IX
0423DF C9                  A  7368    	RET	
                           A  7369    
                           A  7370    
                           A  7371    ;**************************** _parse_vgm_file *
                           A  7372    ;Name                         Addr/Register   S
                           A  7373    ;_timer0_begin                       IMPORT  --
                           A  7374    ;_timer0_end                         IMPORT  --
                           A  7375    ;_ay_vol_table                       STATIC    
                           A  7376    ;_write16bit                         IMPORT  --
                           A  7377    ;_putch                              IMPORT  --
                           A  7378    ;_ay_states                          STATIC    
                           A  7379    ;_samples_to_wait                    STATIC    
                           A  7380    ;_target_timer0                      STATIC    
                           A  7381    ;_timer0                             IMPORT    
                           A  7382    ;_state                              STATIC    
                           A  7383    ;_game                               STATIC    
                           A  7384    ;G_37                                 IX-34    
                           A  7385    ;G_42                                 IX-31    
                           A  7386    ;G_39                                 IX-28    
                           A  7387    ;temp237                              IX-25    
                           A  7388    ;temp233                              IX-22    
                           A  7389    ;temp229                              IX-19    
                           A  7390    ;temp254                              IX-16    
                           A  7391    ;temp247                              IX-13    
                           A  7392    ;temp241                              IX-10    
                           A  7393    ;secondbyte                            IX-7    
                           A  7394    ;G_62                                  IX-6    
                           A  7395    ;firstbyte                             IX-3    
                           A  7396    ;byte                                  IX-2    
                           A  7397    ;value                                 IX-1    
                           A  7398    
                           A  7399    
                           A  7400    ; Stack Frame Size: 110 (bytes)
                           A  7401    ;       Spill Code: -4 (instruction)
                           A  7402    
                           A  7403    
                           A  7404    .ENDFUNC "parse_vgm_file",902,"_parse_vgm_file"
                           A  7405    ;  903	
                           A  7406    ;  904	int main(int argc, char * argv[]) {
0423E0                     A  7407    _main:
                           A  7408    .DEFINE "_main"
                           A  7409    
                           A  7410    .VALUE _main
                           A  7411    
                           A  7412    .CLASS 2
                           A  7413    
                           A  7414    .TYPE 68
                           A  7415    
                           A  7416    .ENDEF
                           A  7417    
                           A  7418    .BEGFUNC "main",904,"_main"
                           A  7419    
                           A  7420    .LINE 904
                           A  7421    
                           A  7422    .DEFINE "argc"
                           A  7423    
                           A  7424    .CLASS 65
                           A  7425    
                           A  7426    .VALUE 6
                           A  7427    
                           A  7428    .TYPE 4
                           A  7429    
                           A  7430    .ENDEF
                           A  7431    
                           A  7432    .DEFINE "argv"
                           A  7433    
                           A  7434    .CLASS 65
                           A  7435    
                           A  7436    .VALUE 9
                           A  7437    
                           A  7438    .TYPE 290
                           A  7439    
                           A  7440    .ENDEF
                           A  7441    
0423E0 DDE5                A  7442    	PUSH	IX
0423E2 DD210000 00         A  7443    	LD	IX,0
0423E7 DD39                A  7444    	ADD	IX,SP
0423E9 C5                  A  7445    	PUSH	BC
0423EA C5                  A  7446    	PUSH	BC
                           A  7447    ;  905		
                           A  7448    ;  906		int i = 0, j = 0;
                           A  7449    ;  907		UINT24 t = 0;
                           A  7450    ;  908		uint8_t key = 0, keycount;
                           A  7451    ;  909		FIL *fo;
                           A  7452    ;  910		
                           A  7453    ;  911	// 	if (argc < 2) {
                           A  7454    ;  912			
                           A  7455    ;  913		//	printf("Usage: play [song.vgm]"
                           A  7456    ;  914			//return 0;
                           A  7457    ;  915			
                           A  7458    ;  916		//}
                           A  7459    ;  917			
                           A  7460    ;  918		game.vgm_info.loop_enabled = false;
                           A  7461    .LINE 918
                           A  7462    
0423EB 01 CF 43 04         A  7463    	LD	BC,_game+1
0423EF DD0FFD              A  7464    	LD	(IX+%FFFFFFFD),BC
0423F2 DD0FFA              A  7465    	LD	(IX+%FFFFFFFA),BC
0423F5 AF                  A  7466    	XOR	A,A
0423F6 32 E3 43 04         A  7467    	LD	(_game+21),A
                           A  7468    ;  919		//for (i = 0; i < argc; i++) printf
                           A  7469    ;  920		if (!strcmp(argv[2], "loop=true")) 
                           A  7470    .LINE 920
                           A  7471    
0423FA 01 A4 43 04         A  7472    	LD	BC,L__126
0423FE C5                  A  7473    	PUSH	BC
0423FF DD3109              A  7474    	LD	IY,(IX+%9)
042402 ED2306              A  7475    	LEA	HL,IY+%6
042405 ED07                A  7476    	LD	BC,(HL)
042407 C5                  A  7477    	PUSH	BC
042408 CD 68 39 04         A  7478    	CALL	_strcmp
04240C C1                  A  7479    	POP	BC
04240D C1                  A  7480    	POP	BC
04240E 01000000            A  7481    	LD	BC,0
042412 B7                  A  7482    	OR	A,A
042413 ED42                A  7483    	SBC	HL,BC
042415 20 09               A  7484    	JR	NZ,L_274
042417 DD31FD              A  7485    	LD	IY,(IX+%FFFFFFFD)
04241A FD361401            A  7486    	LD	(IY+%14),%1
                           A  7487    ;  921		else game.vgm_info.loop_enabled = f
                           A  7488    .LINE 921
                           A  7489    
04241E 18 07               A  7490    	JR	L_275
042420                     A  7491    L_274:
042420 DD31FA              A  7492    	LD	IY,(IX+%FFFFFFFA)
042423 FD361400            A  7493    	LD	(IY+%14),%0
042427                     A  7494    L_275:
                           A  7495    ;  922		
                           A  7496    ;  923		game.vgm_file = mos_fopen(argv[1], 
                           A  7497    .LINE 923
                           A  7498    
042427 01010000            A  7499    	LD	BC,1
04242B C5                  A  7500    	PUSH	BC
04242C DD3109              A  7501    	LD	IY,(IX+%9)
04242F ED2303              A  7502    	LEA	HL,IY+%3
042432 ED07                A  7503    	LD	BC,(HL)
042434 C5                  A  7504    	PUSH	BC
042435 CD E4 32 04         A  7505    	CALL	_mos_fopen
042439 C1                  A  7506    	POP	BC
04243A C1                  A  7507    	POP	BC
04243B 32 CE 43 04         A  7508    	LD	(_game),A
                           A  7509    ;  924	    if (!game.vgm_file) { printf("Error
                           A  7510    .LINE 924
                           A  7511    
04243F B7                  A  7512    	OR	A,A
042440 20 30               A  7513    	JR	NZ,L_278
042442 01 DD 3A 04         A  7514    	LD	BC,___print_uputch
042446 ED43 FC 42 04       A  7515    	LD	(___print_xputch),BC
04244B 01 AE 43 04         A  7516    	LD	BC,L__129
04244F C5                  A  7517    	PUSH	BC
042450 CD EE 37 04         A  7518    	CALL	___print_sendstring
042454 C1                  A  7519    	POP	BC
042455 DD3109              A  7520    	LD	IY,(IX+%9)
042458 ED2303              A  7521    	LEA	HL,IY+%3
04245B ED07                A  7522    	LD	BC,(HL)
04245D C5                  A  7523    	PUSH	BC
04245E CD EE 37 04         A  7524    	CALL	___print_sendstring
042462 C1                  A  7525    	POP	BC
042463 01 CA 43 04         A  7526    	LD	BC,L__130
042467 C5                  A  7527    	PUSH	BC
042468 CD EE 37 04         A  7528    	CALL	___print_sendstring
04246C C1                  A  7529    	POP	BC
04246D B7                  A  7530    	OR	A,A
04246E ED62                A  7531    	SBC	HL,HL
042470 18 45               A  7532    	JR	L_283
042472                     A  7533    L_278:
                           A  7534    ;  925		
                           A  7535    ;  926		if (vgm_init(game.vgm_file) == 0) r
                           A  7536    .LINE 926
                           A  7537    
042472 3A CE 43 04         A  7538    	LD	A,(_game)
042476 4F                  A  7539    	LD	C,A
042477 0600                A  7540    	LD	B,%0
042479 C5                  A  7541    	PUSH	BC
04247A CD 27 12 04         A  7542    	CALL	_vgm_init
04247E C1                  A  7543    	POP	BC
04247F B7                  A  7544    	OR	A,A
042480 20 05               A  7545    	JR	NZ,L_279
042482 B7                  A  7546    	OR	A,A
042483 ED62                A  7547    	SBC	HL,HL
042485 18 30               A  7548    	JR	L_283
042487                     A  7549    L_279:
                           A  7550    ;  927		
                           A  7551    ;  928		game.vgm_info.volume_multiplier = 0
                           A  7552    .LINE 928
                           A  7553    
042487 01CDCC4C            A  7554    	LD	BC,5033165
04248B 3E3E                A  7555    	LD	A,%3E
04248D ED43 E8 43 04       A  7556    	LD	(_game+26),BC
042492 32 EB 43 04         A  7557    	LD	(_game+29),A
                           A  7558    ;  929		//printf("Size = %u", fo->obj.objsi
                           A  7559    ;  930		
                           A  7560    ;  931		while (parse_vgm_file() != 1);
042496                     A  7561    L_281:
                           A  7562    .LINE 931
                           A  7563    
042496 CD 41 18 04         A  7564    	CALL	_parse_vgm_file
04249A B7ED62              A  7565    	UEXT	HL
04249D 6F                  A  7566    	LD	L,A
04249E 01010000            A  7567    	LD	BC,1
0424A2 B7                  A  7568    	OR	A,A
0424A3 ED42                A  7569    	SBC	HL,BC
0424A5 20 EF               A  7570    	JR	NZ,L_281
                           A  7571    ;  932		
                           A  7572    ;  933		vgm_cleanup(game.vgm_file); 
                           A  7573    .LINE 933
                           A  7574    
0424A7 3A CE 43 04         A  7575    	LD	A,(_game)
0424AB 4F                  A  7576    	LD	C,A
0424AC 0600                A  7577    	LD	B,%0
0424AE C5                  A  7578    	PUSH	BC
0424AF CD 86 17 04         A  7579    	CALL	_vgm_cleanup
0424B3 C1                  A  7580    	POP	BC
                           A  7581    ;  934	
                           A  7582    ;  935		return 0;
                           A  7583    .LINE 935
                           A  7584    
0424B4 B7                  A  7585    	OR	A,A
0424B5 ED62                A  7586    	SBC	HL,HL
                           A  7587    ;  936		
                           A  7588    ;  937	}
0424B7                     A  7589    L_283:
                           A  7590    .LINE 937
                           A  7591    
0424B7 DDF9                A  7592    	LD	SP,IX
0424B9 DDE1                A  7593    	POP	IX
0424BB C9                  A  7594    	RET	
                           A  7595    
                           A  7596    
                           A  7597    ;**************************** _main ***********
                           A  7598    ;Name                         Addr/Register   S
                           A  7599    ;___print_sendstring                 IMPORT  --
                           A  7600    ;___print_xputch                     IMPORT    
                           A  7601    ;___print_uputch                     IMPORT  --
                           A  7602    ;_mos_fopen                          IMPORT  --
                           A  7603    ;_strcmp                             IMPORT  --
                           A  7604    ;_game                               STATIC    
                           A  7605    ;G_69                                  IX-6    
                           A  7606    ;G_68                                  IX-3    
                           A  7607    ;argv                                  IX+9    
                           A  7608    ;argc                                  IX+6    
                           A  7609    
                           A  7610    
                           A  7611    ; Stack Frame Size: 18 (bytes)
                           A  7612    ;       Spill Code: -4 (instruction)
                           A  7613    
                           A  7614    
                           A  7615    .ENDFUNC "main",937,"_main"
                           A  7616    	SEGMENT STRSECT
0443A4                     A  7617    L__126:
0443A4 6C6F6F70 3D747275   A  7618    	DB	"loop=true"
0443AC 65 
0443AD 00                  A  7619    	DB	0
0443AE                     A  7620    L__129:
0443AE 4572726F 723A2063   A  7621    	DB	"Error: could not open file "
0443B6 6F756C64 206E6F74 
0443BE 206F7065 6E206669 
0443C6 6C6520 
0443C9 00                  A  7622    	DB	0
0443CA                     A  7623    L__130:
0443CA 2E                  A  7624    	DB	"."
0443CB 0D0A00              A  7625    	DB	13,10,0
                           A  7626    	XREF _write32bit:ROM
                           A  7627    	XREF _write16bit:ROM
                           A  7628    	XREF _timer0_end:ROM
                           A  7629    	XREF _timer0_begin:ROM
                           A  7630    	XREF _timer0:ROM
                           A  7631    	XREF _mos_flseek:ROM
                           A  7632    	XREF _mos_fread:ROM
                           A  7633    	XREF _mos_feof:ROM
                           A  7634    	XREF _mos_fgetc:ROM
                           A  7635    	XREF _mos_fclose:ROM
                           A  7636    	XREF _mos_fopen:ROM
                           A  7637    	XREF _getsysvar_audioSuccess:ROM
                           A  7638    	XREF _mos_puts:ROM
                           A  7639    	XREF _waitvblank:ROM
                           A  7640    	XREF _putch:ROM
                           A  7641    	XREF _strcmp:ROM
                           A  7642    	XREF _malloc:ROM
                           A  7643    	XREF _free:ROM
                           A  7644    	XREF __u_uitoa:ROM
                           A  7645    	XREF ___print_sendstring:ROM
                           A  7646    	XREF ___print_xputch:ROM
                           A  7647    	XREF ___print_uputch:ROM
                           A  7648    	XREF ___print_fmt:ROM
                           A  7649    	XREF __lcmpu:ROM
                           A  7650    	XREF __ladd:ROM
                           A  7651    	XREF __lsub:ROM
                           A  7652    	XREF __imuls:ROM
                           A  7653    	XREF __idivu:ROM
                           A  7654    	XREF __ior:ROM
                           A  7655    	XREF __lor:ROM
                           A  7656    	XREF __smulu:ROM
                           A  7657    	XREF __lshru:ROM
                           A  7658    	XREF __ishl:ROM
                           A  7659    	XREF __fmul:ROM
                           A  7660    	XREF __ftol:ROM
                           A  7661    	XREF __ltof:ROM
                           A  7662    	XREF __ultof:ROM
                           A  7663    	XREF __stoiu:ROM
                           A  7664    	XREF __itol:ROM
                           A  7665    	XREF __ildix:ROM
                           A  7666    	XREF __istix:ROM
                           A  7667    	XREF __imul_b:ROM
                           A  7668    	XREF __ladd_b:ROM
                           A  7669    	XREF __ishl_b:ROM
                           A  7670    	XREF __ishrs_b:ROM
                           A  7671    	XDEF _main
                           A  7672    	XDEF _parse_vgm_file
                           A  7673    	XDEF _vgm_cleanup
                           A  7674    	XDEF _vgm_loop_init
                           A  7675    	XDEF _vgm_init
                           A  7676    	XDEF _samples_to_wait
                           A  7677    	XDEF _delay_length
                           A  7678    	XDEF _target_timer0
                           A  7679    	XDEF _start_timer0
                           A  7680    	XDEF _state
                           A  7681    	XDEF _l2b
                           A  7682    	XDEF _littletobig32
                           A  7683    	XDEF _bigtolittle32
                           A  7684    	XDEF _little_long
                           A  7685    	XDEF _ym_vol_table
                           A  7686    	XDEF _ay_vol_table
                           A  7687    	XDEF _process_0x50_command
                           A  7688    	XDEF _sn_vol_table
                           A  7689    	XDEF _sn_channels
                           A  7690    	XDEF _sn
                           A  7691    	XDEF _ay_states
                           A  7692    	XDEF _load_wav
                           A  7693    	XDEF _play_sample
                           A  7694    	XDEF _play_advanced_keep
                           A  7695    	XDEF _play_advanced
                           A  7696    	XDEF _play_saw_force
                           A  7697    	XDEF _play_simple_force
                           A  7698    	XDEF _reset_channel
                           A  7699    	XDEF _play_simple
                           A  7700    	XDEF _channel_ready
                           A  7701    	XDEF _isKthBitSet
                           A  7702    	XDEF _delay_secs
                           A  7703    	XDEF _delay_cents
                           A  7704    	XDEF _delay_ticks
                           A  7705    	XDEF _game
                           A  7706    	END


Errors: 0
Warnings: 0
Lines Assembled: 7707
